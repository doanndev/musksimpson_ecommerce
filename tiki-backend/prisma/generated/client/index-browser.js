
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.7.0
 * Query Engine version: 3cff47a7f5d65c3ea74883f1d736e41d68ce91ed
 */
Prisma.prismaVersion = {
  client: "6.7.0",
  engine: "3cff47a7f5d65c3ea74883f1d736e41d68ce91ed"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UsersScalarFieldEnum = {
  id: 'id',
  uuid: 'uuid',
  username: 'username',
  email: 'email',
  full_name: 'full_name',
  password: 'password',
  phone_number: 'phone_number',
  avatar: 'avatar',
  gender: 'gender',
  day_of_birth: 'day_of_birth',
  email_verified_at: 'email_verified_at',
  last_login: 'last_login',
  role_id: 'role_id',
  is_public: 'is_public',
  is_activated: 'is_activated',
  is_deleted: 'is_deleted',
  two_factor_enabled: 'two_factor_enabled',
  provider: 'provider',
  provider_id: 'provider_id',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.RolesScalarFieldEnum = {
  id: 'id',
  name: 'name',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.PermissionsScalarFieldEnum = {
  id: 'id',
  name: 'name',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Role_permissionsScalarFieldEnum = {
  id: 'id',
  role_id: 'role_id',
  permission_id: 'permission_id',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.ShopsScalarFieldEnum = {
  id: 'id',
  uuid: 'uuid',
  seller_id: 'seller_id',
  name: 'name',
  slug: 'slug',
  description: 'description',
  logo: 'logo',
  address_id: 'address_id',
  rating: 'rating',
  is_active: 'is_active',
  is_deleted: 'is_deleted',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.AddressesScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  full_name: 'full_name',
  phone_number: 'phone_number',
  address: 'address',
  province_id: 'province_id',
  province_name: 'province_name',
  district_id: 'district_id',
  district_name: 'district_name',
  ward_code: 'ward_code',
  ward_name: 'ward_name',
  region_id: 'region_id',
  type_address: 'type_address',
  is_default: 'is_default',
  is_deleted: 'is_deleted',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.ProductsScalarFieldEnum = {
  id: 'id',
  uuid: 'uuid',
  name: 'name',
  slug: 'slug',
  description: 'description',
  old_price: 'old_price',
  new_price: 'new_price',
  discount_percentage: 'discount_percentage',
  stock: 'stock',
  sold: 'sold',
  weight: 'weight',
  category_id: 'category_id',
  shop_id: 'shop_id',
  is_deleted: 'is_deleted',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.CategoriesScalarFieldEnum = {
  id: 'id',
  uuid: 'uuid',
  name: 'name',
  icon: 'icon',
  slug: 'slug',
  parent_id: 'parent_id',
  is_deleted: 'is_deleted',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Category_breadcrumbsScalarFieldEnum = {
  id: 'id',
  category_id: 'category_id',
  name: 'name',
  path: 'path',
  level: 'level',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Product_imagesScalarFieldEnum = {
  id: 'id',
  product_id: 'product_id',
  url: 'url',
  is_primary: 'is_primary',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Product_specificationsScalarFieldEnum = {
  id: 'id',
  product_id: 'product_id',
  key: 'key',
  value: 'value',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Product_attributesScalarFieldEnum = {
  id: 'id',
  product_id: 'product_id',
  specification_id: 'specification_id',
  name: 'name',
  value: 'value',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.OrdersScalarFieldEnum = {
  id: 'id',
  uuid: 'uuid',
  user_id: 'user_id',
  address_id: 'address_id',
  total_amount: 'total_amount',
  status: 'status',
  is_deleted: 'is_deleted',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Order_itemsScalarFieldEnum = {
  id: 'id',
  order_id: 'order_id',
  product_id: 'product_id',
  quantity: 'quantity',
  unit_price: 'unit_price',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Cart_itemsScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  product_id: 'product_id',
  quantity: 'quantity',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.ReviewsScalarFieldEnum = {
  id: 'id',
  uuid: 'uuid',
  user_id: 'user_id',
  product_id: 'product_id',
  rating: 'rating',
  comment: 'comment',
  is_deleted: 'is_deleted',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.PaymentsScalarFieldEnum = {
  id: 'id',
  uuid: 'uuid',
  order_id: 'order_id',
  user_id: 'user_id',
  amount: 'amount',
  provider: 'provider',
  transaction_id: 'transaction_id',
  status: 'status',
  items: 'items',
  is_deleted: 'is_deleted',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Email_blacklistScalarFieldEnum = {
  id: 'id',
  email: 'email',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.ConversationsScalarFieldEnum = {
  id: 'id',
  chat_id: 'chat_id',
  title: 'title',
  started_at: 'started_at',
  user_id: 'user_id'
};

exports.Prisma.MessagesScalarFieldEnum = {
  id: 'id',
  chat_id: 'chat_id',
  sender: 'sender',
  message: 'message',
  created_at: 'created_at'
};

exports.Prisma.Reset_password_tokenScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  token: 'token',
  expires_at: 'expires_at',
  created_at: 'created_at'
};

exports.Prisma.Seller_hidden_usersScalarFieldEnum = {
  id: 'id',
  seller_id: 'seller_id',
  user_id: 'user_id',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.usersOrderByRelevanceFieldEnum = {
  uuid: 'uuid',
  username: 'username',
  email: 'email',
  full_name: 'full_name',
  password: 'password',
  phone_number: 'phone_number',
  avatar: 'avatar',
  day_of_birth: 'day_of_birth',
  provider: 'provider',
  provider_id: 'provider_id'
};

exports.Prisma.shopsOrderByRelevanceFieldEnum = {
  uuid: 'uuid',
  name: 'name',
  slug: 'slug',
  description: 'description',
  logo: 'logo'
};

exports.Prisma.addressesOrderByRelevanceFieldEnum = {
  full_name: 'full_name',
  phone_number: 'phone_number',
  address: 'address',
  province_name: 'province_name',
  district_name: 'district_name',
  ward_code: 'ward_code',
  ward_name: 'ward_name'
};

exports.Prisma.productsOrderByRelevanceFieldEnum = {
  uuid: 'uuid',
  name: 'name',
  slug: 'slug',
  description: 'description'
};

exports.Prisma.categoriesOrderByRelevanceFieldEnum = {
  uuid: 'uuid',
  name: 'name',
  icon: 'icon',
  slug: 'slug'
};

exports.Prisma.category_breadcrumbsOrderByRelevanceFieldEnum = {
  name: 'name',
  path: 'path'
};

exports.Prisma.product_imagesOrderByRelevanceFieldEnum = {
  url: 'url'
};

exports.Prisma.product_specificationsOrderByRelevanceFieldEnum = {
  key: 'key',
  value: 'value'
};

exports.Prisma.product_attributesOrderByRelevanceFieldEnum = {
  name: 'name',
  value: 'value'
};

exports.Prisma.ordersOrderByRelevanceFieldEnum = {
  uuid: 'uuid'
};

exports.Prisma.reviewsOrderByRelevanceFieldEnum = {
  uuid: 'uuid',
  comment: 'comment'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.paymentsOrderByRelevanceFieldEnum = {
  uuid: 'uuid',
  provider: 'provider',
  transaction_id: 'transaction_id'
};

exports.Prisma.email_blacklistOrderByRelevanceFieldEnum = {
  email: 'email'
};

exports.Prisma.conversationsOrderByRelevanceFieldEnum = {
  chat_id: 'chat_id',
  title: 'title'
};

exports.Prisma.messagesOrderByRelevanceFieldEnum = {
  chat_id: 'chat_id',
  sender: 'sender',
  message: 'message'
};

exports.Prisma.reset_password_tokenOrderByRelevanceFieldEnum = {
  user_id: 'user_id',
  token: 'token'
};
exports.RoleEnum = exports.$Enums.RoleEnum = {
  ADMIN: 'ADMIN',
  USER: 'USER',
  SELLER: 'SELLER'
};

exports.PermissionEnum = exports.$Enums.PermissionEnum = {
  VIEW_USERS: 'VIEW_USERS',
  EDIT_USERS: 'EDIT_USERS',
  VIEW_PRODUCTS: 'VIEW_PRODUCTS',
  MANAGE_PRODUCTS: 'MANAGE_PRODUCTS',
  MANAGE_CATEGORIES: 'MANAGE_CATEGORIES',
  MANAGE_ADDRESSES: 'MANAGE_ADDRESSES',
  CREATE_REVIEW: 'CREATE_REVIEW',
  DELETE_REVIEW: 'DELETE_REVIEW',
  MANAGE_ORDERS: 'MANAGE_ORDERS',
  MANAGE_PERMISSIONS: 'MANAGE_PERMISSIONS',
  VIEW_ORDERS: 'VIEW_ORDERS',
  CREATE_SHOP: 'CREATE_SHOP',
  EDIT_SHOP: 'EDIT_SHOP',
  DELETE_SHOP: 'DELETE_SHOP',
  VIEW_SHOP: 'VIEW_SHOP',
  MANAGE_SHOPS: 'MANAGE_SHOPS',
  MANAGE_HIDDEN_USERS: 'MANAGE_HIDDEN_USERS'
};

exports.AddressTypeEnum = exports.$Enums.AddressTypeEnum = {
  HOME: 'HOME',
  WORK: 'WORK',
  OTHER: 'OTHER'
};

exports.OrderStatusEnum = exports.$Enums.OrderStatusEnum = {
  PENDING: 'PENDING',
  PROCESSING: 'PROCESSING',
  SHIPPING: 'SHIPPING',
  DELIVERED: 'DELIVERED',
  CANCELLED: 'CANCELLED'
};

exports.PaymentStatusEnum = exports.$Enums.PaymentStatusEnum = {
  PENDING: 'PENDING',
  COMPLETED: 'COMPLETED',
  FAILED: 'FAILED',
  REFUNDED: 'REFUNDED',
  PROCESSING: 'PROCESSING'
};

exports.Prisma.ModelName = {
  users: 'users',
  roles: 'roles',
  permissions: 'permissions',
  role_permissions: 'role_permissions',
  shops: 'shops',
  addresses: 'addresses',
  products: 'products',
  categories: 'categories',
  category_breadcrumbs: 'category_breadcrumbs',
  product_images: 'product_images',
  product_specifications: 'product_specifications',
  product_attributes: 'product_attributes',
  orders: 'orders',
  order_items: 'order_items',
  cart_items: 'cart_items',
  reviews: 'reviews',
  payments: 'payments',
  email_blacklist: 'email_blacklist',
  conversations: 'conversations',
  messages: 'messages',
  reset_password_token: 'reset_password_token',
  seller_hidden_users: 'seller_hidden_users'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
