
/**
 * Client
**/

import * as runtime from './runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model users
 * 
 */
export type users = $Result.DefaultSelection<Prisma.$usersPayload>
/**
 * Model roles
 * 
 */
export type roles = $Result.DefaultSelection<Prisma.$rolesPayload>
/**
 * Model permissions
 * 
 */
export type permissions = $Result.DefaultSelection<Prisma.$permissionsPayload>
/**
 * Model role_permissions
 * 
 */
export type role_permissions = $Result.DefaultSelection<Prisma.$role_permissionsPayload>
/**
 * Model shops
 * 
 */
export type shops = $Result.DefaultSelection<Prisma.$shopsPayload>
/**
 * Model addresses
 * 
 */
export type addresses = $Result.DefaultSelection<Prisma.$addressesPayload>
/**
 * Model products
 * 
 */
export type products = $Result.DefaultSelection<Prisma.$productsPayload>
/**
 * Model categories
 * 
 */
export type categories = $Result.DefaultSelection<Prisma.$categoriesPayload>
/**
 * Model category_breadcrumbs
 * 
 */
export type category_breadcrumbs = $Result.DefaultSelection<Prisma.$category_breadcrumbsPayload>
/**
 * Model product_images
 * 
 */
export type product_images = $Result.DefaultSelection<Prisma.$product_imagesPayload>
/**
 * Model product_specifications
 * 
 */
export type product_specifications = $Result.DefaultSelection<Prisma.$product_specificationsPayload>
/**
 * Model product_attributes
 * 
 */
export type product_attributes = $Result.DefaultSelection<Prisma.$product_attributesPayload>
/**
 * Model orders
 * 
 */
export type orders = $Result.DefaultSelection<Prisma.$ordersPayload>
/**
 * Model order_items
 * 
 */
export type order_items = $Result.DefaultSelection<Prisma.$order_itemsPayload>
/**
 * Model cart_items
 * 
 */
export type cart_items = $Result.DefaultSelection<Prisma.$cart_itemsPayload>
/**
 * Model reviews
 * 
 */
export type reviews = $Result.DefaultSelection<Prisma.$reviewsPayload>
/**
 * Model payments
 * 
 */
export type payments = $Result.DefaultSelection<Prisma.$paymentsPayload>
/**
 * Model email_blacklist
 * 
 */
export type email_blacklist = $Result.DefaultSelection<Prisma.$email_blacklistPayload>
/**
 * Model conversations
 * 
 */
export type conversations = $Result.DefaultSelection<Prisma.$conversationsPayload>
/**
 * Model messages
 * 
 */
export type messages = $Result.DefaultSelection<Prisma.$messagesPayload>
/**
 * Model reset_password_token
 * 
 */
export type reset_password_token = $Result.DefaultSelection<Prisma.$reset_password_tokenPayload>
/**
 * Model seller_hidden_users
 * 
 */
export type seller_hidden_users = $Result.DefaultSelection<Prisma.$seller_hidden_usersPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const RoleEnum: {
  ADMIN: 'ADMIN',
  USER: 'USER',
  SELLER: 'SELLER'
};

export type RoleEnum = (typeof RoleEnum)[keyof typeof RoleEnum]


export const PermissionEnum: {
  VIEW_USERS: 'VIEW_USERS',
  EDIT_USERS: 'EDIT_USERS',
  VIEW_PRODUCTS: 'VIEW_PRODUCTS',
  MANAGE_PRODUCTS: 'MANAGE_PRODUCTS',
  MANAGE_CATEGORIES: 'MANAGE_CATEGORIES',
  MANAGE_ADDRESSES: 'MANAGE_ADDRESSES',
  CREATE_REVIEW: 'CREATE_REVIEW',
  DELETE_REVIEW: 'DELETE_REVIEW',
  MANAGE_ORDERS: 'MANAGE_ORDERS',
  MANAGE_PERMISSIONS: 'MANAGE_PERMISSIONS',
  VIEW_ORDERS: 'VIEW_ORDERS',
  CREATE_SHOP: 'CREATE_SHOP',
  EDIT_SHOP: 'EDIT_SHOP',
  DELETE_SHOP: 'DELETE_SHOP',
  VIEW_SHOP: 'VIEW_SHOP',
  MANAGE_SHOPS: 'MANAGE_SHOPS',
  MANAGE_HIDDEN_USERS: 'MANAGE_HIDDEN_USERS'
};

export type PermissionEnum = (typeof PermissionEnum)[keyof typeof PermissionEnum]


export const OrderStatusEnum: {
  PENDING: 'PENDING',
  PROCESSING: 'PROCESSING',
  SHIPPING: 'SHIPPING',
  DELIVERED: 'DELIVERED',
  CANCELLED: 'CANCELLED'
};

export type OrderStatusEnum = (typeof OrderStatusEnum)[keyof typeof OrderStatusEnum]


export const AddressTypeEnum: {
  HOME: 'HOME',
  WORK: 'WORK',
  OTHER: 'OTHER'
};

export type AddressTypeEnum = (typeof AddressTypeEnum)[keyof typeof AddressTypeEnum]


export const PaymentStatusEnum: {
  PENDING: 'PENDING',
  COMPLETED: 'COMPLETED',
  FAILED: 'FAILED',
  REFUNDED: 'REFUNDED',
  PROCESSING: 'PROCESSING'
};

export type PaymentStatusEnum = (typeof PaymentStatusEnum)[keyof typeof PaymentStatusEnum]

}

export type RoleEnum = $Enums.RoleEnum

export const RoleEnum: typeof $Enums.RoleEnum

export type PermissionEnum = $Enums.PermissionEnum

export const PermissionEnum: typeof $Enums.PermissionEnum

export type OrderStatusEnum = $Enums.OrderStatusEnum

export const OrderStatusEnum: typeof $Enums.OrderStatusEnum

export type AddressTypeEnum = $Enums.AddressTypeEnum

export const AddressTypeEnum: typeof $Enums.AddressTypeEnum

export type PaymentStatusEnum = $Enums.PaymentStatusEnum

export const PaymentStatusEnum: typeof $Enums.PaymentStatusEnum

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Users
 * const users = await prisma.users.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Users
   * const users = await prisma.users.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.users`: Exposes CRUD operations for the **users** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.users.findMany()
    * ```
    */
  get users(): Prisma.usersDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.roles`: Exposes CRUD operations for the **roles** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Roles
    * const roles = await prisma.roles.findMany()
    * ```
    */
  get roles(): Prisma.rolesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.permissions`: Exposes CRUD operations for the **permissions** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Permissions
    * const permissions = await prisma.permissions.findMany()
    * ```
    */
  get permissions(): Prisma.permissionsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.role_permissions`: Exposes CRUD operations for the **role_permissions** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Role_permissions
    * const role_permissions = await prisma.role_permissions.findMany()
    * ```
    */
  get role_permissions(): Prisma.role_permissionsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.shops`: Exposes CRUD operations for the **shops** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Shops
    * const shops = await prisma.shops.findMany()
    * ```
    */
  get shops(): Prisma.shopsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.addresses`: Exposes CRUD operations for the **addresses** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Addresses
    * const addresses = await prisma.addresses.findMany()
    * ```
    */
  get addresses(): Prisma.addressesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.products`: Exposes CRUD operations for the **products** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Products
    * const products = await prisma.products.findMany()
    * ```
    */
  get products(): Prisma.productsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.categories`: Exposes CRUD operations for the **categories** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Categories
    * const categories = await prisma.categories.findMany()
    * ```
    */
  get categories(): Prisma.categoriesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.category_breadcrumbs`: Exposes CRUD operations for the **category_breadcrumbs** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Category_breadcrumbs
    * const category_breadcrumbs = await prisma.category_breadcrumbs.findMany()
    * ```
    */
  get category_breadcrumbs(): Prisma.category_breadcrumbsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.product_images`: Exposes CRUD operations for the **product_images** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Product_images
    * const product_images = await prisma.product_images.findMany()
    * ```
    */
  get product_images(): Prisma.product_imagesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.product_specifications`: Exposes CRUD operations for the **product_specifications** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Product_specifications
    * const product_specifications = await prisma.product_specifications.findMany()
    * ```
    */
  get product_specifications(): Prisma.product_specificationsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.product_attributes`: Exposes CRUD operations for the **product_attributes** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Product_attributes
    * const product_attributes = await prisma.product_attributes.findMany()
    * ```
    */
  get product_attributes(): Prisma.product_attributesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.orders`: Exposes CRUD operations for the **orders** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Orders
    * const orders = await prisma.orders.findMany()
    * ```
    */
  get orders(): Prisma.ordersDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.order_items`: Exposes CRUD operations for the **order_items** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Order_items
    * const order_items = await prisma.order_items.findMany()
    * ```
    */
  get order_items(): Prisma.order_itemsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.cart_items`: Exposes CRUD operations for the **cart_items** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Cart_items
    * const cart_items = await prisma.cart_items.findMany()
    * ```
    */
  get cart_items(): Prisma.cart_itemsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.reviews`: Exposes CRUD operations for the **reviews** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Reviews
    * const reviews = await prisma.reviews.findMany()
    * ```
    */
  get reviews(): Prisma.reviewsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.payments`: Exposes CRUD operations for the **payments** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Payments
    * const payments = await prisma.payments.findMany()
    * ```
    */
  get payments(): Prisma.paymentsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.email_blacklist`: Exposes CRUD operations for the **email_blacklist** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Email_blacklists
    * const email_blacklists = await prisma.email_blacklist.findMany()
    * ```
    */
  get email_blacklist(): Prisma.email_blacklistDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.conversations`: Exposes CRUD operations for the **conversations** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Conversations
    * const conversations = await prisma.conversations.findMany()
    * ```
    */
  get conversations(): Prisma.conversationsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.messages`: Exposes CRUD operations for the **messages** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Messages
    * const messages = await prisma.messages.findMany()
    * ```
    */
  get messages(): Prisma.messagesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.reset_password_token`: Exposes CRUD operations for the **reset_password_token** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Reset_password_tokens
    * const reset_password_tokens = await prisma.reset_password_token.findMany()
    * ```
    */
  get reset_password_token(): Prisma.reset_password_tokenDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.seller_hidden_users`: Exposes CRUD operations for the **seller_hidden_users** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Seller_hidden_users
    * const seller_hidden_users = await prisma.seller_hidden_users.findMany()
    * ```
    */
  get seller_hidden_users(): Prisma.seller_hidden_usersDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.7.0
   * Query Engine version: 3cff47a7f5d65c3ea74883f1d736e41d68ce91ed
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    users: 'users',
    roles: 'roles',
    permissions: 'permissions',
    role_permissions: 'role_permissions',
    shops: 'shops',
    addresses: 'addresses',
    products: 'products',
    categories: 'categories',
    category_breadcrumbs: 'category_breadcrumbs',
    product_images: 'product_images',
    product_specifications: 'product_specifications',
    product_attributes: 'product_attributes',
    orders: 'orders',
    order_items: 'order_items',
    cart_items: 'cart_items',
    reviews: 'reviews',
    payments: 'payments',
    email_blacklist: 'email_blacklist',
    conversations: 'conversations',
    messages: 'messages',
    reset_password_token: 'reset_password_token',
    seller_hidden_users: 'seller_hidden_users'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "users" | "roles" | "permissions" | "role_permissions" | "shops" | "addresses" | "products" | "categories" | "category_breadcrumbs" | "product_images" | "product_specifications" | "product_attributes" | "orders" | "order_items" | "cart_items" | "reviews" | "payments" | "email_blacklist" | "conversations" | "messages" | "reset_password_token" | "seller_hidden_users"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      users: {
        payload: Prisma.$usersPayload<ExtArgs>
        fields: Prisma.usersFieldRefs
        operations: {
          findUnique: {
            args: Prisma.usersFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.usersFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          findFirst: {
            args: Prisma.usersFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.usersFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          findMany: {
            args: Prisma.usersFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>[]
          }
          create: {
            args: Prisma.usersCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          createMany: {
            args: Prisma.usersCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.usersDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          update: {
            args: Prisma.usersUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          deleteMany: {
            args: Prisma.usersDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.usersUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.usersUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          aggregate: {
            args: Prisma.UsersAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUsers>
          }
          groupBy: {
            args: Prisma.usersGroupByArgs<ExtArgs>
            result: $Utils.Optional<UsersGroupByOutputType>[]
          }
          count: {
            args: Prisma.usersCountArgs<ExtArgs>
            result: $Utils.Optional<UsersCountAggregateOutputType> | number
          }
        }
      }
      roles: {
        payload: Prisma.$rolesPayload<ExtArgs>
        fields: Prisma.rolesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.rolesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.rolesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolesPayload>
          }
          findFirst: {
            args: Prisma.rolesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.rolesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolesPayload>
          }
          findMany: {
            args: Prisma.rolesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolesPayload>[]
          }
          create: {
            args: Prisma.rolesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolesPayload>
          }
          createMany: {
            args: Prisma.rolesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.rolesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolesPayload>
          }
          update: {
            args: Prisma.rolesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolesPayload>
          }
          deleteMany: {
            args: Prisma.rolesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.rolesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.rolesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolesPayload>
          }
          aggregate: {
            args: Prisma.RolesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRoles>
          }
          groupBy: {
            args: Prisma.rolesGroupByArgs<ExtArgs>
            result: $Utils.Optional<RolesGroupByOutputType>[]
          }
          count: {
            args: Prisma.rolesCountArgs<ExtArgs>
            result: $Utils.Optional<RolesCountAggregateOutputType> | number
          }
        }
      }
      permissions: {
        payload: Prisma.$permissionsPayload<ExtArgs>
        fields: Prisma.permissionsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.permissionsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$permissionsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.permissionsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$permissionsPayload>
          }
          findFirst: {
            args: Prisma.permissionsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$permissionsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.permissionsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$permissionsPayload>
          }
          findMany: {
            args: Prisma.permissionsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$permissionsPayload>[]
          }
          create: {
            args: Prisma.permissionsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$permissionsPayload>
          }
          createMany: {
            args: Prisma.permissionsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.permissionsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$permissionsPayload>
          }
          update: {
            args: Prisma.permissionsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$permissionsPayload>
          }
          deleteMany: {
            args: Prisma.permissionsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.permissionsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.permissionsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$permissionsPayload>
          }
          aggregate: {
            args: Prisma.PermissionsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePermissions>
          }
          groupBy: {
            args: Prisma.permissionsGroupByArgs<ExtArgs>
            result: $Utils.Optional<PermissionsGroupByOutputType>[]
          }
          count: {
            args: Prisma.permissionsCountArgs<ExtArgs>
            result: $Utils.Optional<PermissionsCountAggregateOutputType> | number
          }
        }
      }
      role_permissions: {
        payload: Prisma.$role_permissionsPayload<ExtArgs>
        fields: Prisma.role_permissionsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.role_permissionsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$role_permissionsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.role_permissionsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$role_permissionsPayload>
          }
          findFirst: {
            args: Prisma.role_permissionsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$role_permissionsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.role_permissionsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$role_permissionsPayload>
          }
          findMany: {
            args: Prisma.role_permissionsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$role_permissionsPayload>[]
          }
          create: {
            args: Prisma.role_permissionsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$role_permissionsPayload>
          }
          createMany: {
            args: Prisma.role_permissionsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.role_permissionsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$role_permissionsPayload>
          }
          update: {
            args: Prisma.role_permissionsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$role_permissionsPayload>
          }
          deleteMany: {
            args: Prisma.role_permissionsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.role_permissionsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.role_permissionsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$role_permissionsPayload>
          }
          aggregate: {
            args: Prisma.Role_permissionsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRole_permissions>
          }
          groupBy: {
            args: Prisma.role_permissionsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Role_permissionsGroupByOutputType>[]
          }
          count: {
            args: Prisma.role_permissionsCountArgs<ExtArgs>
            result: $Utils.Optional<Role_permissionsCountAggregateOutputType> | number
          }
        }
      }
      shops: {
        payload: Prisma.$shopsPayload<ExtArgs>
        fields: Prisma.shopsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.shopsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$shopsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.shopsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$shopsPayload>
          }
          findFirst: {
            args: Prisma.shopsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$shopsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.shopsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$shopsPayload>
          }
          findMany: {
            args: Prisma.shopsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$shopsPayload>[]
          }
          create: {
            args: Prisma.shopsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$shopsPayload>
          }
          createMany: {
            args: Prisma.shopsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.shopsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$shopsPayload>
          }
          update: {
            args: Prisma.shopsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$shopsPayload>
          }
          deleteMany: {
            args: Prisma.shopsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.shopsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.shopsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$shopsPayload>
          }
          aggregate: {
            args: Prisma.ShopsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateShops>
          }
          groupBy: {
            args: Prisma.shopsGroupByArgs<ExtArgs>
            result: $Utils.Optional<ShopsGroupByOutputType>[]
          }
          count: {
            args: Prisma.shopsCountArgs<ExtArgs>
            result: $Utils.Optional<ShopsCountAggregateOutputType> | number
          }
        }
      }
      addresses: {
        payload: Prisma.$addressesPayload<ExtArgs>
        fields: Prisma.addressesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.addressesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$addressesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.addressesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$addressesPayload>
          }
          findFirst: {
            args: Prisma.addressesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$addressesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.addressesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$addressesPayload>
          }
          findMany: {
            args: Prisma.addressesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$addressesPayload>[]
          }
          create: {
            args: Prisma.addressesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$addressesPayload>
          }
          createMany: {
            args: Prisma.addressesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.addressesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$addressesPayload>
          }
          update: {
            args: Prisma.addressesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$addressesPayload>
          }
          deleteMany: {
            args: Prisma.addressesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.addressesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.addressesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$addressesPayload>
          }
          aggregate: {
            args: Prisma.AddressesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAddresses>
          }
          groupBy: {
            args: Prisma.addressesGroupByArgs<ExtArgs>
            result: $Utils.Optional<AddressesGroupByOutputType>[]
          }
          count: {
            args: Prisma.addressesCountArgs<ExtArgs>
            result: $Utils.Optional<AddressesCountAggregateOutputType> | number
          }
        }
      }
      products: {
        payload: Prisma.$productsPayload<ExtArgs>
        fields: Prisma.productsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.productsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.productsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productsPayload>
          }
          findFirst: {
            args: Prisma.productsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.productsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productsPayload>
          }
          findMany: {
            args: Prisma.productsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productsPayload>[]
          }
          create: {
            args: Prisma.productsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productsPayload>
          }
          createMany: {
            args: Prisma.productsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.productsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productsPayload>
          }
          update: {
            args: Prisma.productsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productsPayload>
          }
          deleteMany: {
            args: Prisma.productsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.productsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.productsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productsPayload>
          }
          aggregate: {
            args: Prisma.ProductsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProducts>
          }
          groupBy: {
            args: Prisma.productsGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProductsGroupByOutputType>[]
          }
          count: {
            args: Prisma.productsCountArgs<ExtArgs>
            result: $Utils.Optional<ProductsCountAggregateOutputType> | number
          }
        }
      }
      categories: {
        payload: Prisma.$categoriesPayload<ExtArgs>
        fields: Prisma.categoriesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.categoriesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$categoriesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.categoriesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$categoriesPayload>
          }
          findFirst: {
            args: Prisma.categoriesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$categoriesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.categoriesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$categoriesPayload>
          }
          findMany: {
            args: Prisma.categoriesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$categoriesPayload>[]
          }
          create: {
            args: Prisma.categoriesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$categoriesPayload>
          }
          createMany: {
            args: Prisma.categoriesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.categoriesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$categoriesPayload>
          }
          update: {
            args: Prisma.categoriesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$categoriesPayload>
          }
          deleteMany: {
            args: Prisma.categoriesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.categoriesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.categoriesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$categoriesPayload>
          }
          aggregate: {
            args: Prisma.CategoriesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCategories>
          }
          groupBy: {
            args: Prisma.categoriesGroupByArgs<ExtArgs>
            result: $Utils.Optional<CategoriesGroupByOutputType>[]
          }
          count: {
            args: Prisma.categoriesCountArgs<ExtArgs>
            result: $Utils.Optional<CategoriesCountAggregateOutputType> | number
          }
        }
      }
      category_breadcrumbs: {
        payload: Prisma.$category_breadcrumbsPayload<ExtArgs>
        fields: Prisma.category_breadcrumbsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.category_breadcrumbsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$category_breadcrumbsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.category_breadcrumbsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$category_breadcrumbsPayload>
          }
          findFirst: {
            args: Prisma.category_breadcrumbsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$category_breadcrumbsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.category_breadcrumbsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$category_breadcrumbsPayload>
          }
          findMany: {
            args: Prisma.category_breadcrumbsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$category_breadcrumbsPayload>[]
          }
          create: {
            args: Prisma.category_breadcrumbsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$category_breadcrumbsPayload>
          }
          createMany: {
            args: Prisma.category_breadcrumbsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.category_breadcrumbsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$category_breadcrumbsPayload>
          }
          update: {
            args: Prisma.category_breadcrumbsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$category_breadcrumbsPayload>
          }
          deleteMany: {
            args: Prisma.category_breadcrumbsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.category_breadcrumbsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.category_breadcrumbsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$category_breadcrumbsPayload>
          }
          aggregate: {
            args: Prisma.Category_breadcrumbsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCategory_breadcrumbs>
          }
          groupBy: {
            args: Prisma.category_breadcrumbsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Category_breadcrumbsGroupByOutputType>[]
          }
          count: {
            args: Prisma.category_breadcrumbsCountArgs<ExtArgs>
            result: $Utils.Optional<Category_breadcrumbsCountAggregateOutputType> | number
          }
        }
      }
      product_images: {
        payload: Prisma.$product_imagesPayload<ExtArgs>
        fields: Prisma.product_imagesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.product_imagesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$product_imagesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.product_imagesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$product_imagesPayload>
          }
          findFirst: {
            args: Prisma.product_imagesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$product_imagesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.product_imagesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$product_imagesPayload>
          }
          findMany: {
            args: Prisma.product_imagesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$product_imagesPayload>[]
          }
          create: {
            args: Prisma.product_imagesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$product_imagesPayload>
          }
          createMany: {
            args: Prisma.product_imagesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.product_imagesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$product_imagesPayload>
          }
          update: {
            args: Prisma.product_imagesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$product_imagesPayload>
          }
          deleteMany: {
            args: Prisma.product_imagesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.product_imagesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.product_imagesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$product_imagesPayload>
          }
          aggregate: {
            args: Prisma.Product_imagesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProduct_images>
          }
          groupBy: {
            args: Prisma.product_imagesGroupByArgs<ExtArgs>
            result: $Utils.Optional<Product_imagesGroupByOutputType>[]
          }
          count: {
            args: Prisma.product_imagesCountArgs<ExtArgs>
            result: $Utils.Optional<Product_imagesCountAggregateOutputType> | number
          }
        }
      }
      product_specifications: {
        payload: Prisma.$product_specificationsPayload<ExtArgs>
        fields: Prisma.product_specificationsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.product_specificationsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$product_specificationsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.product_specificationsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$product_specificationsPayload>
          }
          findFirst: {
            args: Prisma.product_specificationsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$product_specificationsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.product_specificationsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$product_specificationsPayload>
          }
          findMany: {
            args: Prisma.product_specificationsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$product_specificationsPayload>[]
          }
          create: {
            args: Prisma.product_specificationsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$product_specificationsPayload>
          }
          createMany: {
            args: Prisma.product_specificationsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.product_specificationsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$product_specificationsPayload>
          }
          update: {
            args: Prisma.product_specificationsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$product_specificationsPayload>
          }
          deleteMany: {
            args: Prisma.product_specificationsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.product_specificationsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.product_specificationsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$product_specificationsPayload>
          }
          aggregate: {
            args: Prisma.Product_specificationsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProduct_specifications>
          }
          groupBy: {
            args: Prisma.product_specificationsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Product_specificationsGroupByOutputType>[]
          }
          count: {
            args: Prisma.product_specificationsCountArgs<ExtArgs>
            result: $Utils.Optional<Product_specificationsCountAggregateOutputType> | number
          }
        }
      }
      product_attributes: {
        payload: Prisma.$product_attributesPayload<ExtArgs>
        fields: Prisma.product_attributesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.product_attributesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$product_attributesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.product_attributesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$product_attributesPayload>
          }
          findFirst: {
            args: Prisma.product_attributesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$product_attributesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.product_attributesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$product_attributesPayload>
          }
          findMany: {
            args: Prisma.product_attributesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$product_attributesPayload>[]
          }
          create: {
            args: Prisma.product_attributesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$product_attributesPayload>
          }
          createMany: {
            args: Prisma.product_attributesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.product_attributesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$product_attributesPayload>
          }
          update: {
            args: Prisma.product_attributesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$product_attributesPayload>
          }
          deleteMany: {
            args: Prisma.product_attributesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.product_attributesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.product_attributesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$product_attributesPayload>
          }
          aggregate: {
            args: Prisma.Product_attributesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProduct_attributes>
          }
          groupBy: {
            args: Prisma.product_attributesGroupByArgs<ExtArgs>
            result: $Utils.Optional<Product_attributesGroupByOutputType>[]
          }
          count: {
            args: Prisma.product_attributesCountArgs<ExtArgs>
            result: $Utils.Optional<Product_attributesCountAggregateOutputType> | number
          }
        }
      }
      orders: {
        payload: Prisma.$ordersPayload<ExtArgs>
        fields: Prisma.ordersFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ordersFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ordersPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ordersFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ordersPayload>
          }
          findFirst: {
            args: Prisma.ordersFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ordersPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ordersFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ordersPayload>
          }
          findMany: {
            args: Prisma.ordersFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ordersPayload>[]
          }
          create: {
            args: Prisma.ordersCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ordersPayload>
          }
          createMany: {
            args: Prisma.ordersCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.ordersDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ordersPayload>
          }
          update: {
            args: Prisma.ordersUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ordersPayload>
          }
          deleteMany: {
            args: Prisma.ordersDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ordersUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ordersUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ordersPayload>
          }
          aggregate: {
            args: Prisma.OrdersAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOrders>
          }
          groupBy: {
            args: Prisma.ordersGroupByArgs<ExtArgs>
            result: $Utils.Optional<OrdersGroupByOutputType>[]
          }
          count: {
            args: Prisma.ordersCountArgs<ExtArgs>
            result: $Utils.Optional<OrdersCountAggregateOutputType> | number
          }
        }
      }
      order_items: {
        payload: Prisma.$order_itemsPayload<ExtArgs>
        fields: Prisma.order_itemsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.order_itemsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$order_itemsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.order_itemsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$order_itemsPayload>
          }
          findFirst: {
            args: Prisma.order_itemsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$order_itemsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.order_itemsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$order_itemsPayload>
          }
          findMany: {
            args: Prisma.order_itemsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$order_itemsPayload>[]
          }
          create: {
            args: Prisma.order_itemsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$order_itemsPayload>
          }
          createMany: {
            args: Prisma.order_itemsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.order_itemsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$order_itemsPayload>
          }
          update: {
            args: Prisma.order_itemsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$order_itemsPayload>
          }
          deleteMany: {
            args: Prisma.order_itemsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.order_itemsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.order_itemsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$order_itemsPayload>
          }
          aggregate: {
            args: Prisma.Order_itemsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOrder_items>
          }
          groupBy: {
            args: Prisma.order_itemsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Order_itemsGroupByOutputType>[]
          }
          count: {
            args: Prisma.order_itemsCountArgs<ExtArgs>
            result: $Utils.Optional<Order_itemsCountAggregateOutputType> | number
          }
        }
      }
      cart_items: {
        payload: Prisma.$cart_itemsPayload<ExtArgs>
        fields: Prisma.cart_itemsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.cart_itemsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cart_itemsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.cart_itemsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cart_itemsPayload>
          }
          findFirst: {
            args: Prisma.cart_itemsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cart_itemsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.cart_itemsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cart_itemsPayload>
          }
          findMany: {
            args: Prisma.cart_itemsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cart_itemsPayload>[]
          }
          create: {
            args: Prisma.cart_itemsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cart_itemsPayload>
          }
          createMany: {
            args: Prisma.cart_itemsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.cart_itemsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cart_itemsPayload>
          }
          update: {
            args: Prisma.cart_itemsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cart_itemsPayload>
          }
          deleteMany: {
            args: Prisma.cart_itemsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.cart_itemsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.cart_itemsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cart_itemsPayload>
          }
          aggregate: {
            args: Prisma.Cart_itemsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCart_items>
          }
          groupBy: {
            args: Prisma.cart_itemsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Cart_itemsGroupByOutputType>[]
          }
          count: {
            args: Prisma.cart_itemsCountArgs<ExtArgs>
            result: $Utils.Optional<Cart_itemsCountAggregateOutputType> | number
          }
        }
      }
      reviews: {
        payload: Prisma.$reviewsPayload<ExtArgs>
        fields: Prisma.reviewsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.reviewsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reviewsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.reviewsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reviewsPayload>
          }
          findFirst: {
            args: Prisma.reviewsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reviewsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.reviewsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reviewsPayload>
          }
          findMany: {
            args: Prisma.reviewsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reviewsPayload>[]
          }
          create: {
            args: Prisma.reviewsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reviewsPayload>
          }
          createMany: {
            args: Prisma.reviewsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.reviewsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reviewsPayload>
          }
          update: {
            args: Prisma.reviewsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reviewsPayload>
          }
          deleteMany: {
            args: Prisma.reviewsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.reviewsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.reviewsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reviewsPayload>
          }
          aggregate: {
            args: Prisma.ReviewsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateReviews>
          }
          groupBy: {
            args: Prisma.reviewsGroupByArgs<ExtArgs>
            result: $Utils.Optional<ReviewsGroupByOutputType>[]
          }
          count: {
            args: Prisma.reviewsCountArgs<ExtArgs>
            result: $Utils.Optional<ReviewsCountAggregateOutputType> | number
          }
        }
      }
      payments: {
        payload: Prisma.$paymentsPayload<ExtArgs>
        fields: Prisma.paymentsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.paymentsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$paymentsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.paymentsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$paymentsPayload>
          }
          findFirst: {
            args: Prisma.paymentsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$paymentsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.paymentsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$paymentsPayload>
          }
          findMany: {
            args: Prisma.paymentsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$paymentsPayload>[]
          }
          create: {
            args: Prisma.paymentsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$paymentsPayload>
          }
          createMany: {
            args: Prisma.paymentsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.paymentsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$paymentsPayload>
          }
          update: {
            args: Prisma.paymentsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$paymentsPayload>
          }
          deleteMany: {
            args: Prisma.paymentsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.paymentsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.paymentsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$paymentsPayload>
          }
          aggregate: {
            args: Prisma.PaymentsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePayments>
          }
          groupBy: {
            args: Prisma.paymentsGroupByArgs<ExtArgs>
            result: $Utils.Optional<PaymentsGroupByOutputType>[]
          }
          count: {
            args: Prisma.paymentsCountArgs<ExtArgs>
            result: $Utils.Optional<PaymentsCountAggregateOutputType> | number
          }
        }
      }
      email_blacklist: {
        payload: Prisma.$email_blacklistPayload<ExtArgs>
        fields: Prisma.email_blacklistFieldRefs
        operations: {
          findUnique: {
            args: Prisma.email_blacklistFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$email_blacklistPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.email_blacklistFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$email_blacklistPayload>
          }
          findFirst: {
            args: Prisma.email_blacklistFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$email_blacklistPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.email_blacklistFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$email_blacklistPayload>
          }
          findMany: {
            args: Prisma.email_blacklistFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$email_blacklistPayload>[]
          }
          create: {
            args: Prisma.email_blacklistCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$email_blacklistPayload>
          }
          createMany: {
            args: Prisma.email_blacklistCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.email_blacklistDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$email_blacklistPayload>
          }
          update: {
            args: Prisma.email_blacklistUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$email_blacklistPayload>
          }
          deleteMany: {
            args: Prisma.email_blacklistDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.email_blacklistUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.email_blacklistUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$email_blacklistPayload>
          }
          aggregate: {
            args: Prisma.Email_blacklistAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEmail_blacklist>
          }
          groupBy: {
            args: Prisma.email_blacklistGroupByArgs<ExtArgs>
            result: $Utils.Optional<Email_blacklistGroupByOutputType>[]
          }
          count: {
            args: Prisma.email_blacklistCountArgs<ExtArgs>
            result: $Utils.Optional<Email_blacklistCountAggregateOutputType> | number
          }
        }
      }
      conversations: {
        payload: Prisma.$conversationsPayload<ExtArgs>
        fields: Prisma.conversationsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.conversationsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$conversationsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.conversationsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$conversationsPayload>
          }
          findFirst: {
            args: Prisma.conversationsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$conversationsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.conversationsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$conversationsPayload>
          }
          findMany: {
            args: Prisma.conversationsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$conversationsPayload>[]
          }
          create: {
            args: Prisma.conversationsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$conversationsPayload>
          }
          createMany: {
            args: Prisma.conversationsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.conversationsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$conversationsPayload>
          }
          update: {
            args: Prisma.conversationsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$conversationsPayload>
          }
          deleteMany: {
            args: Prisma.conversationsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.conversationsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.conversationsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$conversationsPayload>
          }
          aggregate: {
            args: Prisma.ConversationsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateConversations>
          }
          groupBy: {
            args: Prisma.conversationsGroupByArgs<ExtArgs>
            result: $Utils.Optional<ConversationsGroupByOutputType>[]
          }
          count: {
            args: Prisma.conversationsCountArgs<ExtArgs>
            result: $Utils.Optional<ConversationsCountAggregateOutputType> | number
          }
        }
      }
      messages: {
        payload: Prisma.$messagesPayload<ExtArgs>
        fields: Prisma.messagesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.messagesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$messagesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.messagesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$messagesPayload>
          }
          findFirst: {
            args: Prisma.messagesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$messagesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.messagesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$messagesPayload>
          }
          findMany: {
            args: Prisma.messagesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$messagesPayload>[]
          }
          create: {
            args: Prisma.messagesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$messagesPayload>
          }
          createMany: {
            args: Prisma.messagesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.messagesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$messagesPayload>
          }
          update: {
            args: Prisma.messagesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$messagesPayload>
          }
          deleteMany: {
            args: Prisma.messagesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.messagesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.messagesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$messagesPayload>
          }
          aggregate: {
            args: Prisma.MessagesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMessages>
          }
          groupBy: {
            args: Prisma.messagesGroupByArgs<ExtArgs>
            result: $Utils.Optional<MessagesGroupByOutputType>[]
          }
          count: {
            args: Prisma.messagesCountArgs<ExtArgs>
            result: $Utils.Optional<MessagesCountAggregateOutputType> | number
          }
        }
      }
      reset_password_token: {
        payload: Prisma.$reset_password_tokenPayload<ExtArgs>
        fields: Prisma.reset_password_tokenFieldRefs
        operations: {
          findUnique: {
            args: Prisma.reset_password_tokenFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reset_password_tokenPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.reset_password_tokenFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reset_password_tokenPayload>
          }
          findFirst: {
            args: Prisma.reset_password_tokenFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reset_password_tokenPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.reset_password_tokenFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reset_password_tokenPayload>
          }
          findMany: {
            args: Prisma.reset_password_tokenFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reset_password_tokenPayload>[]
          }
          create: {
            args: Prisma.reset_password_tokenCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reset_password_tokenPayload>
          }
          createMany: {
            args: Prisma.reset_password_tokenCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.reset_password_tokenDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reset_password_tokenPayload>
          }
          update: {
            args: Prisma.reset_password_tokenUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reset_password_tokenPayload>
          }
          deleteMany: {
            args: Prisma.reset_password_tokenDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.reset_password_tokenUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.reset_password_tokenUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reset_password_tokenPayload>
          }
          aggregate: {
            args: Prisma.Reset_password_tokenAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateReset_password_token>
          }
          groupBy: {
            args: Prisma.reset_password_tokenGroupByArgs<ExtArgs>
            result: $Utils.Optional<Reset_password_tokenGroupByOutputType>[]
          }
          count: {
            args: Prisma.reset_password_tokenCountArgs<ExtArgs>
            result: $Utils.Optional<Reset_password_tokenCountAggregateOutputType> | number
          }
        }
      }
      seller_hidden_users: {
        payload: Prisma.$seller_hidden_usersPayload<ExtArgs>
        fields: Prisma.seller_hidden_usersFieldRefs
        operations: {
          findUnique: {
            args: Prisma.seller_hidden_usersFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$seller_hidden_usersPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.seller_hidden_usersFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$seller_hidden_usersPayload>
          }
          findFirst: {
            args: Prisma.seller_hidden_usersFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$seller_hidden_usersPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.seller_hidden_usersFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$seller_hidden_usersPayload>
          }
          findMany: {
            args: Prisma.seller_hidden_usersFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$seller_hidden_usersPayload>[]
          }
          create: {
            args: Prisma.seller_hidden_usersCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$seller_hidden_usersPayload>
          }
          createMany: {
            args: Prisma.seller_hidden_usersCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.seller_hidden_usersDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$seller_hidden_usersPayload>
          }
          update: {
            args: Prisma.seller_hidden_usersUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$seller_hidden_usersPayload>
          }
          deleteMany: {
            args: Prisma.seller_hidden_usersDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.seller_hidden_usersUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.seller_hidden_usersUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$seller_hidden_usersPayload>
          }
          aggregate: {
            args: Prisma.Seller_hidden_usersAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSeller_hidden_users>
          }
          groupBy: {
            args: Prisma.seller_hidden_usersGroupByArgs<ExtArgs>
            result: $Utils.Optional<Seller_hidden_usersGroupByOutputType>[]
          }
          count: {
            args: Prisma.seller_hidden_usersCountArgs<ExtArgs>
            result: $Utils.Optional<Seller_hidden_usersCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    users?: usersOmit
    roles?: rolesOmit
    permissions?: permissionsOmit
    role_permissions?: role_permissionsOmit
    shops?: shopsOmit
    addresses?: addressesOmit
    products?: productsOmit
    categories?: categoriesOmit
    category_breadcrumbs?: category_breadcrumbsOmit
    product_images?: product_imagesOmit
    product_specifications?: product_specificationsOmit
    product_attributes?: product_attributesOmit
    orders?: ordersOmit
    order_items?: order_itemsOmit
    cart_items?: cart_itemsOmit
    reviews?: reviewsOmit
    payments?: paymentsOmit
    email_blacklist?: email_blacklistOmit
    conversations?: conversationsOmit
    messages?: messagesOmit
    reset_password_token?: reset_password_tokenOmit
    seller_hidden_users?: seller_hidden_usersOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type UsersCountOutputType
   */

  export type UsersCountOutputType = {
    addresses: number
    orders: number
    cart_items: number
    reviews: number
    payments: number
    conversations: number
    reset_password_token: number
    shops: number
    hidden_by_sellers: number
    hidden_users: number
  }

  export type UsersCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    addresses?: boolean | UsersCountOutputTypeCountAddressesArgs
    orders?: boolean | UsersCountOutputTypeCountOrdersArgs
    cart_items?: boolean | UsersCountOutputTypeCountCart_itemsArgs
    reviews?: boolean | UsersCountOutputTypeCountReviewsArgs
    payments?: boolean | UsersCountOutputTypeCountPaymentsArgs
    conversations?: boolean | UsersCountOutputTypeCountConversationsArgs
    reset_password_token?: boolean | UsersCountOutputTypeCountReset_password_tokenArgs
    shops?: boolean | UsersCountOutputTypeCountShopsArgs
    hidden_by_sellers?: boolean | UsersCountOutputTypeCountHidden_by_sellersArgs
    hidden_users?: boolean | UsersCountOutputTypeCountHidden_usersArgs
  }

  // Custom InputTypes
  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsersCountOutputType
     */
    select?: UsersCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountAddressesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: addressesWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountOrdersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ordersWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountCart_itemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: cart_itemsWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountReviewsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: reviewsWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountPaymentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: paymentsWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountConversationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: conversationsWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountReset_password_tokenArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: reset_password_tokenWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountShopsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: shopsWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountHidden_by_sellersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: seller_hidden_usersWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountHidden_usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: seller_hidden_usersWhereInput
  }


  /**
   * Count Type RolesCountOutputType
   */

  export type RolesCountOutputType = {
    users: number
    role_permissions: number
  }

  export type RolesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | RolesCountOutputTypeCountUsersArgs
    role_permissions?: boolean | RolesCountOutputTypeCountRole_permissionsArgs
  }

  // Custom InputTypes
  /**
   * RolesCountOutputType without action
   */
  export type RolesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RolesCountOutputType
     */
    select?: RolesCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * RolesCountOutputType without action
   */
  export type RolesCountOutputTypeCountUsersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: usersWhereInput
  }

  /**
   * RolesCountOutputType without action
   */
  export type RolesCountOutputTypeCountRole_permissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: role_permissionsWhereInput
  }


  /**
   * Count Type PermissionsCountOutputType
   */

  export type PermissionsCountOutputType = {
    role_permissions: number
  }

  export type PermissionsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    role_permissions?: boolean | PermissionsCountOutputTypeCountRole_permissionsArgs
  }

  // Custom InputTypes
  /**
   * PermissionsCountOutputType without action
   */
  export type PermissionsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PermissionsCountOutputType
     */
    select?: PermissionsCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PermissionsCountOutputType without action
   */
  export type PermissionsCountOutputTypeCountRole_permissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: role_permissionsWhereInput
  }


  /**
   * Count Type ShopsCountOutputType
   */

  export type ShopsCountOutputType = {
    products: number
  }

  export type ShopsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    products?: boolean | ShopsCountOutputTypeCountProductsArgs
  }

  // Custom InputTypes
  /**
   * ShopsCountOutputType without action
   */
  export type ShopsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShopsCountOutputType
     */
    select?: ShopsCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ShopsCountOutputType without action
   */
  export type ShopsCountOutputTypeCountProductsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: productsWhereInput
  }


  /**
   * Count Type AddressesCountOutputType
   */

  export type AddressesCountOutputType = {
    orders: number
    shops: number
  }

  export type AddressesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    orders?: boolean | AddressesCountOutputTypeCountOrdersArgs
    shops?: boolean | AddressesCountOutputTypeCountShopsArgs
  }

  // Custom InputTypes
  /**
   * AddressesCountOutputType without action
   */
  export type AddressesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AddressesCountOutputType
     */
    select?: AddressesCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * AddressesCountOutputType without action
   */
  export type AddressesCountOutputTypeCountOrdersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ordersWhereInput
  }

  /**
   * AddressesCountOutputType without action
   */
  export type AddressesCountOutputTypeCountShopsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: shopsWhereInput
  }


  /**
   * Count Type ProductsCountOutputType
   */

  export type ProductsCountOutputType = {
    cart_items: number
    order_items: number
    reviews: number
    product_images: number
    product_specifications: number
    product_attributes: number
  }

  export type ProductsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cart_items?: boolean | ProductsCountOutputTypeCountCart_itemsArgs
    order_items?: boolean | ProductsCountOutputTypeCountOrder_itemsArgs
    reviews?: boolean | ProductsCountOutputTypeCountReviewsArgs
    product_images?: boolean | ProductsCountOutputTypeCountProduct_imagesArgs
    product_specifications?: boolean | ProductsCountOutputTypeCountProduct_specificationsArgs
    product_attributes?: boolean | ProductsCountOutputTypeCountProduct_attributesArgs
  }

  // Custom InputTypes
  /**
   * ProductsCountOutputType without action
   */
  export type ProductsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductsCountOutputType
     */
    select?: ProductsCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ProductsCountOutputType without action
   */
  export type ProductsCountOutputTypeCountCart_itemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: cart_itemsWhereInput
  }

  /**
   * ProductsCountOutputType without action
   */
  export type ProductsCountOutputTypeCountOrder_itemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: order_itemsWhereInput
  }

  /**
   * ProductsCountOutputType without action
   */
  export type ProductsCountOutputTypeCountReviewsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: reviewsWhereInput
  }

  /**
   * ProductsCountOutputType without action
   */
  export type ProductsCountOutputTypeCountProduct_imagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: product_imagesWhereInput
  }

  /**
   * ProductsCountOutputType without action
   */
  export type ProductsCountOutputTypeCountProduct_specificationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: product_specificationsWhereInput
  }

  /**
   * ProductsCountOutputType without action
   */
  export type ProductsCountOutputTypeCountProduct_attributesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: product_attributesWhereInput
  }


  /**
   * Count Type CategoriesCountOutputType
   */

  export type CategoriesCountOutputType = {
    children: number
    products: number
    category_breadcrumbs: number
  }

  export type CategoriesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    children?: boolean | CategoriesCountOutputTypeCountChildrenArgs
    products?: boolean | CategoriesCountOutputTypeCountProductsArgs
    category_breadcrumbs?: boolean | CategoriesCountOutputTypeCountCategory_breadcrumbsArgs
  }

  // Custom InputTypes
  /**
   * CategoriesCountOutputType without action
   */
  export type CategoriesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriesCountOutputType
     */
    select?: CategoriesCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CategoriesCountOutputType without action
   */
  export type CategoriesCountOutputTypeCountChildrenArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: categoriesWhereInput
  }

  /**
   * CategoriesCountOutputType without action
   */
  export type CategoriesCountOutputTypeCountProductsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: productsWhereInput
  }

  /**
   * CategoriesCountOutputType without action
   */
  export type CategoriesCountOutputTypeCountCategory_breadcrumbsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: category_breadcrumbsWhereInput
  }


  /**
   * Count Type Product_specificationsCountOutputType
   */

  export type Product_specificationsCountOutputType = {
    product_attributes: number
  }

  export type Product_specificationsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product_attributes?: boolean | Product_specificationsCountOutputTypeCountProduct_attributesArgs
  }

  // Custom InputTypes
  /**
   * Product_specificationsCountOutputType without action
   */
  export type Product_specificationsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product_specificationsCountOutputType
     */
    select?: Product_specificationsCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Product_specificationsCountOutputType without action
   */
  export type Product_specificationsCountOutputTypeCountProduct_attributesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: product_attributesWhereInput
  }


  /**
   * Count Type OrdersCountOutputType
   */

  export type OrdersCountOutputType = {
    order_items: number
    payments: number
  }

  export type OrdersCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order_items?: boolean | OrdersCountOutputTypeCountOrder_itemsArgs
    payments?: boolean | OrdersCountOutputTypeCountPaymentsArgs
  }

  // Custom InputTypes
  /**
   * OrdersCountOutputType without action
   */
  export type OrdersCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrdersCountOutputType
     */
    select?: OrdersCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * OrdersCountOutputType without action
   */
  export type OrdersCountOutputTypeCountOrder_itemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: order_itemsWhereInput
  }

  /**
   * OrdersCountOutputType without action
   */
  export type OrdersCountOutputTypeCountPaymentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: paymentsWhereInput
  }


  /**
   * Count Type ConversationsCountOutputType
   */

  export type ConversationsCountOutputType = {
    messages: number
  }

  export type ConversationsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    messages?: boolean | ConversationsCountOutputTypeCountMessagesArgs
  }

  // Custom InputTypes
  /**
   * ConversationsCountOutputType without action
   */
  export type ConversationsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConversationsCountOutputType
     */
    select?: ConversationsCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ConversationsCountOutputType without action
   */
  export type ConversationsCountOutputTypeCountMessagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: messagesWhereInput
  }


  /**
   * Models
   */

  /**
   * Model users
   */

  export type AggregateUsers = {
    _count: UsersCountAggregateOutputType | null
    _avg: UsersAvgAggregateOutputType | null
    _sum: UsersSumAggregateOutputType | null
    _min: UsersMinAggregateOutputType | null
    _max: UsersMaxAggregateOutputType | null
  }

  export type UsersAvgAggregateOutputType = {
    id: number | null
    role_id: number | null
  }

  export type UsersSumAggregateOutputType = {
    id: number | null
    role_id: number | null
  }

  export type UsersMinAggregateOutputType = {
    id: number | null
    uuid: string | null
    username: string | null
    email: string | null
    full_name: string | null
    password: string | null
    phone_number: string | null
    avatar: string | null
    gender: boolean | null
    day_of_birth: string | null
    email_verified_at: Date | null
    last_login: Date | null
    role_id: number | null
    is_public: boolean | null
    is_activated: boolean | null
    is_deleted: boolean | null
    two_factor_enabled: boolean | null
    provider: string | null
    provider_id: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type UsersMaxAggregateOutputType = {
    id: number | null
    uuid: string | null
    username: string | null
    email: string | null
    full_name: string | null
    password: string | null
    phone_number: string | null
    avatar: string | null
    gender: boolean | null
    day_of_birth: string | null
    email_verified_at: Date | null
    last_login: Date | null
    role_id: number | null
    is_public: boolean | null
    is_activated: boolean | null
    is_deleted: boolean | null
    two_factor_enabled: boolean | null
    provider: string | null
    provider_id: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type UsersCountAggregateOutputType = {
    id: number
    uuid: number
    username: number
    email: number
    full_name: number
    password: number
    phone_number: number
    avatar: number
    gender: number
    day_of_birth: number
    email_verified_at: number
    last_login: number
    role_id: number
    is_public: number
    is_activated: number
    is_deleted: number
    two_factor_enabled: number
    provider: number
    provider_id: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type UsersAvgAggregateInputType = {
    id?: true
    role_id?: true
  }

  export type UsersSumAggregateInputType = {
    id?: true
    role_id?: true
  }

  export type UsersMinAggregateInputType = {
    id?: true
    uuid?: true
    username?: true
    email?: true
    full_name?: true
    password?: true
    phone_number?: true
    avatar?: true
    gender?: true
    day_of_birth?: true
    email_verified_at?: true
    last_login?: true
    role_id?: true
    is_public?: true
    is_activated?: true
    is_deleted?: true
    two_factor_enabled?: true
    provider?: true
    provider_id?: true
    created_at?: true
    updated_at?: true
  }

  export type UsersMaxAggregateInputType = {
    id?: true
    uuid?: true
    username?: true
    email?: true
    full_name?: true
    password?: true
    phone_number?: true
    avatar?: true
    gender?: true
    day_of_birth?: true
    email_verified_at?: true
    last_login?: true
    role_id?: true
    is_public?: true
    is_activated?: true
    is_deleted?: true
    two_factor_enabled?: true
    provider?: true
    provider_id?: true
    created_at?: true
    updated_at?: true
  }

  export type UsersCountAggregateInputType = {
    id?: true
    uuid?: true
    username?: true
    email?: true
    full_name?: true
    password?: true
    phone_number?: true
    avatar?: true
    gender?: true
    day_of_birth?: true
    email_verified_at?: true
    last_login?: true
    role_id?: true
    is_public?: true
    is_activated?: true
    is_deleted?: true
    two_factor_enabled?: true
    provider?: true
    provider_id?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type UsersAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which users to aggregate.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned users
    **/
    _count?: true | UsersCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UsersAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UsersSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UsersMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UsersMaxAggregateInputType
  }

  export type GetUsersAggregateType<T extends UsersAggregateArgs> = {
        [P in keyof T & keyof AggregateUsers]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUsers[P]>
      : GetScalarType<T[P], AggregateUsers[P]>
  }




  export type usersGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: usersWhereInput
    orderBy?: usersOrderByWithAggregationInput | usersOrderByWithAggregationInput[]
    by: UsersScalarFieldEnum[] | UsersScalarFieldEnum
    having?: usersScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UsersCountAggregateInputType | true
    _avg?: UsersAvgAggregateInputType
    _sum?: UsersSumAggregateInputType
    _min?: UsersMinAggregateInputType
    _max?: UsersMaxAggregateInputType
  }

  export type UsersGroupByOutputType = {
    id: number
    uuid: string
    username: string
    email: string
    full_name: string | null
    password: string | null
    phone_number: string | null
    avatar: string | null
    gender: boolean | null
    day_of_birth: string | null
    email_verified_at: Date | null
    last_login: Date | null
    role_id: number
    is_public: boolean
    is_activated: boolean
    is_deleted: boolean
    two_factor_enabled: boolean
    provider: string
    provider_id: string | null
    created_at: Date
    updated_at: Date
    _count: UsersCountAggregateOutputType | null
    _avg: UsersAvgAggregateOutputType | null
    _sum: UsersSumAggregateOutputType | null
    _min: UsersMinAggregateOutputType | null
    _max: UsersMaxAggregateOutputType | null
  }

  type GetUsersGroupByPayload<T extends usersGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UsersGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UsersGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UsersGroupByOutputType[P]>
            : GetScalarType<T[P], UsersGroupByOutputType[P]>
        }
      >
    >


  export type usersSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    uuid?: boolean
    username?: boolean
    email?: boolean
    full_name?: boolean
    password?: boolean
    phone_number?: boolean
    avatar?: boolean
    gender?: boolean
    day_of_birth?: boolean
    email_verified_at?: boolean
    last_login?: boolean
    role_id?: boolean
    is_public?: boolean
    is_activated?: boolean
    is_deleted?: boolean
    two_factor_enabled?: boolean
    provider?: boolean
    provider_id?: boolean
    created_at?: boolean
    updated_at?: boolean
    role?: boolean | rolesDefaultArgs<ExtArgs>
    addresses?: boolean | users$addressesArgs<ExtArgs>
    orders?: boolean | users$ordersArgs<ExtArgs>
    cart_items?: boolean | users$cart_itemsArgs<ExtArgs>
    reviews?: boolean | users$reviewsArgs<ExtArgs>
    payments?: boolean | users$paymentsArgs<ExtArgs>
    conversations?: boolean | users$conversationsArgs<ExtArgs>
    reset_password_token?: boolean | users$reset_password_tokenArgs<ExtArgs>
    shops?: boolean | users$shopsArgs<ExtArgs>
    hidden_by_sellers?: boolean | users$hidden_by_sellersArgs<ExtArgs>
    hidden_users?: boolean | users$hidden_usersArgs<ExtArgs>
    _count?: boolean | UsersCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["users"]>



  export type usersSelectScalar = {
    id?: boolean
    uuid?: boolean
    username?: boolean
    email?: boolean
    full_name?: boolean
    password?: boolean
    phone_number?: boolean
    avatar?: boolean
    gender?: boolean
    day_of_birth?: boolean
    email_verified_at?: boolean
    last_login?: boolean
    role_id?: boolean
    is_public?: boolean
    is_activated?: boolean
    is_deleted?: boolean
    two_factor_enabled?: boolean
    provider?: boolean
    provider_id?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type usersOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "uuid" | "username" | "email" | "full_name" | "password" | "phone_number" | "avatar" | "gender" | "day_of_birth" | "email_verified_at" | "last_login" | "role_id" | "is_public" | "is_activated" | "is_deleted" | "two_factor_enabled" | "provider" | "provider_id" | "created_at" | "updated_at", ExtArgs["result"]["users"]>
  export type usersInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    role?: boolean | rolesDefaultArgs<ExtArgs>
    addresses?: boolean | users$addressesArgs<ExtArgs>
    orders?: boolean | users$ordersArgs<ExtArgs>
    cart_items?: boolean | users$cart_itemsArgs<ExtArgs>
    reviews?: boolean | users$reviewsArgs<ExtArgs>
    payments?: boolean | users$paymentsArgs<ExtArgs>
    conversations?: boolean | users$conversationsArgs<ExtArgs>
    reset_password_token?: boolean | users$reset_password_tokenArgs<ExtArgs>
    shops?: boolean | users$shopsArgs<ExtArgs>
    hidden_by_sellers?: boolean | users$hidden_by_sellersArgs<ExtArgs>
    hidden_users?: boolean | users$hidden_usersArgs<ExtArgs>
    _count?: boolean | UsersCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $usersPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "users"
    objects: {
      role: Prisma.$rolesPayload<ExtArgs>
      addresses: Prisma.$addressesPayload<ExtArgs>[]
      orders: Prisma.$ordersPayload<ExtArgs>[]
      cart_items: Prisma.$cart_itemsPayload<ExtArgs>[]
      reviews: Prisma.$reviewsPayload<ExtArgs>[]
      payments: Prisma.$paymentsPayload<ExtArgs>[]
      conversations: Prisma.$conversationsPayload<ExtArgs>[]
      reset_password_token: Prisma.$reset_password_tokenPayload<ExtArgs>[]
      shops: Prisma.$shopsPayload<ExtArgs>[]
      hidden_by_sellers: Prisma.$seller_hidden_usersPayload<ExtArgs>[]
      hidden_users: Prisma.$seller_hidden_usersPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      uuid: string
      username: string
      email: string
      full_name: string | null
      password: string | null
      phone_number: string | null
      avatar: string | null
      gender: boolean | null
      day_of_birth: string | null
      email_verified_at: Date | null
      last_login: Date | null
      role_id: number
      is_public: boolean
      is_activated: boolean
      is_deleted: boolean
      two_factor_enabled: boolean
      provider: string
      provider_id: string | null
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["users"]>
    composites: {}
  }

  type usersGetPayload<S extends boolean | null | undefined | usersDefaultArgs> = $Result.GetResult<Prisma.$usersPayload, S>

  type usersCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<usersFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UsersCountAggregateInputType | true
    }

  export interface usersDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['users'], meta: { name: 'users' } }
    /**
     * Find zero or one Users that matches the filter.
     * @param {usersFindUniqueArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends usersFindUniqueArgs>(args: SelectSubset<T, usersFindUniqueArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Users that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {usersFindUniqueOrThrowArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends usersFindUniqueOrThrowArgs>(args: SelectSubset<T, usersFindUniqueOrThrowArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersFindFirstArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends usersFindFirstArgs>(args?: SelectSubset<T, usersFindFirstArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Users that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersFindFirstOrThrowArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends usersFindFirstOrThrowArgs>(args?: SelectSubset<T, usersFindFirstOrThrowArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.users.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.users.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const usersWithIdOnly = await prisma.users.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends usersFindManyArgs>(args?: SelectSubset<T, usersFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Users.
     * @param {usersCreateArgs} args - Arguments to create a Users.
     * @example
     * // Create one Users
     * const Users = await prisma.users.create({
     *   data: {
     *     // ... data to create a Users
     *   }
     * })
     * 
     */
    create<T extends usersCreateArgs>(args: SelectSubset<T, usersCreateArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Users.
     * @param {usersCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const users = await prisma.users.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends usersCreateManyArgs>(args?: SelectSubset<T, usersCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Users.
     * @param {usersDeleteArgs} args - Arguments to delete one Users.
     * @example
     * // Delete one Users
     * const Users = await prisma.users.delete({
     *   where: {
     *     // ... filter to delete one Users
     *   }
     * })
     * 
     */
    delete<T extends usersDeleteArgs>(args: SelectSubset<T, usersDeleteArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Users.
     * @param {usersUpdateArgs} args - Arguments to update one Users.
     * @example
     * // Update one Users
     * const users = await prisma.users.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends usersUpdateArgs>(args: SelectSubset<T, usersUpdateArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Users.
     * @param {usersDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.users.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends usersDeleteManyArgs>(args?: SelectSubset<T, usersDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const users = await prisma.users.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends usersUpdateManyArgs>(args: SelectSubset<T, usersUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Users.
     * @param {usersUpsertArgs} args - Arguments to update or create a Users.
     * @example
     * // Update or create a Users
     * const users = await prisma.users.upsert({
     *   create: {
     *     // ... data to create a Users
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Users we want to update
     *   }
     * })
     */
    upsert<T extends usersUpsertArgs>(args: SelectSubset<T, usersUpsertArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.users.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends usersCountArgs>(
      args?: Subset<T, usersCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UsersCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UsersAggregateArgs>(args: Subset<T, UsersAggregateArgs>): Prisma.PrismaPromise<GetUsersAggregateType<T>>

    /**
     * Group by Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends usersGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: usersGroupByArgs['orderBy'] }
        : { orderBy?: usersGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, usersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsersGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the users model
   */
  readonly fields: usersFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for users.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__usersClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    role<T extends rolesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, rolesDefaultArgs<ExtArgs>>): Prisma__rolesClient<$Result.GetResult<Prisma.$rolesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    addresses<T extends users$addressesArgs<ExtArgs> = {}>(args?: Subset<T, users$addressesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$addressesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    orders<T extends users$ordersArgs<ExtArgs> = {}>(args?: Subset<T, users$ordersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ordersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    cart_items<T extends users$cart_itemsArgs<ExtArgs> = {}>(args?: Subset<T, users$cart_itemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cart_itemsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    reviews<T extends users$reviewsArgs<ExtArgs> = {}>(args?: Subset<T, users$reviewsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$reviewsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    payments<T extends users$paymentsArgs<ExtArgs> = {}>(args?: Subset<T, users$paymentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$paymentsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    conversations<T extends users$conversationsArgs<ExtArgs> = {}>(args?: Subset<T, users$conversationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$conversationsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    reset_password_token<T extends users$reset_password_tokenArgs<ExtArgs> = {}>(args?: Subset<T, users$reset_password_tokenArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$reset_password_tokenPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    shops<T extends users$shopsArgs<ExtArgs> = {}>(args?: Subset<T, users$shopsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$shopsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    hidden_by_sellers<T extends users$hidden_by_sellersArgs<ExtArgs> = {}>(args?: Subset<T, users$hidden_by_sellersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$seller_hidden_usersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    hidden_users<T extends users$hidden_usersArgs<ExtArgs> = {}>(args?: Subset<T, users$hidden_usersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$seller_hidden_usersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the users model
   */
  interface usersFieldRefs {
    readonly id: FieldRef<"users", 'Int'>
    readonly uuid: FieldRef<"users", 'String'>
    readonly username: FieldRef<"users", 'String'>
    readonly email: FieldRef<"users", 'String'>
    readonly full_name: FieldRef<"users", 'String'>
    readonly password: FieldRef<"users", 'String'>
    readonly phone_number: FieldRef<"users", 'String'>
    readonly avatar: FieldRef<"users", 'String'>
    readonly gender: FieldRef<"users", 'Boolean'>
    readonly day_of_birth: FieldRef<"users", 'String'>
    readonly email_verified_at: FieldRef<"users", 'DateTime'>
    readonly last_login: FieldRef<"users", 'DateTime'>
    readonly role_id: FieldRef<"users", 'Int'>
    readonly is_public: FieldRef<"users", 'Boolean'>
    readonly is_activated: FieldRef<"users", 'Boolean'>
    readonly is_deleted: FieldRef<"users", 'Boolean'>
    readonly two_factor_enabled: FieldRef<"users", 'Boolean'>
    readonly provider: FieldRef<"users", 'String'>
    readonly provider_id: FieldRef<"users", 'String'>
    readonly created_at: FieldRef<"users", 'DateTime'>
    readonly updated_at: FieldRef<"users", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * users findUnique
   */
  export type usersFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where: usersWhereUniqueInput
  }

  /**
   * users findUniqueOrThrow
   */
  export type usersFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where: usersWhereUniqueInput
  }

  /**
   * users findFirst
   */
  export type usersFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for users.
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of users.
     */
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }

  /**
   * users findFirstOrThrow
   */
  export type usersFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for users.
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of users.
     */
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }

  /**
   * users findMany
   */
  export type usersFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing users.
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }

  /**
   * users create
   */
  export type usersCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * The data needed to create a users.
     */
    data: XOR<usersCreateInput, usersUncheckedCreateInput>
  }

  /**
   * users createMany
   */
  export type usersCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many users.
     */
    data: usersCreateManyInput | usersCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * users update
   */
  export type usersUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * The data needed to update a users.
     */
    data: XOR<usersUpdateInput, usersUncheckedUpdateInput>
    /**
     * Choose, which users to update.
     */
    where: usersWhereUniqueInput
  }

  /**
   * users updateMany
   */
  export type usersUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update users.
     */
    data: XOR<usersUpdateManyMutationInput, usersUncheckedUpdateManyInput>
    /**
     * Filter which users to update
     */
    where?: usersWhereInput
    /**
     * Limit how many users to update.
     */
    limit?: number
  }

  /**
   * users upsert
   */
  export type usersUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * The filter to search for the users to update in case it exists.
     */
    where: usersWhereUniqueInput
    /**
     * In case the users found by the `where` argument doesn't exist, create a new users with this data.
     */
    create: XOR<usersCreateInput, usersUncheckedCreateInput>
    /**
     * In case the users was found with the provided `where` argument, update it with this data.
     */
    update: XOR<usersUpdateInput, usersUncheckedUpdateInput>
  }

  /**
   * users delete
   */
  export type usersDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter which users to delete.
     */
    where: usersWhereUniqueInput
  }

  /**
   * users deleteMany
   */
  export type usersDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which users to delete
     */
    where?: usersWhereInput
    /**
     * Limit how many users to delete.
     */
    limit?: number
  }

  /**
   * users.addresses
   */
  export type users$addressesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the addresses
     */
    select?: addressesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the addresses
     */
    omit?: addressesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: addressesInclude<ExtArgs> | null
    where?: addressesWhereInput
    orderBy?: addressesOrderByWithRelationInput | addressesOrderByWithRelationInput[]
    cursor?: addressesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AddressesScalarFieldEnum | AddressesScalarFieldEnum[]
  }

  /**
   * users.orders
   */
  export type users$ordersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the orders
     */
    select?: ordersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the orders
     */
    omit?: ordersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordersInclude<ExtArgs> | null
    where?: ordersWhereInput
    orderBy?: ordersOrderByWithRelationInput | ordersOrderByWithRelationInput[]
    cursor?: ordersWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrdersScalarFieldEnum | OrdersScalarFieldEnum[]
  }

  /**
   * users.cart_items
   */
  export type users$cart_itemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cart_items
     */
    select?: cart_itemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cart_items
     */
    omit?: cart_itemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cart_itemsInclude<ExtArgs> | null
    where?: cart_itemsWhereInput
    orderBy?: cart_itemsOrderByWithRelationInput | cart_itemsOrderByWithRelationInput[]
    cursor?: cart_itemsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Cart_itemsScalarFieldEnum | Cart_itemsScalarFieldEnum[]
  }

  /**
   * users.reviews
   */
  export type users$reviewsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reviews
     */
    select?: reviewsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reviews
     */
    omit?: reviewsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reviewsInclude<ExtArgs> | null
    where?: reviewsWhereInput
    orderBy?: reviewsOrderByWithRelationInput | reviewsOrderByWithRelationInput[]
    cursor?: reviewsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReviewsScalarFieldEnum | ReviewsScalarFieldEnum[]
  }

  /**
   * users.payments
   */
  export type users$paymentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the payments
     */
    select?: paymentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the payments
     */
    omit?: paymentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: paymentsInclude<ExtArgs> | null
    where?: paymentsWhereInput
    orderBy?: paymentsOrderByWithRelationInput | paymentsOrderByWithRelationInput[]
    cursor?: paymentsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PaymentsScalarFieldEnum | PaymentsScalarFieldEnum[]
  }

  /**
   * users.conversations
   */
  export type users$conversationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the conversations
     */
    select?: conversationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the conversations
     */
    omit?: conversationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: conversationsInclude<ExtArgs> | null
    where?: conversationsWhereInput
    orderBy?: conversationsOrderByWithRelationInput | conversationsOrderByWithRelationInput[]
    cursor?: conversationsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ConversationsScalarFieldEnum | ConversationsScalarFieldEnum[]
  }

  /**
   * users.reset_password_token
   */
  export type users$reset_password_tokenArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reset_password_token
     */
    select?: reset_password_tokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reset_password_token
     */
    omit?: reset_password_tokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reset_password_tokenInclude<ExtArgs> | null
    where?: reset_password_tokenWhereInput
    orderBy?: reset_password_tokenOrderByWithRelationInput | reset_password_tokenOrderByWithRelationInput[]
    cursor?: reset_password_tokenWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Reset_password_tokenScalarFieldEnum | Reset_password_tokenScalarFieldEnum[]
  }

  /**
   * users.shops
   */
  export type users$shopsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the shops
     */
    select?: shopsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the shops
     */
    omit?: shopsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: shopsInclude<ExtArgs> | null
    where?: shopsWhereInput
    orderBy?: shopsOrderByWithRelationInput | shopsOrderByWithRelationInput[]
    cursor?: shopsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ShopsScalarFieldEnum | ShopsScalarFieldEnum[]
  }

  /**
   * users.hidden_by_sellers
   */
  export type users$hidden_by_sellersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the seller_hidden_users
     */
    select?: seller_hidden_usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the seller_hidden_users
     */
    omit?: seller_hidden_usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: seller_hidden_usersInclude<ExtArgs> | null
    where?: seller_hidden_usersWhereInput
    orderBy?: seller_hidden_usersOrderByWithRelationInput | seller_hidden_usersOrderByWithRelationInput[]
    cursor?: seller_hidden_usersWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Seller_hidden_usersScalarFieldEnum | Seller_hidden_usersScalarFieldEnum[]
  }

  /**
   * users.hidden_users
   */
  export type users$hidden_usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the seller_hidden_users
     */
    select?: seller_hidden_usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the seller_hidden_users
     */
    omit?: seller_hidden_usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: seller_hidden_usersInclude<ExtArgs> | null
    where?: seller_hidden_usersWhereInput
    orderBy?: seller_hidden_usersOrderByWithRelationInput | seller_hidden_usersOrderByWithRelationInput[]
    cursor?: seller_hidden_usersWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Seller_hidden_usersScalarFieldEnum | Seller_hidden_usersScalarFieldEnum[]
  }

  /**
   * users without action
   */
  export type usersDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
  }


  /**
   * Model roles
   */

  export type AggregateRoles = {
    _count: RolesCountAggregateOutputType | null
    _avg: RolesAvgAggregateOutputType | null
    _sum: RolesSumAggregateOutputType | null
    _min: RolesMinAggregateOutputType | null
    _max: RolesMaxAggregateOutputType | null
  }

  export type RolesAvgAggregateOutputType = {
    id: number | null
  }

  export type RolesSumAggregateOutputType = {
    id: number | null
  }

  export type RolesMinAggregateOutputType = {
    id: number | null
    name: $Enums.RoleEnum | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type RolesMaxAggregateOutputType = {
    id: number | null
    name: $Enums.RoleEnum | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type RolesCountAggregateOutputType = {
    id: number
    name: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type RolesAvgAggregateInputType = {
    id?: true
  }

  export type RolesSumAggregateInputType = {
    id?: true
  }

  export type RolesMinAggregateInputType = {
    id?: true
    name?: true
    created_at?: true
    updated_at?: true
  }

  export type RolesMaxAggregateInputType = {
    id?: true
    name?: true
    created_at?: true
    updated_at?: true
  }

  export type RolesCountAggregateInputType = {
    id?: true
    name?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type RolesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which roles to aggregate.
     */
    where?: rolesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of roles to fetch.
     */
    orderBy?: rolesOrderByWithRelationInput | rolesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: rolesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned roles
    **/
    _count?: true | RolesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RolesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RolesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RolesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RolesMaxAggregateInputType
  }

  export type GetRolesAggregateType<T extends RolesAggregateArgs> = {
        [P in keyof T & keyof AggregateRoles]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRoles[P]>
      : GetScalarType<T[P], AggregateRoles[P]>
  }




  export type rolesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: rolesWhereInput
    orderBy?: rolesOrderByWithAggregationInput | rolesOrderByWithAggregationInput[]
    by: RolesScalarFieldEnum[] | RolesScalarFieldEnum
    having?: rolesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RolesCountAggregateInputType | true
    _avg?: RolesAvgAggregateInputType
    _sum?: RolesSumAggregateInputType
    _min?: RolesMinAggregateInputType
    _max?: RolesMaxAggregateInputType
  }

  export type RolesGroupByOutputType = {
    id: number
    name: $Enums.RoleEnum
    created_at: Date
    updated_at: Date
    _count: RolesCountAggregateOutputType | null
    _avg: RolesAvgAggregateOutputType | null
    _sum: RolesSumAggregateOutputType | null
    _min: RolesMinAggregateOutputType | null
    _max: RolesMaxAggregateOutputType | null
  }

  type GetRolesGroupByPayload<T extends rolesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RolesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RolesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RolesGroupByOutputType[P]>
            : GetScalarType<T[P], RolesGroupByOutputType[P]>
        }
      >
    >


  export type rolesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    created_at?: boolean
    updated_at?: boolean
    users?: boolean | roles$usersArgs<ExtArgs>
    role_permissions?: boolean | roles$role_permissionsArgs<ExtArgs>
    _count?: boolean | RolesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["roles"]>



  export type rolesSelectScalar = {
    id?: boolean
    name?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type rolesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "created_at" | "updated_at", ExtArgs["result"]["roles"]>
  export type rolesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | roles$usersArgs<ExtArgs>
    role_permissions?: boolean | roles$role_permissionsArgs<ExtArgs>
    _count?: boolean | RolesCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $rolesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "roles"
    objects: {
      users: Prisma.$usersPayload<ExtArgs>[]
      role_permissions: Prisma.$role_permissionsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: $Enums.RoleEnum
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["roles"]>
    composites: {}
  }

  type rolesGetPayload<S extends boolean | null | undefined | rolesDefaultArgs> = $Result.GetResult<Prisma.$rolesPayload, S>

  type rolesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<rolesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RolesCountAggregateInputType | true
    }

  export interface rolesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['roles'], meta: { name: 'roles' } }
    /**
     * Find zero or one Roles that matches the filter.
     * @param {rolesFindUniqueArgs} args - Arguments to find a Roles
     * @example
     * // Get one Roles
     * const roles = await prisma.roles.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends rolesFindUniqueArgs>(args: SelectSubset<T, rolesFindUniqueArgs<ExtArgs>>): Prisma__rolesClient<$Result.GetResult<Prisma.$rolesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Roles that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {rolesFindUniqueOrThrowArgs} args - Arguments to find a Roles
     * @example
     * // Get one Roles
     * const roles = await prisma.roles.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends rolesFindUniqueOrThrowArgs>(args: SelectSubset<T, rolesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__rolesClient<$Result.GetResult<Prisma.$rolesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Roles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {rolesFindFirstArgs} args - Arguments to find a Roles
     * @example
     * // Get one Roles
     * const roles = await prisma.roles.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends rolesFindFirstArgs>(args?: SelectSubset<T, rolesFindFirstArgs<ExtArgs>>): Prisma__rolesClient<$Result.GetResult<Prisma.$rolesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Roles that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {rolesFindFirstOrThrowArgs} args - Arguments to find a Roles
     * @example
     * // Get one Roles
     * const roles = await prisma.roles.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends rolesFindFirstOrThrowArgs>(args?: SelectSubset<T, rolesFindFirstOrThrowArgs<ExtArgs>>): Prisma__rolesClient<$Result.GetResult<Prisma.$rolesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Roles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {rolesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Roles
     * const roles = await prisma.roles.findMany()
     * 
     * // Get first 10 Roles
     * const roles = await prisma.roles.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const rolesWithIdOnly = await prisma.roles.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends rolesFindManyArgs>(args?: SelectSubset<T, rolesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$rolesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Roles.
     * @param {rolesCreateArgs} args - Arguments to create a Roles.
     * @example
     * // Create one Roles
     * const Roles = await prisma.roles.create({
     *   data: {
     *     // ... data to create a Roles
     *   }
     * })
     * 
     */
    create<T extends rolesCreateArgs>(args: SelectSubset<T, rolesCreateArgs<ExtArgs>>): Prisma__rolesClient<$Result.GetResult<Prisma.$rolesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Roles.
     * @param {rolesCreateManyArgs} args - Arguments to create many Roles.
     * @example
     * // Create many Roles
     * const roles = await prisma.roles.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends rolesCreateManyArgs>(args?: SelectSubset<T, rolesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Roles.
     * @param {rolesDeleteArgs} args - Arguments to delete one Roles.
     * @example
     * // Delete one Roles
     * const Roles = await prisma.roles.delete({
     *   where: {
     *     // ... filter to delete one Roles
     *   }
     * })
     * 
     */
    delete<T extends rolesDeleteArgs>(args: SelectSubset<T, rolesDeleteArgs<ExtArgs>>): Prisma__rolesClient<$Result.GetResult<Prisma.$rolesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Roles.
     * @param {rolesUpdateArgs} args - Arguments to update one Roles.
     * @example
     * // Update one Roles
     * const roles = await prisma.roles.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends rolesUpdateArgs>(args: SelectSubset<T, rolesUpdateArgs<ExtArgs>>): Prisma__rolesClient<$Result.GetResult<Prisma.$rolesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Roles.
     * @param {rolesDeleteManyArgs} args - Arguments to filter Roles to delete.
     * @example
     * // Delete a few Roles
     * const { count } = await prisma.roles.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends rolesDeleteManyArgs>(args?: SelectSubset<T, rolesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {rolesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Roles
     * const roles = await prisma.roles.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends rolesUpdateManyArgs>(args: SelectSubset<T, rolesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Roles.
     * @param {rolesUpsertArgs} args - Arguments to update or create a Roles.
     * @example
     * // Update or create a Roles
     * const roles = await prisma.roles.upsert({
     *   create: {
     *     // ... data to create a Roles
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Roles we want to update
     *   }
     * })
     */
    upsert<T extends rolesUpsertArgs>(args: SelectSubset<T, rolesUpsertArgs<ExtArgs>>): Prisma__rolesClient<$Result.GetResult<Prisma.$rolesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {rolesCountArgs} args - Arguments to filter Roles to count.
     * @example
     * // Count the number of Roles
     * const count = await prisma.roles.count({
     *   where: {
     *     // ... the filter for the Roles we want to count
     *   }
     * })
    **/
    count<T extends rolesCountArgs>(
      args?: Subset<T, rolesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RolesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RolesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RolesAggregateArgs>(args: Subset<T, RolesAggregateArgs>): Prisma.PrismaPromise<GetRolesAggregateType<T>>

    /**
     * Group by Roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {rolesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends rolesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: rolesGroupByArgs['orderBy'] }
        : { orderBy?: rolesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, rolesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRolesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the roles model
   */
  readonly fields: rolesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for roles.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__rolesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    users<T extends roles$usersArgs<ExtArgs> = {}>(args?: Subset<T, roles$usersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    role_permissions<T extends roles$role_permissionsArgs<ExtArgs> = {}>(args?: Subset<T, roles$role_permissionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$role_permissionsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the roles model
   */
  interface rolesFieldRefs {
    readonly id: FieldRef<"roles", 'Int'>
    readonly name: FieldRef<"roles", 'RoleEnum'>
    readonly created_at: FieldRef<"roles", 'DateTime'>
    readonly updated_at: FieldRef<"roles", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * roles findUnique
   */
  export type rolesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles
     */
    select?: rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the roles
     */
    omit?: rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rolesInclude<ExtArgs> | null
    /**
     * Filter, which roles to fetch.
     */
    where: rolesWhereUniqueInput
  }

  /**
   * roles findUniqueOrThrow
   */
  export type rolesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles
     */
    select?: rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the roles
     */
    omit?: rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rolesInclude<ExtArgs> | null
    /**
     * Filter, which roles to fetch.
     */
    where: rolesWhereUniqueInput
  }

  /**
   * roles findFirst
   */
  export type rolesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles
     */
    select?: rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the roles
     */
    omit?: rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rolesInclude<ExtArgs> | null
    /**
     * Filter, which roles to fetch.
     */
    where?: rolesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of roles to fetch.
     */
    orderBy?: rolesOrderByWithRelationInput | rolesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for roles.
     */
    cursor?: rolesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of roles.
     */
    distinct?: RolesScalarFieldEnum | RolesScalarFieldEnum[]
  }

  /**
   * roles findFirstOrThrow
   */
  export type rolesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles
     */
    select?: rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the roles
     */
    omit?: rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rolesInclude<ExtArgs> | null
    /**
     * Filter, which roles to fetch.
     */
    where?: rolesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of roles to fetch.
     */
    orderBy?: rolesOrderByWithRelationInput | rolesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for roles.
     */
    cursor?: rolesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of roles.
     */
    distinct?: RolesScalarFieldEnum | RolesScalarFieldEnum[]
  }

  /**
   * roles findMany
   */
  export type rolesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles
     */
    select?: rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the roles
     */
    omit?: rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rolesInclude<ExtArgs> | null
    /**
     * Filter, which roles to fetch.
     */
    where?: rolesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of roles to fetch.
     */
    orderBy?: rolesOrderByWithRelationInput | rolesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing roles.
     */
    cursor?: rolesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` roles.
     */
    skip?: number
    distinct?: RolesScalarFieldEnum | RolesScalarFieldEnum[]
  }

  /**
   * roles create
   */
  export type rolesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles
     */
    select?: rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the roles
     */
    omit?: rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rolesInclude<ExtArgs> | null
    /**
     * The data needed to create a roles.
     */
    data: XOR<rolesCreateInput, rolesUncheckedCreateInput>
  }

  /**
   * roles createMany
   */
  export type rolesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many roles.
     */
    data: rolesCreateManyInput | rolesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * roles update
   */
  export type rolesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles
     */
    select?: rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the roles
     */
    omit?: rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rolesInclude<ExtArgs> | null
    /**
     * The data needed to update a roles.
     */
    data: XOR<rolesUpdateInput, rolesUncheckedUpdateInput>
    /**
     * Choose, which roles to update.
     */
    where: rolesWhereUniqueInput
  }

  /**
   * roles updateMany
   */
  export type rolesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update roles.
     */
    data: XOR<rolesUpdateManyMutationInput, rolesUncheckedUpdateManyInput>
    /**
     * Filter which roles to update
     */
    where?: rolesWhereInput
    /**
     * Limit how many roles to update.
     */
    limit?: number
  }

  /**
   * roles upsert
   */
  export type rolesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles
     */
    select?: rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the roles
     */
    omit?: rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rolesInclude<ExtArgs> | null
    /**
     * The filter to search for the roles to update in case it exists.
     */
    where: rolesWhereUniqueInput
    /**
     * In case the roles found by the `where` argument doesn't exist, create a new roles with this data.
     */
    create: XOR<rolesCreateInput, rolesUncheckedCreateInput>
    /**
     * In case the roles was found with the provided `where` argument, update it with this data.
     */
    update: XOR<rolesUpdateInput, rolesUncheckedUpdateInput>
  }

  /**
   * roles delete
   */
  export type rolesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles
     */
    select?: rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the roles
     */
    omit?: rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rolesInclude<ExtArgs> | null
    /**
     * Filter which roles to delete.
     */
    where: rolesWhereUniqueInput
  }

  /**
   * roles deleteMany
   */
  export type rolesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which roles to delete
     */
    where?: rolesWhereInput
    /**
     * Limit how many roles to delete.
     */
    limit?: number
  }

  /**
   * roles.users
   */
  export type roles$usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    where?: usersWhereInput
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    cursor?: usersWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }

  /**
   * roles.role_permissions
   */
  export type roles$role_permissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the role_permissions
     */
    select?: role_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the role_permissions
     */
    omit?: role_permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: role_permissionsInclude<ExtArgs> | null
    where?: role_permissionsWhereInput
    orderBy?: role_permissionsOrderByWithRelationInput | role_permissionsOrderByWithRelationInput[]
    cursor?: role_permissionsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Role_permissionsScalarFieldEnum | Role_permissionsScalarFieldEnum[]
  }

  /**
   * roles without action
   */
  export type rolesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles
     */
    select?: rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the roles
     */
    omit?: rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rolesInclude<ExtArgs> | null
  }


  /**
   * Model permissions
   */

  export type AggregatePermissions = {
    _count: PermissionsCountAggregateOutputType | null
    _avg: PermissionsAvgAggregateOutputType | null
    _sum: PermissionsSumAggregateOutputType | null
    _min: PermissionsMinAggregateOutputType | null
    _max: PermissionsMaxAggregateOutputType | null
  }

  export type PermissionsAvgAggregateOutputType = {
    id: number | null
  }

  export type PermissionsSumAggregateOutputType = {
    id: number | null
  }

  export type PermissionsMinAggregateOutputType = {
    id: number | null
    name: $Enums.PermissionEnum | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type PermissionsMaxAggregateOutputType = {
    id: number | null
    name: $Enums.PermissionEnum | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type PermissionsCountAggregateOutputType = {
    id: number
    name: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type PermissionsAvgAggregateInputType = {
    id?: true
  }

  export type PermissionsSumAggregateInputType = {
    id?: true
  }

  export type PermissionsMinAggregateInputType = {
    id?: true
    name?: true
    created_at?: true
    updated_at?: true
  }

  export type PermissionsMaxAggregateInputType = {
    id?: true
    name?: true
    created_at?: true
    updated_at?: true
  }

  export type PermissionsCountAggregateInputType = {
    id?: true
    name?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type PermissionsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which permissions to aggregate.
     */
    where?: permissionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of permissions to fetch.
     */
    orderBy?: permissionsOrderByWithRelationInput | permissionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: permissionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` permissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` permissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned permissions
    **/
    _count?: true | PermissionsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PermissionsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PermissionsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PermissionsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PermissionsMaxAggregateInputType
  }

  export type GetPermissionsAggregateType<T extends PermissionsAggregateArgs> = {
        [P in keyof T & keyof AggregatePermissions]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePermissions[P]>
      : GetScalarType<T[P], AggregatePermissions[P]>
  }




  export type permissionsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: permissionsWhereInput
    orderBy?: permissionsOrderByWithAggregationInput | permissionsOrderByWithAggregationInput[]
    by: PermissionsScalarFieldEnum[] | PermissionsScalarFieldEnum
    having?: permissionsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PermissionsCountAggregateInputType | true
    _avg?: PermissionsAvgAggregateInputType
    _sum?: PermissionsSumAggregateInputType
    _min?: PermissionsMinAggregateInputType
    _max?: PermissionsMaxAggregateInputType
  }

  export type PermissionsGroupByOutputType = {
    id: number
    name: $Enums.PermissionEnum
    created_at: Date
    updated_at: Date
    _count: PermissionsCountAggregateOutputType | null
    _avg: PermissionsAvgAggregateOutputType | null
    _sum: PermissionsSumAggregateOutputType | null
    _min: PermissionsMinAggregateOutputType | null
    _max: PermissionsMaxAggregateOutputType | null
  }

  type GetPermissionsGroupByPayload<T extends permissionsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PermissionsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PermissionsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PermissionsGroupByOutputType[P]>
            : GetScalarType<T[P], PermissionsGroupByOutputType[P]>
        }
      >
    >


  export type permissionsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    created_at?: boolean
    updated_at?: boolean
    role_permissions?: boolean | permissions$role_permissionsArgs<ExtArgs>
    _count?: boolean | PermissionsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["permissions"]>



  export type permissionsSelectScalar = {
    id?: boolean
    name?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type permissionsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "created_at" | "updated_at", ExtArgs["result"]["permissions"]>
  export type permissionsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    role_permissions?: boolean | permissions$role_permissionsArgs<ExtArgs>
    _count?: boolean | PermissionsCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $permissionsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "permissions"
    objects: {
      role_permissions: Prisma.$role_permissionsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: $Enums.PermissionEnum
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["permissions"]>
    composites: {}
  }

  type permissionsGetPayload<S extends boolean | null | undefined | permissionsDefaultArgs> = $Result.GetResult<Prisma.$permissionsPayload, S>

  type permissionsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<permissionsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PermissionsCountAggregateInputType | true
    }

  export interface permissionsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['permissions'], meta: { name: 'permissions' } }
    /**
     * Find zero or one Permissions that matches the filter.
     * @param {permissionsFindUniqueArgs} args - Arguments to find a Permissions
     * @example
     * // Get one Permissions
     * const permissions = await prisma.permissions.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends permissionsFindUniqueArgs>(args: SelectSubset<T, permissionsFindUniqueArgs<ExtArgs>>): Prisma__permissionsClient<$Result.GetResult<Prisma.$permissionsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Permissions that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {permissionsFindUniqueOrThrowArgs} args - Arguments to find a Permissions
     * @example
     * // Get one Permissions
     * const permissions = await prisma.permissions.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends permissionsFindUniqueOrThrowArgs>(args: SelectSubset<T, permissionsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__permissionsClient<$Result.GetResult<Prisma.$permissionsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Permissions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {permissionsFindFirstArgs} args - Arguments to find a Permissions
     * @example
     * // Get one Permissions
     * const permissions = await prisma.permissions.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends permissionsFindFirstArgs>(args?: SelectSubset<T, permissionsFindFirstArgs<ExtArgs>>): Prisma__permissionsClient<$Result.GetResult<Prisma.$permissionsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Permissions that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {permissionsFindFirstOrThrowArgs} args - Arguments to find a Permissions
     * @example
     * // Get one Permissions
     * const permissions = await prisma.permissions.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends permissionsFindFirstOrThrowArgs>(args?: SelectSubset<T, permissionsFindFirstOrThrowArgs<ExtArgs>>): Prisma__permissionsClient<$Result.GetResult<Prisma.$permissionsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Permissions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {permissionsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Permissions
     * const permissions = await prisma.permissions.findMany()
     * 
     * // Get first 10 Permissions
     * const permissions = await prisma.permissions.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const permissionsWithIdOnly = await prisma.permissions.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends permissionsFindManyArgs>(args?: SelectSubset<T, permissionsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$permissionsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Permissions.
     * @param {permissionsCreateArgs} args - Arguments to create a Permissions.
     * @example
     * // Create one Permissions
     * const Permissions = await prisma.permissions.create({
     *   data: {
     *     // ... data to create a Permissions
     *   }
     * })
     * 
     */
    create<T extends permissionsCreateArgs>(args: SelectSubset<T, permissionsCreateArgs<ExtArgs>>): Prisma__permissionsClient<$Result.GetResult<Prisma.$permissionsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Permissions.
     * @param {permissionsCreateManyArgs} args - Arguments to create many Permissions.
     * @example
     * // Create many Permissions
     * const permissions = await prisma.permissions.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends permissionsCreateManyArgs>(args?: SelectSubset<T, permissionsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Permissions.
     * @param {permissionsDeleteArgs} args - Arguments to delete one Permissions.
     * @example
     * // Delete one Permissions
     * const Permissions = await prisma.permissions.delete({
     *   where: {
     *     // ... filter to delete one Permissions
     *   }
     * })
     * 
     */
    delete<T extends permissionsDeleteArgs>(args: SelectSubset<T, permissionsDeleteArgs<ExtArgs>>): Prisma__permissionsClient<$Result.GetResult<Prisma.$permissionsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Permissions.
     * @param {permissionsUpdateArgs} args - Arguments to update one Permissions.
     * @example
     * // Update one Permissions
     * const permissions = await prisma.permissions.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends permissionsUpdateArgs>(args: SelectSubset<T, permissionsUpdateArgs<ExtArgs>>): Prisma__permissionsClient<$Result.GetResult<Prisma.$permissionsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Permissions.
     * @param {permissionsDeleteManyArgs} args - Arguments to filter Permissions to delete.
     * @example
     * // Delete a few Permissions
     * const { count } = await prisma.permissions.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends permissionsDeleteManyArgs>(args?: SelectSubset<T, permissionsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Permissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {permissionsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Permissions
     * const permissions = await prisma.permissions.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends permissionsUpdateManyArgs>(args: SelectSubset<T, permissionsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Permissions.
     * @param {permissionsUpsertArgs} args - Arguments to update or create a Permissions.
     * @example
     * // Update or create a Permissions
     * const permissions = await prisma.permissions.upsert({
     *   create: {
     *     // ... data to create a Permissions
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Permissions we want to update
     *   }
     * })
     */
    upsert<T extends permissionsUpsertArgs>(args: SelectSubset<T, permissionsUpsertArgs<ExtArgs>>): Prisma__permissionsClient<$Result.GetResult<Prisma.$permissionsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Permissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {permissionsCountArgs} args - Arguments to filter Permissions to count.
     * @example
     * // Count the number of Permissions
     * const count = await prisma.permissions.count({
     *   where: {
     *     // ... the filter for the Permissions we want to count
     *   }
     * })
    **/
    count<T extends permissionsCountArgs>(
      args?: Subset<T, permissionsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PermissionsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Permissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermissionsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PermissionsAggregateArgs>(args: Subset<T, PermissionsAggregateArgs>): Prisma.PrismaPromise<GetPermissionsAggregateType<T>>

    /**
     * Group by Permissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {permissionsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends permissionsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: permissionsGroupByArgs['orderBy'] }
        : { orderBy?: permissionsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, permissionsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPermissionsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the permissions model
   */
  readonly fields: permissionsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for permissions.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__permissionsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    role_permissions<T extends permissions$role_permissionsArgs<ExtArgs> = {}>(args?: Subset<T, permissions$role_permissionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$role_permissionsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the permissions model
   */
  interface permissionsFieldRefs {
    readonly id: FieldRef<"permissions", 'Int'>
    readonly name: FieldRef<"permissions", 'PermissionEnum'>
    readonly created_at: FieldRef<"permissions", 'DateTime'>
    readonly updated_at: FieldRef<"permissions", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * permissions findUnique
   */
  export type permissionsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permissions
     */
    select?: permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the permissions
     */
    omit?: permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: permissionsInclude<ExtArgs> | null
    /**
     * Filter, which permissions to fetch.
     */
    where: permissionsWhereUniqueInput
  }

  /**
   * permissions findUniqueOrThrow
   */
  export type permissionsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permissions
     */
    select?: permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the permissions
     */
    omit?: permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: permissionsInclude<ExtArgs> | null
    /**
     * Filter, which permissions to fetch.
     */
    where: permissionsWhereUniqueInput
  }

  /**
   * permissions findFirst
   */
  export type permissionsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permissions
     */
    select?: permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the permissions
     */
    omit?: permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: permissionsInclude<ExtArgs> | null
    /**
     * Filter, which permissions to fetch.
     */
    where?: permissionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of permissions to fetch.
     */
    orderBy?: permissionsOrderByWithRelationInput | permissionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for permissions.
     */
    cursor?: permissionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` permissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` permissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of permissions.
     */
    distinct?: PermissionsScalarFieldEnum | PermissionsScalarFieldEnum[]
  }

  /**
   * permissions findFirstOrThrow
   */
  export type permissionsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permissions
     */
    select?: permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the permissions
     */
    omit?: permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: permissionsInclude<ExtArgs> | null
    /**
     * Filter, which permissions to fetch.
     */
    where?: permissionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of permissions to fetch.
     */
    orderBy?: permissionsOrderByWithRelationInput | permissionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for permissions.
     */
    cursor?: permissionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` permissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` permissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of permissions.
     */
    distinct?: PermissionsScalarFieldEnum | PermissionsScalarFieldEnum[]
  }

  /**
   * permissions findMany
   */
  export type permissionsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permissions
     */
    select?: permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the permissions
     */
    omit?: permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: permissionsInclude<ExtArgs> | null
    /**
     * Filter, which permissions to fetch.
     */
    where?: permissionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of permissions to fetch.
     */
    orderBy?: permissionsOrderByWithRelationInput | permissionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing permissions.
     */
    cursor?: permissionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` permissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` permissions.
     */
    skip?: number
    distinct?: PermissionsScalarFieldEnum | PermissionsScalarFieldEnum[]
  }

  /**
   * permissions create
   */
  export type permissionsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permissions
     */
    select?: permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the permissions
     */
    omit?: permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: permissionsInclude<ExtArgs> | null
    /**
     * The data needed to create a permissions.
     */
    data: XOR<permissionsCreateInput, permissionsUncheckedCreateInput>
  }

  /**
   * permissions createMany
   */
  export type permissionsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many permissions.
     */
    data: permissionsCreateManyInput | permissionsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * permissions update
   */
  export type permissionsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permissions
     */
    select?: permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the permissions
     */
    omit?: permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: permissionsInclude<ExtArgs> | null
    /**
     * The data needed to update a permissions.
     */
    data: XOR<permissionsUpdateInput, permissionsUncheckedUpdateInput>
    /**
     * Choose, which permissions to update.
     */
    where: permissionsWhereUniqueInput
  }

  /**
   * permissions updateMany
   */
  export type permissionsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update permissions.
     */
    data: XOR<permissionsUpdateManyMutationInput, permissionsUncheckedUpdateManyInput>
    /**
     * Filter which permissions to update
     */
    where?: permissionsWhereInput
    /**
     * Limit how many permissions to update.
     */
    limit?: number
  }

  /**
   * permissions upsert
   */
  export type permissionsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permissions
     */
    select?: permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the permissions
     */
    omit?: permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: permissionsInclude<ExtArgs> | null
    /**
     * The filter to search for the permissions to update in case it exists.
     */
    where: permissionsWhereUniqueInput
    /**
     * In case the permissions found by the `where` argument doesn't exist, create a new permissions with this data.
     */
    create: XOR<permissionsCreateInput, permissionsUncheckedCreateInput>
    /**
     * In case the permissions was found with the provided `where` argument, update it with this data.
     */
    update: XOR<permissionsUpdateInput, permissionsUncheckedUpdateInput>
  }

  /**
   * permissions delete
   */
  export type permissionsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permissions
     */
    select?: permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the permissions
     */
    omit?: permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: permissionsInclude<ExtArgs> | null
    /**
     * Filter which permissions to delete.
     */
    where: permissionsWhereUniqueInput
  }

  /**
   * permissions deleteMany
   */
  export type permissionsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which permissions to delete
     */
    where?: permissionsWhereInput
    /**
     * Limit how many permissions to delete.
     */
    limit?: number
  }

  /**
   * permissions.role_permissions
   */
  export type permissions$role_permissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the role_permissions
     */
    select?: role_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the role_permissions
     */
    omit?: role_permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: role_permissionsInclude<ExtArgs> | null
    where?: role_permissionsWhereInput
    orderBy?: role_permissionsOrderByWithRelationInput | role_permissionsOrderByWithRelationInput[]
    cursor?: role_permissionsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Role_permissionsScalarFieldEnum | Role_permissionsScalarFieldEnum[]
  }

  /**
   * permissions without action
   */
  export type permissionsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permissions
     */
    select?: permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the permissions
     */
    omit?: permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: permissionsInclude<ExtArgs> | null
  }


  /**
   * Model role_permissions
   */

  export type AggregateRole_permissions = {
    _count: Role_permissionsCountAggregateOutputType | null
    _avg: Role_permissionsAvgAggregateOutputType | null
    _sum: Role_permissionsSumAggregateOutputType | null
    _min: Role_permissionsMinAggregateOutputType | null
    _max: Role_permissionsMaxAggregateOutputType | null
  }

  export type Role_permissionsAvgAggregateOutputType = {
    id: number | null
    role_id: number | null
    permission_id: number | null
  }

  export type Role_permissionsSumAggregateOutputType = {
    id: number | null
    role_id: number | null
    permission_id: number | null
  }

  export type Role_permissionsMinAggregateOutputType = {
    id: number | null
    role_id: number | null
    permission_id: number | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Role_permissionsMaxAggregateOutputType = {
    id: number | null
    role_id: number | null
    permission_id: number | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Role_permissionsCountAggregateOutputType = {
    id: number
    role_id: number
    permission_id: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type Role_permissionsAvgAggregateInputType = {
    id?: true
    role_id?: true
    permission_id?: true
  }

  export type Role_permissionsSumAggregateInputType = {
    id?: true
    role_id?: true
    permission_id?: true
  }

  export type Role_permissionsMinAggregateInputType = {
    id?: true
    role_id?: true
    permission_id?: true
    created_at?: true
    updated_at?: true
  }

  export type Role_permissionsMaxAggregateInputType = {
    id?: true
    role_id?: true
    permission_id?: true
    created_at?: true
    updated_at?: true
  }

  export type Role_permissionsCountAggregateInputType = {
    id?: true
    role_id?: true
    permission_id?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type Role_permissionsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which role_permissions to aggregate.
     */
    where?: role_permissionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of role_permissions to fetch.
     */
    orderBy?: role_permissionsOrderByWithRelationInput | role_permissionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: role_permissionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` role_permissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` role_permissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned role_permissions
    **/
    _count?: true | Role_permissionsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Role_permissionsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Role_permissionsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Role_permissionsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Role_permissionsMaxAggregateInputType
  }

  export type GetRole_permissionsAggregateType<T extends Role_permissionsAggregateArgs> = {
        [P in keyof T & keyof AggregateRole_permissions]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRole_permissions[P]>
      : GetScalarType<T[P], AggregateRole_permissions[P]>
  }




  export type role_permissionsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: role_permissionsWhereInput
    orderBy?: role_permissionsOrderByWithAggregationInput | role_permissionsOrderByWithAggregationInput[]
    by: Role_permissionsScalarFieldEnum[] | Role_permissionsScalarFieldEnum
    having?: role_permissionsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Role_permissionsCountAggregateInputType | true
    _avg?: Role_permissionsAvgAggregateInputType
    _sum?: Role_permissionsSumAggregateInputType
    _min?: Role_permissionsMinAggregateInputType
    _max?: Role_permissionsMaxAggregateInputType
  }

  export type Role_permissionsGroupByOutputType = {
    id: number
    role_id: number
    permission_id: number
    created_at: Date
    updated_at: Date
    _count: Role_permissionsCountAggregateOutputType | null
    _avg: Role_permissionsAvgAggregateOutputType | null
    _sum: Role_permissionsSumAggregateOutputType | null
    _min: Role_permissionsMinAggregateOutputType | null
    _max: Role_permissionsMaxAggregateOutputType | null
  }

  type GetRole_permissionsGroupByPayload<T extends role_permissionsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Role_permissionsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Role_permissionsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Role_permissionsGroupByOutputType[P]>
            : GetScalarType<T[P], Role_permissionsGroupByOutputType[P]>
        }
      >
    >


  export type role_permissionsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    role_id?: boolean
    permission_id?: boolean
    created_at?: boolean
    updated_at?: boolean
    role?: boolean | rolesDefaultArgs<ExtArgs>
    permission?: boolean | permissionsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["role_permissions"]>



  export type role_permissionsSelectScalar = {
    id?: boolean
    role_id?: boolean
    permission_id?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type role_permissionsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "role_id" | "permission_id" | "created_at" | "updated_at", ExtArgs["result"]["role_permissions"]>
  export type role_permissionsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    role?: boolean | rolesDefaultArgs<ExtArgs>
    permission?: boolean | permissionsDefaultArgs<ExtArgs>
  }

  export type $role_permissionsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "role_permissions"
    objects: {
      role: Prisma.$rolesPayload<ExtArgs>
      permission: Prisma.$permissionsPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      role_id: number
      permission_id: number
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["role_permissions"]>
    composites: {}
  }

  type role_permissionsGetPayload<S extends boolean | null | undefined | role_permissionsDefaultArgs> = $Result.GetResult<Prisma.$role_permissionsPayload, S>

  type role_permissionsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<role_permissionsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Role_permissionsCountAggregateInputType | true
    }

  export interface role_permissionsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['role_permissions'], meta: { name: 'role_permissions' } }
    /**
     * Find zero or one Role_permissions that matches the filter.
     * @param {role_permissionsFindUniqueArgs} args - Arguments to find a Role_permissions
     * @example
     * // Get one Role_permissions
     * const role_permissions = await prisma.role_permissions.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends role_permissionsFindUniqueArgs>(args: SelectSubset<T, role_permissionsFindUniqueArgs<ExtArgs>>): Prisma__role_permissionsClient<$Result.GetResult<Prisma.$role_permissionsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Role_permissions that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {role_permissionsFindUniqueOrThrowArgs} args - Arguments to find a Role_permissions
     * @example
     * // Get one Role_permissions
     * const role_permissions = await prisma.role_permissions.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends role_permissionsFindUniqueOrThrowArgs>(args: SelectSubset<T, role_permissionsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__role_permissionsClient<$Result.GetResult<Prisma.$role_permissionsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Role_permissions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {role_permissionsFindFirstArgs} args - Arguments to find a Role_permissions
     * @example
     * // Get one Role_permissions
     * const role_permissions = await prisma.role_permissions.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends role_permissionsFindFirstArgs>(args?: SelectSubset<T, role_permissionsFindFirstArgs<ExtArgs>>): Prisma__role_permissionsClient<$Result.GetResult<Prisma.$role_permissionsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Role_permissions that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {role_permissionsFindFirstOrThrowArgs} args - Arguments to find a Role_permissions
     * @example
     * // Get one Role_permissions
     * const role_permissions = await prisma.role_permissions.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends role_permissionsFindFirstOrThrowArgs>(args?: SelectSubset<T, role_permissionsFindFirstOrThrowArgs<ExtArgs>>): Prisma__role_permissionsClient<$Result.GetResult<Prisma.$role_permissionsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Role_permissions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {role_permissionsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Role_permissions
     * const role_permissions = await prisma.role_permissions.findMany()
     * 
     * // Get first 10 Role_permissions
     * const role_permissions = await prisma.role_permissions.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const role_permissionsWithIdOnly = await prisma.role_permissions.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends role_permissionsFindManyArgs>(args?: SelectSubset<T, role_permissionsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$role_permissionsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Role_permissions.
     * @param {role_permissionsCreateArgs} args - Arguments to create a Role_permissions.
     * @example
     * // Create one Role_permissions
     * const Role_permissions = await prisma.role_permissions.create({
     *   data: {
     *     // ... data to create a Role_permissions
     *   }
     * })
     * 
     */
    create<T extends role_permissionsCreateArgs>(args: SelectSubset<T, role_permissionsCreateArgs<ExtArgs>>): Prisma__role_permissionsClient<$Result.GetResult<Prisma.$role_permissionsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Role_permissions.
     * @param {role_permissionsCreateManyArgs} args - Arguments to create many Role_permissions.
     * @example
     * // Create many Role_permissions
     * const role_permissions = await prisma.role_permissions.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends role_permissionsCreateManyArgs>(args?: SelectSubset<T, role_permissionsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Role_permissions.
     * @param {role_permissionsDeleteArgs} args - Arguments to delete one Role_permissions.
     * @example
     * // Delete one Role_permissions
     * const Role_permissions = await prisma.role_permissions.delete({
     *   where: {
     *     // ... filter to delete one Role_permissions
     *   }
     * })
     * 
     */
    delete<T extends role_permissionsDeleteArgs>(args: SelectSubset<T, role_permissionsDeleteArgs<ExtArgs>>): Prisma__role_permissionsClient<$Result.GetResult<Prisma.$role_permissionsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Role_permissions.
     * @param {role_permissionsUpdateArgs} args - Arguments to update one Role_permissions.
     * @example
     * // Update one Role_permissions
     * const role_permissions = await prisma.role_permissions.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends role_permissionsUpdateArgs>(args: SelectSubset<T, role_permissionsUpdateArgs<ExtArgs>>): Prisma__role_permissionsClient<$Result.GetResult<Prisma.$role_permissionsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Role_permissions.
     * @param {role_permissionsDeleteManyArgs} args - Arguments to filter Role_permissions to delete.
     * @example
     * // Delete a few Role_permissions
     * const { count } = await prisma.role_permissions.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends role_permissionsDeleteManyArgs>(args?: SelectSubset<T, role_permissionsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Role_permissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {role_permissionsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Role_permissions
     * const role_permissions = await prisma.role_permissions.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends role_permissionsUpdateManyArgs>(args: SelectSubset<T, role_permissionsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Role_permissions.
     * @param {role_permissionsUpsertArgs} args - Arguments to update or create a Role_permissions.
     * @example
     * // Update or create a Role_permissions
     * const role_permissions = await prisma.role_permissions.upsert({
     *   create: {
     *     // ... data to create a Role_permissions
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Role_permissions we want to update
     *   }
     * })
     */
    upsert<T extends role_permissionsUpsertArgs>(args: SelectSubset<T, role_permissionsUpsertArgs<ExtArgs>>): Prisma__role_permissionsClient<$Result.GetResult<Prisma.$role_permissionsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Role_permissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {role_permissionsCountArgs} args - Arguments to filter Role_permissions to count.
     * @example
     * // Count the number of Role_permissions
     * const count = await prisma.role_permissions.count({
     *   where: {
     *     // ... the filter for the Role_permissions we want to count
     *   }
     * })
    **/
    count<T extends role_permissionsCountArgs>(
      args?: Subset<T, role_permissionsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Role_permissionsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Role_permissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Role_permissionsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Role_permissionsAggregateArgs>(args: Subset<T, Role_permissionsAggregateArgs>): Prisma.PrismaPromise<GetRole_permissionsAggregateType<T>>

    /**
     * Group by Role_permissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {role_permissionsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends role_permissionsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: role_permissionsGroupByArgs['orderBy'] }
        : { orderBy?: role_permissionsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, role_permissionsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRole_permissionsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the role_permissions model
   */
  readonly fields: role_permissionsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for role_permissions.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__role_permissionsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    role<T extends rolesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, rolesDefaultArgs<ExtArgs>>): Prisma__rolesClient<$Result.GetResult<Prisma.$rolesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    permission<T extends permissionsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, permissionsDefaultArgs<ExtArgs>>): Prisma__permissionsClient<$Result.GetResult<Prisma.$permissionsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the role_permissions model
   */
  interface role_permissionsFieldRefs {
    readonly id: FieldRef<"role_permissions", 'Int'>
    readonly role_id: FieldRef<"role_permissions", 'Int'>
    readonly permission_id: FieldRef<"role_permissions", 'Int'>
    readonly created_at: FieldRef<"role_permissions", 'DateTime'>
    readonly updated_at: FieldRef<"role_permissions", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * role_permissions findUnique
   */
  export type role_permissionsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the role_permissions
     */
    select?: role_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the role_permissions
     */
    omit?: role_permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: role_permissionsInclude<ExtArgs> | null
    /**
     * Filter, which role_permissions to fetch.
     */
    where: role_permissionsWhereUniqueInput
  }

  /**
   * role_permissions findUniqueOrThrow
   */
  export type role_permissionsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the role_permissions
     */
    select?: role_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the role_permissions
     */
    omit?: role_permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: role_permissionsInclude<ExtArgs> | null
    /**
     * Filter, which role_permissions to fetch.
     */
    where: role_permissionsWhereUniqueInput
  }

  /**
   * role_permissions findFirst
   */
  export type role_permissionsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the role_permissions
     */
    select?: role_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the role_permissions
     */
    omit?: role_permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: role_permissionsInclude<ExtArgs> | null
    /**
     * Filter, which role_permissions to fetch.
     */
    where?: role_permissionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of role_permissions to fetch.
     */
    orderBy?: role_permissionsOrderByWithRelationInput | role_permissionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for role_permissions.
     */
    cursor?: role_permissionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` role_permissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` role_permissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of role_permissions.
     */
    distinct?: Role_permissionsScalarFieldEnum | Role_permissionsScalarFieldEnum[]
  }

  /**
   * role_permissions findFirstOrThrow
   */
  export type role_permissionsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the role_permissions
     */
    select?: role_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the role_permissions
     */
    omit?: role_permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: role_permissionsInclude<ExtArgs> | null
    /**
     * Filter, which role_permissions to fetch.
     */
    where?: role_permissionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of role_permissions to fetch.
     */
    orderBy?: role_permissionsOrderByWithRelationInput | role_permissionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for role_permissions.
     */
    cursor?: role_permissionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` role_permissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` role_permissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of role_permissions.
     */
    distinct?: Role_permissionsScalarFieldEnum | Role_permissionsScalarFieldEnum[]
  }

  /**
   * role_permissions findMany
   */
  export type role_permissionsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the role_permissions
     */
    select?: role_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the role_permissions
     */
    omit?: role_permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: role_permissionsInclude<ExtArgs> | null
    /**
     * Filter, which role_permissions to fetch.
     */
    where?: role_permissionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of role_permissions to fetch.
     */
    orderBy?: role_permissionsOrderByWithRelationInput | role_permissionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing role_permissions.
     */
    cursor?: role_permissionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` role_permissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` role_permissions.
     */
    skip?: number
    distinct?: Role_permissionsScalarFieldEnum | Role_permissionsScalarFieldEnum[]
  }

  /**
   * role_permissions create
   */
  export type role_permissionsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the role_permissions
     */
    select?: role_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the role_permissions
     */
    omit?: role_permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: role_permissionsInclude<ExtArgs> | null
    /**
     * The data needed to create a role_permissions.
     */
    data: XOR<role_permissionsCreateInput, role_permissionsUncheckedCreateInput>
  }

  /**
   * role_permissions createMany
   */
  export type role_permissionsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many role_permissions.
     */
    data: role_permissionsCreateManyInput | role_permissionsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * role_permissions update
   */
  export type role_permissionsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the role_permissions
     */
    select?: role_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the role_permissions
     */
    omit?: role_permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: role_permissionsInclude<ExtArgs> | null
    /**
     * The data needed to update a role_permissions.
     */
    data: XOR<role_permissionsUpdateInput, role_permissionsUncheckedUpdateInput>
    /**
     * Choose, which role_permissions to update.
     */
    where: role_permissionsWhereUniqueInput
  }

  /**
   * role_permissions updateMany
   */
  export type role_permissionsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update role_permissions.
     */
    data: XOR<role_permissionsUpdateManyMutationInput, role_permissionsUncheckedUpdateManyInput>
    /**
     * Filter which role_permissions to update
     */
    where?: role_permissionsWhereInput
    /**
     * Limit how many role_permissions to update.
     */
    limit?: number
  }

  /**
   * role_permissions upsert
   */
  export type role_permissionsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the role_permissions
     */
    select?: role_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the role_permissions
     */
    omit?: role_permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: role_permissionsInclude<ExtArgs> | null
    /**
     * The filter to search for the role_permissions to update in case it exists.
     */
    where: role_permissionsWhereUniqueInput
    /**
     * In case the role_permissions found by the `where` argument doesn't exist, create a new role_permissions with this data.
     */
    create: XOR<role_permissionsCreateInput, role_permissionsUncheckedCreateInput>
    /**
     * In case the role_permissions was found with the provided `where` argument, update it with this data.
     */
    update: XOR<role_permissionsUpdateInput, role_permissionsUncheckedUpdateInput>
  }

  /**
   * role_permissions delete
   */
  export type role_permissionsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the role_permissions
     */
    select?: role_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the role_permissions
     */
    omit?: role_permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: role_permissionsInclude<ExtArgs> | null
    /**
     * Filter which role_permissions to delete.
     */
    where: role_permissionsWhereUniqueInput
  }

  /**
   * role_permissions deleteMany
   */
  export type role_permissionsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which role_permissions to delete
     */
    where?: role_permissionsWhereInput
    /**
     * Limit how many role_permissions to delete.
     */
    limit?: number
  }

  /**
   * role_permissions without action
   */
  export type role_permissionsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the role_permissions
     */
    select?: role_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the role_permissions
     */
    omit?: role_permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: role_permissionsInclude<ExtArgs> | null
  }


  /**
   * Model shops
   */

  export type AggregateShops = {
    _count: ShopsCountAggregateOutputType | null
    _avg: ShopsAvgAggregateOutputType | null
    _sum: ShopsSumAggregateOutputType | null
    _min: ShopsMinAggregateOutputType | null
    _max: ShopsMaxAggregateOutputType | null
  }

  export type ShopsAvgAggregateOutputType = {
    id: number | null
    seller_id: number | null
    address_id: number | null
    rating: number | null
  }

  export type ShopsSumAggregateOutputType = {
    id: number | null
    seller_id: number | null
    address_id: number | null
    rating: number | null
  }

  export type ShopsMinAggregateOutputType = {
    id: number | null
    uuid: string | null
    seller_id: number | null
    name: string | null
    slug: string | null
    description: string | null
    logo: string | null
    address_id: number | null
    rating: number | null
    is_active: boolean | null
    is_deleted: boolean | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type ShopsMaxAggregateOutputType = {
    id: number | null
    uuid: string | null
    seller_id: number | null
    name: string | null
    slug: string | null
    description: string | null
    logo: string | null
    address_id: number | null
    rating: number | null
    is_active: boolean | null
    is_deleted: boolean | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type ShopsCountAggregateOutputType = {
    id: number
    uuid: number
    seller_id: number
    name: number
    slug: number
    description: number
    logo: number
    address_id: number
    rating: number
    is_active: number
    is_deleted: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type ShopsAvgAggregateInputType = {
    id?: true
    seller_id?: true
    address_id?: true
    rating?: true
  }

  export type ShopsSumAggregateInputType = {
    id?: true
    seller_id?: true
    address_id?: true
    rating?: true
  }

  export type ShopsMinAggregateInputType = {
    id?: true
    uuid?: true
    seller_id?: true
    name?: true
    slug?: true
    description?: true
    logo?: true
    address_id?: true
    rating?: true
    is_active?: true
    is_deleted?: true
    created_at?: true
    updated_at?: true
  }

  export type ShopsMaxAggregateInputType = {
    id?: true
    uuid?: true
    seller_id?: true
    name?: true
    slug?: true
    description?: true
    logo?: true
    address_id?: true
    rating?: true
    is_active?: true
    is_deleted?: true
    created_at?: true
    updated_at?: true
  }

  export type ShopsCountAggregateInputType = {
    id?: true
    uuid?: true
    seller_id?: true
    name?: true
    slug?: true
    description?: true
    logo?: true
    address_id?: true
    rating?: true
    is_active?: true
    is_deleted?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type ShopsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which shops to aggregate.
     */
    where?: shopsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of shops to fetch.
     */
    orderBy?: shopsOrderByWithRelationInput | shopsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: shopsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` shops from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` shops.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned shops
    **/
    _count?: true | ShopsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ShopsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ShopsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ShopsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ShopsMaxAggregateInputType
  }

  export type GetShopsAggregateType<T extends ShopsAggregateArgs> = {
        [P in keyof T & keyof AggregateShops]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateShops[P]>
      : GetScalarType<T[P], AggregateShops[P]>
  }




  export type shopsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: shopsWhereInput
    orderBy?: shopsOrderByWithAggregationInput | shopsOrderByWithAggregationInput[]
    by: ShopsScalarFieldEnum[] | ShopsScalarFieldEnum
    having?: shopsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ShopsCountAggregateInputType | true
    _avg?: ShopsAvgAggregateInputType
    _sum?: ShopsSumAggregateInputType
    _min?: ShopsMinAggregateInputType
    _max?: ShopsMaxAggregateInputType
  }

  export type ShopsGroupByOutputType = {
    id: number
    uuid: string
    seller_id: number
    name: string
    slug: string
    description: string | null
    logo: string | null
    address_id: number | null
    rating: number | null
    is_active: boolean
    is_deleted: boolean
    created_at: Date
    updated_at: Date
    _count: ShopsCountAggregateOutputType | null
    _avg: ShopsAvgAggregateOutputType | null
    _sum: ShopsSumAggregateOutputType | null
    _min: ShopsMinAggregateOutputType | null
    _max: ShopsMaxAggregateOutputType | null
  }

  type GetShopsGroupByPayload<T extends shopsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ShopsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ShopsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ShopsGroupByOutputType[P]>
            : GetScalarType<T[P], ShopsGroupByOutputType[P]>
        }
      >
    >


  export type shopsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    uuid?: boolean
    seller_id?: boolean
    name?: boolean
    slug?: boolean
    description?: boolean
    logo?: boolean
    address_id?: boolean
    rating?: boolean
    is_active?: boolean
    is_deleted?: boolean
    created_at?: boolean
    updated_at?: boolean
    seller?: boolean | usersDefaultArgs<ExtArgs>
    address?: boolean | shops$addressArgs<ExtArgs>
    products?: boolean | shops$productsArgs<ExtArgs>
    _count?: boolean | ShopsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["shops"]>



  export type shopsSelectScalar = {
    id?: boolean
    uuid?: boolean
    seller_id?: boolean
    name?: boolean
    slug?: boolean
    description?: boolean
    logo?: boolean
    address_id?: boolean
    rating?: boolean
    is_active?: boolean
    is_deleted?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type shopsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "uuid" | "seller_id" | "name" | "slug" | "description" | "logo" | "address_id" | "rating" | "is_active" | "is_deleted" | "created_at" | "updated_at", ExtArgs["result"]["shops"]>
  export type shopsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    seller?: boolean | usersDefaultArgs<ExtArgs>
    address?: boolean | shops$addressArgs<ExtArgs>
    products?: boolean | shops$productsArgs<ExtArgs>
    _count?: boolean | ShopsCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $shopsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "shops"
    objects: {
      seller: Prisma.$usersPayload<ExtArgs>
      address: Prisma.$addressesPayload<ExtArgs> | null
      products: Prisma.$productsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      uuid: string
      seller_id: number
      name: string
      slug: string
      description: string | null
      logo: string | null
      address_id: number | null
      rating: number | null
      is_active: boolean
      is_deleted: boolean
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["shops"]>
    composites: {}
  }

  type shopsGetPayload<S extends boolean | null | undefined | shopsDefaultArgs> = $Result.GetResult<Prisma.$shopsPayload, S>

  type shopsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<shopsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ShopsCountAggregateInputType | true
    }

  export interface shopsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['shops'], meta: { name: 'shops' } }
    /**
     * Find zero or one Shops that matches the filter.
     * @param {shopsFindUniqueArgs} args - Arguments to find a Shops
     * @example
     * // Get one Shops
     * const shops = await prisma.shops.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends shopsFindUniqueArgs>(args: SelectSubset<T, shopsFindUniqueArgs<ExtArgs>>): Prisma__shopsClient<$Result.GetResult<Prisma.$shopsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Shops that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {shopsFindUniqueOrThrowArgs} args - Arguments to find a Shops
     * @example
     * // Get one Shops
     * const shops = await prisma.shops.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends shopsFindUniqueOrThrowArgs>(args: SelectSubset<T, shopsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__shopsClient<$Result.GetResult<Prisma.$shopsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Shops that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {shopsFindFirstArgs} args - Arguments to find a Shops
     * @example
     * // Get one Shops
     * const shops = await prisma.shops.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends shopsFindFirstArgs>(args?: SelectSubset<T, shopsFindFirstArgs<ExtArgs>>): Prisma__shopsClient<$Result.GetResult<Prisma.$shopsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Shops that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {shopsFindFirstOrThrowArgs} args - Arguments to find a Shops
     * @example
     * // Get one Shops
     * const shops = await prisma.shops.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends shopsFindFirstOrThrowArgs>(args?: SelectSubset<T, shopsFindFirstOrThrowArgs<ExtArgs>>): Prisma__shopsClient<$Result.GetResult<Prisma.$shopsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Shops that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {shopsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Shops
     * const shops = await prisma.shops.findMany()
     * 
     * // Get first 10 Shops
     * const shops = await prisma.shops.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const shopsWithIdOnly = await prisma.shops.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends shopsFindManyArgs>(args?: SelectSubset<T, shopsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$shopsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Shops.
     * @param {shopsCreateArgs} args - Arguments to create a Shops.
     * @example
     * // Create one Shops
     * const Shops = await prisma.shops.create({
     *   data: {
     *     // ... data to create a Shops
     *   }
     * })
     * 
     */
    create<T extends shopsCreateArgs>(args: SelectSubset<T, shopsCreateArgs<ExtArgs>>): Prisma__shopsClient<$Result.GetResult<Prisma.$shopsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Shops.
     * @param {shopsCreateManyArgs} args - Arguments to create many Shops.
     * @example
     * // Create many Shops
     * const shops = await prisma.shops.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends shopsCreateManyArgs>(args?: SelectSubset<T, shopsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Shops.
     * @param {shopsDeleteArgs} args - Arguments to delete one Shops.
     * @example
     * // Delete one Shops
     * const Shops = await prisma.shops.delete({
     *   where: {
     *     // ... filter to delete one Shops
     *   }
     * })
     * 
     */
    delete<T extends shopsDeleteArgs>(args: SelectSubset<T, shopsDeleteArgs<ExtArgs>>): Prisma__shopsClient<$Result.GetResult<Prisma.$shopsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Shops.
     * @param {shopsUpdateArgs} args - Arguments to update one Shops.
     * @example
     * // Update one Shops
     * const shops = await prisma.shops.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends shopsUpdateArgs>(args: SelectSubset<T, shopsUpdateArgs<ExtArgs>>): Prisma__shopsClient<$Result.GetResult<Prisma.$shopsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Shops.
     * @param {shopsDeleteManyArgs} args - Arguments to filter Shops to delete.
     * @example
     * // Delete a few Shops
     * const { count } = await prisma.shops.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends shopsDeleteManyArgs>(args?: SelectSubset<T, shopsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Shops.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {shopsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Shops
     * const shops = await prisma.shops.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends shopsUpdateManyArgs>(args: SelectSubset<T, shopsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Shops.
     * @param {shopsUpsertArgs} args - Arguments to update or create a Shops.
     * @example
     * // Update or create a Shops
     * const shops = await prisma.shops.upsert({
     *   create: {
     *     // ... data to create a Shops
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Shops we want to update
     *   }
     * })
     */
    upsert<T extends shopsUpsertArgs>(args: SelectSubset<T, shopsUpsertArgs<ExtArgs>>): Prisma__shopsClient<$Result.GetResult<Prisma.$shopsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Shops.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {shopsCountArgs} args - Arguments to filter Shops to count.
     * @example
     * // Count the number of Shops
     * const count = await prisma.shops.count({
     *   where: {
     *     // ... the filter for the Shops we want to count
     *   }
     * })
    **/
    count<T extends shopsCountArgs>(
      args?: Subset<T, shopsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ShopsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Shops.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShopsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ShopsAggregateArgs>(args: Subset<T, ShopsAggregateArgs>): Prisma.PrismaPromise<GetShopsAggregateType<T>>

    /**
     * Group by Shops.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {shopsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends shopsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: shopsGroupByArgs['orderBy'] }
        : { orderBy?: shopsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, shopsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetShopsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the shops model
   */
  readonly fields: shopsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for shops.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__shopsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    seller<T extends usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usersDefaultArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    address<T extends shops$addressArgs<ExtArgs> = {}>(args?: Subset<T, shops$addressArgs<ExtArgs>>): Prisma__addressesClient<$Result.GetResult<Prisma.$addressesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    products<T extends shops$productsArgs<ExtArgs> = {}>(args?: Subset<T, shops$productsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$productsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the shops model
   */
  interface shopsFieldRefs {
    readonly id: FieldRef<"shops", 'Int'>
    readonly uuid: FieldRef<"shops", 'String'>
    readonly seller_id: FieldRef<"shops", 'Int'>
    readonly name: FieldRef<"shops", 'String'>
    readonly slug: FieldRef<"shops", 'String'>
    readonly description: FieldRef<"shops", 'String'>
    readonly logo: FieldRef<"shops", 'String'>
    readonly address_id: FieldRef<"shops", 'Int'>
    readonly rating: FieldRef<"shops", 'Float'>
    readonly is_active: FieldRef<"shops", 'Boolean'>
    readonly is_deleted: FieldRef<"shops", 'Boolean'>
    readonly created_at: FieldRef<"shops", 'DateTime'>
    readonly updated_at: FieldRef<"shops", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * shops findUnique
   */
  export type shopsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the shops
     */
    select?: shopsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the shops
     */
    omit?: shopsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: shopsInclude<ExtArgs> | null
    /**
     * Filter, which shops to fetch.
     */
    where: shopsWhereUniqueInput
  }

  /**
   * shops findUniqueOrThrow
   */
  export type shopsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the shops
     */
    select?: shopsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the shops
     */
    omit?: shopsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: shopsInclude<ExtArgs> | null
    /**
     * Filter, which shops to fetch.
     */
    where: shopsWhereUniqueInput
  }

  /**
   * shops findFirst
   */
  export type shopsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the shops
     */
    select?: shopsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the shops
     */
    omit?: shopsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: shopsInclude<ExtArgs> | null
    /**
     * Filter, which shops to fetch.
     */
    where?: shopsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of shops to fetch.
     */
    orderBy?: shopsOrderByWithRelationInput | shopsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for shops.
     */
    cursor?: shopsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` shops from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` shops.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of shops.
     */
    distinct?: ShopsScalarFieldEnum | ShopsScalarFieldEnum[]
  }

  /**
   * shops findFirstOrThrow
   */
  export type shopsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the shops
     */
    select?: shopsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the shops
     */
    omit?: shopsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: shopsInclude<ExtArgs> | null
    /**
     * Filter, which shops to fetch.
     */
    where?: shopsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of shops to fetch.
     */
    orderBy?: shopsOrderByWithRelationInput | shopsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for shops.
     */
    cursor?: shopsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` shops from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` shops.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of shops.
     */
    distinct?: ShopsScalarFieldEnum | ShopsScalarFieldEnum[]
  }

  /**
   * shops findMany
   */
  export type shopsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the shops
     */
    select?: shopsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the shops
     */
    omit?: shopsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: shopsInclude<ExtArgs> | null
    /**
     * Filter, which shops to fetch.
     */
    where?: shopsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of shops to fetch.
     */
    orderBy?: shopsOrderByWithRelationInput | shopsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing shops.
     */
    cursor?: shopsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` shops from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` shops.
     */
    skip?: number
    distinct?: ShopsScalarFieldEnum | ShopsScalarFieldEnum[]
  }

  /**
   * shops create
   */
  export type shopsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the shops
     */
    select?: shopsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the shops
     */
    omit?: shopsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: shopsInclude<ExtArgs> | null
    /**
     * The data needed to create a shops.
     */
    data: XOR<shopsCreateInput, shopsUncheckedCreateInput>
  }

  /**
   * shops createMany
   */
  export type shopsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many shops.
     */
    data: shopsCreateManyInput | shopsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * shops update
   */
  export type shopsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the shops
     */
    select?: shopsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the shops
     */
    omit?: shopsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: shopsInclude<ExtArgs> | null
    /**
     * The data needed to update a shops.
     */
    data: XOR<shopsUpdateInput, shopsUncheckedUpdateInput>
    /**
     * Choose, which shops to update.
     */
    where: shopsWhereUniqueInput
  }

  /**
   * shops updateMany
   */
  export type shopsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update shops.
     */
    data: XOR<shopsUpdateManyMutationInput, shopsUncheckedUpdateManyInput>
    /**
     * Filter which shops to update
     */
    where?: shopsWhereInput
    /**
     * Limit how many shops to update.
     */
    limit?: number
  }

  /**
   * shops upsert
   */
  export type shopsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the shops
     */
    select?: shopsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the shops
     */
    omit?: shopsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: shopsInclude<ExtArgs> | null
    /**
     * The filter to search for the shops to update in case it exists.
     */
    where: shopsWhereUniqueInput
    /**
     * In case the shops found by the `where` argument doesn't exist, create a new shops with this data.
     */
    create: XOR<shopsCreateInput, shopsUncheckedCreateInput>
    /**
     * In case the shops was found with the provided `where` argument, update it with this data.
     */
    update: XOR<shopsUpdateInput, shopsUncheckedUpdateInput>
  }

  /**
   * shops delete
   */
  export type shopsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the shops
     */
    select?: shopsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the shops
     */
    omit?: shopsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: shopsInclude<ExtArgs> | null
    /**
     * Filter which shops to delete.
     */
    where: shopsWhereUniqueInput
  }

  /**
   * shops deleteMany
   */
  export type shopsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which shops to delete
     */
    where?: shopsWhereInput
    /**
     * Limit how many shops to delete.
     */
    limit?: number
  }

  /**
   * shops.address
   */
  export type shops$addressArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the addresses
     */
    select?: addressesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the addresses
     */
    omit?: addressesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: addressesInclude<ExtArgs> | null
    where?: addressesWhereInput
  }

  /**
   * shops.products
   */
  export type shops$productsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the products
     */
    select?: productsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the products
     */
    omit?: productsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productsInclude<ExtArgs> | null
    where?: productsWhereInput
    orderBy?: productsOrderByWithRelationInput | productsOrderByWithRelationInput[]
    cursor?: productsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductsScalarFieldEnum | ProductsScalarFieldEnum[]
  }

  /**
   * shops without action
   */
  export type shopsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the shops
     */
    select?: shopsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the shops
     */
    omit?: shopsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: shopsInclude<ExtArgs> | null
  }


  /**
   * Model addresses
   */

  export type AggregateAddresses = {
    _count: AddressesCountAggregateOutputType | null
    _avg: AddressesAvgAggregateOutputType | null
    _sum: AddressesSumAggregateOutputType | null
    _min: AddressesMinAggregateOutputType | null
    _max: AddressesMaxAggregateOutputType | null
  }

  export type AddressesAvgAggregateOutputType = {
    id: number | null
    user_id: number | null
    province_id: number | null
    district_id: number | null
    region_id: number | null
  }

  export type AddressesSumAggregateOutputType = {
    id: number | null
    user_id: number | null
    province_id: number | null
    district_id: number | null
    region_id: number | null
  }

  export type AddressesMinAggregateOutputType = {
    id: number | null
    user_id: number | null
    full_name: string | null
    phone_number: string | null
    address: string | null
    province_id: number | null
    province_name: string | null
    district_id: number | null
    district_name: string | null
    ward_code: string | null
    ward_name: string | null
    region_id: number | null
    type_address: $Enums.AddressTypeEnum | null
    is_default: boolean | null
    is_deleted: boolean | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type AddressesMaxAggregateOutputType = {
    id: number | null
    user_id: number | null
    full_name: string | null
    phone_number: string | null
    address: string | null
    province_id: number | null
    province_name: string | null
    district_id: number | null
    district_name: string | null
    ward_code: string | null
    ward_name: string | null
    region_id: number | null
    type_address: $Enums.AddressTypeEnum | null
    is_default: boolean | null
    is_deleted: boolean | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type AddressesCountAggregateOutputType = {
    id: number
    user_id: number
    full_name: number
    phone_number: number
    address: number
    province_id: number
    province_name: number
    district_id: number
    district_name: number
    ward_code: number
    ward_name: number
    region_id: number
    type_address: number
    is_default: number
    is_deleted: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type AddressesAvgAggregateInputType = {
    id?: true
    user_id?: true
    province_id?: true
    district_id?: true
    region_id?: true
  }

  export type AddressesSumAggregateInputType = {
    id?: true
    user_id?: true
    province_id?: true
    district_id?: true
    region_id?: true
  }

  export type AddressesMinAggregateInputType = {
    id?: true
    user_id?: true
    full_name?: true
    phone_number?: true
    address?: true
    province_id?: true
    province_name?: true
    district_id?: true
    district_name?: true
    ward_code?: true
    ward_name?: true
    region_id?: true
    type_address?: true
    is_default?: true
    is_deleted?: true
    created_at?: true
    updated_at?: true
  }

  export type AddressesMaxAggregateInputType = {
    id?: true
    user_id?: true
    full_name?: true
    phone_number?: true
    address?: true
    province_id?: true
    province_name?: true
    district_id?: true
    district_name?: true
    ward_code?: true
    ward_name?: true
    region_id?: true
    type_address?: true
    is_default?: true
    is_deleted?: true
    created_at?: true
    updated_at?: true
  }

  export type AddressesCountAggregateInputType = {
    id?: true
    user_id?: true
    full_name?: true
    phone_number?: true
    address?: true
    province_id?: true
    province_name?: true
    district_id?: true
    district_name?: true
    ward_code?: true
    ward_name?: true
    region_id?: true
    type_address?: true
    is_default?: true
    is_deleted?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type AddressesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which addresses to aggregate.
     */
    where?: addressesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of addresses to fetch.
     */
    orderBy?: addressesOrderByWithRelationInput | addressesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: addressesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` addresses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` addresses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned addresses
    **/
    _count?: true | AddressesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AddressesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AddressesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AddressesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AddressesMaxAggregateInputType
  }

  export type GetAddressesAggregateType<T extends AddressesAggregateArgs> = {
        [P in keyof T & keyof AggregateAddresses]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAddresses[P]>
      : GetScalarType<T[P], AggregateAddresses[P]>
  }




  export type addressesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: addressesWhereInput
    orderBy?: addressesOrderByWithAggregationInput | addressesOrderByWithAggregationInput[]
    by: AddressesScalarFieldEnum[] | AddressesScalarFieldEnum
    having?: addressesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AddressesCountAggregateInputType | true
    _avg?: AddressesAvgAggregateInputType
    _sum?: AddressesSumAggregateInputType
    _min?: AddressesMinAggregateInputType
    _max?: AddressesMaxAggregateInputType
  }

  export type AddressesGroupByOutputType = {
    id: number
    user_id: number
    full_name: string
    phone_number: string
    address: string
    province_id: number | null
    province_name: string | null
    district_id: number | null
    district_name: string | null
    ward_code: string | null
    ward_name: string | null
    region_id: number | null
    type_address: $Enums.AddressTypeEnum | null
    is_default: boolean
    is_deleted: boolean
    created_at: Date
    updated_at: Date
    _count: AddressesCountAggregateOutputType | null
    _avg: AddressesAvgAggregateOutputType | null
    _sum: AddressesSumAggregateOutputType | null
    _min: AddressesMinAggregateOutputType | null
    _max: AddressesMaxAggregateOutputType | null
  }

  type GetAddressesGroupByPayload<T extends addressesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AddressesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AddressesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AddressesGroupByOutputType[P]>
            : GetScalarType<T[P], AddressesGroupByOutputType[P]>
        }
      >
    >


  export type addressesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    full_name?: boolean
    phone_number?: boolean
    address?: boolean
    province_id?: boolean
    province_name?: boolean
    district_id?: boolean
    district_name?: boolean
    ward_code?: boolean
    ward_name?: boolean
    region_id?: boolean
    type_address?: boolean
    is_default?: boolean
    is_deleted?: boolean
    created_at?: boolean
    updated_at?: boolean
    user?: boolean | usersDefaultArgs<ExtArgs>
    orders?: boolean | addresses$ordersArgs<ExtArgs>
    shops?: boolean | addresses$shopsArgs<ExtArgs>
    _count?: boolean | AddressesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["addresses"]>



  export type addressesSelectScalar = {
    id?: boolean
    user_id?: boolean
    full_name?: boolean
    phone_number?: boolean
    address?: boolean
    province_id?: boolean
    province_name?: boolean
    district_id?: boolean
    district_name?: boolean
    ward_code?: boolean
    ward_name?: boolean
    region_id?: boolean
    type_address?: boolean
    is_default?: boolean
    is_deleted?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type addressesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "user_id" | "full_name" | "phone_number" | "address" | "province_id" | "province_name" | "district_id" | "district_name" | "ward_code" | "ward_name" | "region_id" | "type_address" | "is_default" | "is_deleted" | "created_at" | "updated_at", ExtArgs["result"]["addresses"]>
  export type addressesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | usersDefaultArgs<ExtArgs>
    orders?: boolean | addresses$ordersArgs<ExtArgs>
    shops?: boolean | addresses$shopsArgs<ExtArgs>
    _count?: boolean | AddressesCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $addressesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "addresses"
    objects: {
      user: Prisma.$usersPayload<ExtArgs>
      orders: Prisma.$ordersPayload<ExtArgs>[]
      shops: Prisma.$shopsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      user_id: number
      full_name: string
      phone_number: string
      address: string
      province_id: number | null
      province_name: string | null
      district_id: number | null
      district_name: string | null
      ward_code: string | null
      ward_name: string | null
      region_id: number | null
      type_address: $Enums.AddressTypeEnum | null
      is_default: boolean
      is_deleted: boolean
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["addresses"]>
    composites: {}
  }

  type addressesGetPayload<S extends boolean | null | undefined | addressesDefaultArgs> = $Result.GetResult<Prisma.$addressesPayload, S>

  type addressesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<addressesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AddressesCountAggregateInputType | true
    }

  export interface addressesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['addresses'], meta: { name: 'addresses' } }
    /**
     * Find zero or one Addresses that matches the filter.
     * @param {addressesFindUniqueArgs} args - Arguments to find a Addresses
     * @example
     * // Get one Addresses
     * const addresses = await prisma.addresses.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends addressesFindUniqueArgs>(args: SelectSubset<T, addressesFindUniqueArgs<ExtArgs>>): Prisma__addressesClient<$Result.GetResult<Prisma.$addressesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Addresses that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {addressesFindUniqueOrThrowArgs} args - Arguments to find a Addresses
     * @example
     * // Get one Addresses
     * const addresses = await prisma.addresses.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends addressesFindUniqueOrThrowArgs>(args: SelectSubset<T, addressesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__addressesClient<$Result.GetResult<Prisma.$addressesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Addresses that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {addressesFindFirstArgs} args - Arguments to find a Addresses
     * @example
     * // Get one Addresses
     * const addresses = await prisma.addresses.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends addressesFindFirstArgs>(args?: SelectSubset<T, addressesFindFirstArgs<ExtArgs>>): Prisma__addressesClient<$Result.GetResult<Prisma.$addressesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Addresses that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {addressesFindFirstOrThrowArgs} args - Arguments to find a Addresses
     * @example
     * // Get one Addresses
     * const addresses = await prisma.addresses.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends addressesFindFirstOrThrowArgs>(args?: SelectSubset<T, addressesFindFirstOrThrowArgs<ExtArgs>>): Prisma__addressesClient<$Result.GetResult<Prisma.$addressesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Addresses that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {addressesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Addresses
     * const addresses = await prisma.addresses.findMany()
     * 
     * // Get first 10 Addresses
     * const addresses = await prisma.addresses.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const addressesWithIdOnly = await prisma.addresses.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends addressesFindManyArgs>(args?: SelectSubset<T, addressesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$addressesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Addresses.
     * @param {addressesCreateArgs} args - Arguments to create a Addresses.
     * @example
     * // Create one Addresses
     * const Addresses = await prisma.addresses.create({
     *   data: {
     *     // ... data to create a Addresses
     *   }
     * })
     * 
     */
    create<T extends addressesCreateArgs>(args: SelectSubset<T, addressesCreateArgs<ExtArgs>>): Prisma__addressesClient<$Result.GetResult<Prisma.$addressesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Addresses.
     * @param {addressesCreateManyArgs} args - Arguments to create many Addresses.
     * @example
     * // Create many Addresses
     * const addresses = await prisma.addresses.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends addressesCreateManyArgs>(args?: SelectSubset<T, addressesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Addresses.
     * @param {addressesDeleteArgs} args - Arguments to delete one Addresses.
     * @example
     * // Delete one Addresses
     * const Addresses = await prisma.addresses.delete({
     *   where: {
     *     // ... filter to delete one Addresses
     *   }
     * })
     * 
     */
    delete<T extends addressesDeleteArgs>(args: SelectSubset<T, addressesDeleteArgs<ExtArgs>>): Prisma__addressesClient<$Result.GetResult<Prisma.$addressesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Addresses.
     * @param {addressesUpdateArgs} args - Arguments to update one Addresses.
     * @example
     * // Update one Addresses
     * const addresses = await prisma.addresses.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends addressesUpdateArgs>(args: SelectSubset<T, addressesUpdateArgs<ExtArgs>>): Prisma__addressesClient<$Result.GetResult<Prisma.$addressesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Addresses.
     * @param {addressesDeleteManyArgs} args - Arguments to filter Addresses to delete.
     * @example
     * // Delete a few Addresses
     * const { count } = await prisma.addresses.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends addressesDeleteManyArgs>(args?: SelectSubset<T, addressesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Addresses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {addressesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Addresses
     * const addresses = await prisma.addresses.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends addressesUpdateManyArgs>(args: SelectSubset<T, addressesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Addresses.
     * @param {addressesUpsertArgs} args - Arguments to update or create a Addresses.
     * @example
     * // Update or create a Addresses
     * const addresses = await prisma.addresses.upsert({
     *   create: {
     *     // ... data to create a Addresses
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Addresses we want to update
     *   }
     * })
     */
    upsert<T extends addressesUpsertArgs>(args: SelectSubset<T, addressesUpsertArgs<ExtArgs>>): Prisma__addressesClient<$Result.GetResult<Prisma.$addressesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Addresses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {addressesCountArgs} args - Arguments to filter Addresses to count.
     * @example
     * // Count the number of Addresses
     * const count = await prisma.addresses.count({
     *   where: {
     *     // ... the filter for the Addresses we want to count
     *   }
     * })
    **/
    count<T extends addressesCountArgs>(
      args?: Subset<T, addressesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AddressesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Addresses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AddressesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AddressesAggregateArgs>(args: Subset<T, AddressesAggregateArgs>): Prisma.PrismaPromise<GetAddressesAggregateType<T>>

    /**
     * Group by Addresses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {addressesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends addressesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: addressesGroupByArgs['orderBy'] }
        : { orderBy?: addressesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, addressesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAddressesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the addresses model
   */
  readonly fields: addressesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for addresses.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__addressesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usersDefaultArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    orders<T extends addresses$ordersArgs<ExtArgs> = {}>(args?: Subset<T, addresses$ordersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ordersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    shops<T extends addresses$shopsArgs<ExtArgs> = {}>(args?: Subset<T, addresses$shopsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$shopsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the addresses model
   */
  interface addressesFieldRefs {
    readonly id: FieldRef<"addresses", 'Int'>
    readonly user_id: FieldRef<"addresses", 'Int'>
    readonly full_name: FieldRef<"addresses", 'String'>
    readonly phone_number: FieldRef<"addresses", 'String'>
    readonly address: FieldRef<"addresses", 'String'>
    readonly province_id: FieldRef<"addresses", 'Int'>
    readonly province_name: FieldRef<"addresses", 'String'>
    readonly district_id: FieldRef<"addresses", 'Int'>
    readonly district_name: FieldRef<"addresses", 'String'>
    readonly ward_code: FieldRef<"addresses", 'String'>
    readonly ward_name: FieldRef<"addresses", 'String'>
    readonly region_id: FieldRef<"addresses", 'Int'>
    readonly type_address: FieldRef<"addresses", 'AddressTypeEnum'>
    readonly is_default: FieldRef<"addresses", 'Boolean'>
    readonly is_deleted: FieldRef<"addresses", 'Boolean'>
    readonly created_at: FieldRef<"addresses", 'DateTime'>
    readonly updated_at: FieldRef<"addresses", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * addresses findUnique
   */
  export type addressesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the addresses
     */
    select?: addressesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the addresses
     */
    omit?: addressesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: addressesInclude<ExtArgs> | null
    /**
     * Filter, which addresses to fetch.
     */
    where: addressesWhereUniqueInput
  }

  /**
   * addresses findUniqueOrThrow
   */
  export type addressesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the addresses
     */
    select?: addressesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the addresses
     */
    omit?: addressesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: addressesInclude<ExtArgs> | null
    /**
     * Filter, which addresses to fetch.
     */
    where: addressesWhereUniqueInput
  }

  /**
   * addresses findFirst
   */
  export type addressesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the addresses
     */
    select?: addressesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the addresses
     */
    omit?: addressesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: addressesInclude<ExtArgs> | null
    /**
     * Filter, which addresses to fetch.
     */
    where?: addressesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of addresses to fetch.
     */
    orderBy?: addressesOrderByWithRelationInput | addressesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for addresses.
     */
    cursor?: addressesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` addresses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` addresses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of addresses.
     */
    distinct?: AddressesScalarFieldEnum | AddressesScalarFieldEnum[]
  }

  /**
   * addresses findFirstOrThrow
   */
  export type addressesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the addresses
     */
    select?: addressesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the addresses
     */
    omit?: addressesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: addressesInclude<ExtArgs> | null
    /**
     * Filter, which addresses to fetch.
     */
    where?: addressesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of addresses to fetch.
     */
    orderBy?: addressesOrderByWithRelationInput | addressesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for addresses.
     */
    cursor?: addressesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` addresses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` addresses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of addresses.
     */
    distinct?: AddressesScalarFieldEnum | AddressesScalarFieldEnum[]
  }

  /**
   * addresses findMany
   */
  export type addressesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the addresses
     */
    select?: addressesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the addresses
     */
    omit?: addressesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: addressesInclude<ExtArgs> | null
    /**
     * Filter, which addresses to fetch.
     */
    where?: addressesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of addresses to fetch.
     */
    orderBy?: addressesOrderByWithRelationInput | addressesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing addresses.
     */
    cursor?: addressesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` addresses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` addresses.
     */
    skip?: number
    distinct?: AddressesScalarFieldEnum | AddressesScalarFieldEnum[]
  }

  /**
   * addresses create
   */
  export type addressesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the addresses
     */
    select?: addressesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the addresses
     */
    omit?: addressesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: addressesInclude<ExtArgs> | null
    /**
     * The data needed to create a addresses.
     */
    data: XOR<addressesCreateInput, addressesUncheckedCreateInput>
  }

  /**
   * addresses createMany
   */
  export type addressesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many addresses.
     */
    data: addressesCreateManyInput | addressesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * addresses update
   */
  export type addressesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the addresses
     */
    select?: addressesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the addresses
     */
    omit?: addressesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: addressesInclude<ExtArgs> | null
    /**
     * The data needed to update a addresses.
     */
    data: XOR<addressesUpdateInput, addressesUncheckedUpdateInput>
    /**
     * Choose, which addresses to update.
     */
    where: addressesWhereUniqueInput
  }

  /**
   * addresses updateMany
   */
  export type addressesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update addresses.
     */
    data: XOR<addressesUpdateManyMutationInput, addressesUncheckedUpdateManyInput>
    /**
     * Filter which addresses to update
     */
    where?: addressesWhereInput
    /**
     * Limit how many addresses to update.
     */
    limit?: number
  }

  /**
   * addresses upsert
   */
  export type addressesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the addresses
     */
    select?: addressesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the addresses
     */
    omit?: addressesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: addressesInclude<ExtArgs> | null
    /**
     * The filter to search for the addresses to update in case it exists.
     */
    where: addressesWhereUniqueInput
    /**
     * In case the addresses found by the `where` argument doesn't exist, create a new addresses with this data.
     */
    create: XOR<addressesCreateInput, addressesUncheckedCreateInput>
    /**
     * In case the addresses was found with the provided `where` argument, update it with this data.
     */
    update: XOR<addressesUpdateInput, addressesUncheckedUpdateInput>
  }

  /**
   * addresses delete
   */
  export type addressesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the addresses
     */
    select?: addressesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the addresses
     */
    omit?: addressesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: addressesInclude<ExtArgs> | null
    /**
     * Filter which addresses to delete.
     */
    where: addressesWhereUniqueInput
  }

  /**
   * addresses deleteMany
   */
  export type addressesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which addresses to delete
     */
    where?: addressesWhereInput
    /**
     * Limit how many addresses to delete.
     */
    limit?: number
  }

  /**
   * addresses.orders
   */
  export type addresses$ordersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the orders
     */
    select?: ordersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the orders
     */
    omit?: ordersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordersInclude<ExtArgs> | null
    where?: ordersWhereInput
    orderBy?: ordersOrderByWithRelationInput | ordersOrderByWithRelationInput[]
    cursor?: ordersWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrdersScalarFieldEnum | OrdersScalarFieldEnum[]
  }

  /**
   * addresses.shops
   */
  export type addresses$shopsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the shops
     */
    select?: shopsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the shops
     */
    omit?: shopsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: shopsInclude<ExtArgs> | null
    where?: shopsWhereInput
    orderBy?: shopsOrderByWithRelationInput | shopsOrderByWithRelationInput[]
    cursor?: shopsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ShopsScalarFieldEnum | ShopsScalarFieldEnum[]
  }

  /**
   * addresses without action
   */
  export type addressesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the addresses
     */
    select?: addressesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the addresses
     */
    omit?: addressesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: addressesInclude<ExtArgs> | null
  }


  /**
   * Model products
   */

  export type AggregateProducts = {
    _count: ProductsCountAggregateOutputType | null
    _avg: ProductsAvgAggregateOutputType | null
    _sum: ProductsSumAggregateOutputType | null
    _min: ProductsMinAggregateOutputType | null
    _max: ProductsMaxAggregateOutputType | null
  }

  export type ProductsAvgAggregateOutputType = {
    id: number | null
    old_price: number | null
    new_price: number | null
    discount_percentage: number | null
    stock: number | null
    sold: number | null
    weight: number | null
    category_id: number | null
    shop_id: number | null
  }

  export type ProductsSumAggregateOutputType = {
    id: number | null
    old_price: number | null
    new_price: number | null
    discount_percentage: number | null
    stock: number | null
    sold: number | null
    weight: number | null
    category_id: number | null
    shop_id: number | null
  }

  export type ProductsMinAggregateOutputType = {
    id: number | null
    uuid: string | null
    name: string | null
    slug: string | null
    description: string | null
    old_price: number | null
    new_price: number | null
    discount_percentage: number | null
    stock: number | null
    sold: number | null
    weight: number | null
    category_id: number | null
    shop_id: number | null
    is_deleted: boolean | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type ProductsMaxAggregateOutputType = {
    id: number | null
    uuid: string | null
    name: string | null
    slug: string | null
    description: string | null
    old_price: number | null
    new_price: number | null
    discount_percentage: number | null
    stock: number | null
    sold: number | null
    weight: number | null
    category_id: number | null
    shop_id: number | null
    is_deleted: boolean | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type ProductsCountAggregateOutputType = {
    id: number
    uuid: number
    name: number
    slug: number
    description: number
    old_price: number
    new_price: number
    discount_percentage: number
    stock: number
    sold: number
    weight: number
    category_id: number
    shop_id: number
    is_deleted: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type ProductsAvgAggregateInputType = {
    id?: true
    old_price?: true
    new_price?: true
    discount_percentage?: true
    stock?: true
    sold?: true
    weight?: true
    category_id?: true
    shop_id?: true
  }

  export type ProductsSumAggregateInputType = {
    id?: true
    old_price?: true
    new_price?: true
    discount_percentage?: true
    stock?: true
    sold?: true
    weight?: true
    category_id?: true
    shop_id?: true
  }

  export type ProductsMinAggregateInputType = {
    id?: true
    uuid?: true
    name?: true
    slug?: true
    description?: true
    old_price?: true
    new_price?: true
    discount_percentage?: true
    stock?: true
    sold?: true
    weight?: true
    category_id?: true
    shop_id?: true
    is_deleted?: true
    created_at?: true
    updated_at?: true
  }

  export type ProductsMaxAggregateInputType = {
    id?: true
    uuid?: true
    name?: true
    slug?: true
    description?: true
    old_price?: true
    new_price?: true
    discount_percentage?: true
    stock?: true
    sold?: true
    weight?: true
    category_id?: true
    shop_id?: true
    is_deleted?: true
    created_at?: true
    updated_at?: true
  }

  export type ProductsCountAggregateInputType = {
    id?: true
    uuid?: true
    name?: true
    slug?: true
    description?: true
    old_price?: true
    new_price?: true
    discount_percentage?: true
    stock?: true
    sold?: true
    weight?: true
    category_id?: true
    shop_id?: true
    is_deleted?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type ProductsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which products to aggregate.
     */
    where?: productsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of products to fetch.
     */
    orderBy?: productsOrderByWithRelationInput | productsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: productsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` products.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned products
    **/
    _count?: true | ProductsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProductsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProductsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProductsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProductsMaxAggregateInputType
  }

  export type GetProductsAggregateType<T extends ProductsAggregateArgs> = {
        [P in keyof T & keyof AggregateProducts]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProducts[P]>
      : GetScalarType<T[P], AggregateProducts[P]>
  }




  export type productsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: productsWhereInput
    orderBy?: productsOrderByWithAggregationInput | productsOrderByWithAggregationInput[]
    by: ProductsScalarFieldEnum[] | ProductsScalarFieldEnum
    having?: productsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProductsCountAggregateInputType | true
    _avg?: ProductsAvgAggregateInputType
    _sum?: ProductsSumAggregateInputType
    _min?: ProductsMinAggregateInputType
    _max?: ProductsMaxAggregateInputType
  }

  export type ProductsGroupByOutputType = {
    id: number
    uuid: string
    name: string
    slug: string
    description: string | null
    old_price: number | null
    new_price: number
    discount_percentage: number | null
    stock: number
    sold: number
    weight: number | null
    category_id: number | null
    shop_id: number | null
    is_deleted: boolean
    created_at: Date
    updated_at: Date
    _count: ProductsCountAggregateOutputType | null
    _avg: ProductsAvgAggregateOutputType | null
    _sum: ProductsSumAggregateOutputType | null
    _min: ProductsMinAggregateOutputType | null
    _max: ProductsMaxAggregateOutputType | null
  }

  type GetProductsGroupByPayload<T extends productsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProductsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProductsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProductsGroupByOutputType[P]>
            : GetScalarType<T[P], ProductsGroupByOutputType[P]>
        }
      >
    >


  export type productsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    uuid?: boolean
    name?: boolean
    slug?: boolean
    description?: boolean
    old_price?: boolean
    new_price?: boolean
    discount_percentage?: boolean
    stock?: boolean
    sold?: boolean
    weight?: boolean
    category_id?: boolean
    shop_id?: boolean
    is_deleted?: boolean
    created_at?: boolean
    updated_at?: boolean
    category?: boolean | products$categoryArgs<ExtArgs>
    shop?: boolean | products$shopArgs<ExtArgs>
    cart_items?: boolean | products$cart_itemsArgs<ExtArgs>
    order_items?: boolean | products$order_itemsArgs<ExtArgs>
    reviews?: boolean | products$reviewsArgs<ExtArgs>
    product_images?: boolean | products$product_imagesArgs<ExtArgs>
    product_specifications?: boolean | products$product_specificationsArgs<ExtArgs>
    product_attributes?: boolean | products$product_attributesArgs<ExtArgs>
    _count?: boolean | ProductsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["products"]>



  export type productsSelectScalar = {
    id?: boolean
    uuid?: boolean
    name?: boolean
    slug?: boolean
    description?: boolean
    old_price?: boolean
    new_price?: boolean
    discount_percentage?: boolean
    stock?: boolean
    sold?: boolean
    weight?: boolean
    category_id?: boolean
    shop_id?: boolean
    is_deleted?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type productsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "uuid" | "name" | "slug" | "description" | "old_price" | "new_price" | "discount_percentage" | "stock" | "sold" | "weight" | "category_id" | "shop_id" | "is_deleted" | "created_at" | "updated_at", ExtArgs["result"]["products"]>
  export type productsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    category?: boolean | products$categoryArgs<ExtArgs>
    shop?: boolean | products$shopArgs<ExtArgs>
    cart_items?: boolean | products$cart_itemsArgs<ExtArgs>
    order_items?: boolean | products$order_itemsArgs<ExtArgs>
    reviews?: boolean | products$reviewsArgs<ExtArgs>
    product_images?: boolean | products$product_imagesArgs<ExtArgs>
    product_specifications?: boolean | products$product_specificationsArgs<ExtArgs>
    product_attributes?: boolean | products$product_attributesArgs<ExtArgs>
    _count?: boolean | ProductsCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $productsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "products"
    objects: {
      category: Prisma.$categoriesPayload<ExtArgs> | null
      shop: Prisma.$shopsPayload<ExtArgs> | null
      cart_items: Prisma.$cart_itemsPayload<ExtArgs>[]
      order_items: Prisma.$order_itemsPayload<ExtArgs>[]
      reviews: Prisma.$reviewsPayload<ExtArgs>[]
      product_images: Prisma.$product_imagesPayload<ExtArgs>[]
      product_specifications: Prisma.$product_specificationsPayload<ExtArgs>[]
      product_attributes: Prisma.$product_attributesPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      uuid: string
      name: string
      slug: string
      description: string | null
      old_price: number | null
      new_price: number
      discount_percentage: number | null
      stock: number
      sold: number
      weight: number | null
      category_id: number | null
      shop_id: number | null
      is_deleted: boolean
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["products"]>
    composites: {}
  }

  type productsGetPayload<S extends boolean | null | undefined | productsDefaultArgs> = $Result.GetResult<Prisma.$productsPayload, S>

  type productsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<productsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProductsCountAggregateInputType | true
    }

  export interface productsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['products'], meta: { name: 'products' } }
    /**
     * Find zero or one Products that matches the filter.
     * @param {productsFindUniqueArgs} args - Arguments to find a Products
     * @example
     * // Get one Products
     * const products = await prisma.products.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends productsFindUniqueArgs>(args: SelectSubset<T, productsFindUniqueArgs<ExtArgs>>): Prisma__productsClient<$Result.GetResult<Prisma.$productsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Products that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {productsFindUniqueOrThrowArgs} args - Arguments to find a Products
     * @example
     * // Get one Products
     * const products = await prisma.products.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends productsFindUniqueOrThrowArgs>(args: SelectSubset<T, productsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__productsClient<$Result.GetResult<Prisma.$productsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Products that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {productsFindFirstArgs} args - Arguments to find a Products
     * @example
     * // Get one Products
     * const products = await prisma.products.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends productsFindFirstArgs>(args?: SelectSubset<T, productsFindFirstArgs<ExtArgs>>): Prisma__productsClient<$Result.GetResult<Prisma.$productsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Products that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {productsFindFirstOrThrowArgs} args - Arguments to find a Products
     * @example
     * // Get one Products
     * const products = await prisma.products.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends productsFindFirstOrThrowArgs>(args?: SelectSubset<T, productsFindFirstOrThrowArgs<ExtArgs>>): Prisma__productsClient<$Result.GetResult<Prisma.$productsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Products that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {productsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Products
     * const products = await prisma.products.findMany()
     * 
     * // Get first 10 Products
     * const products = await prisma.products.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const productsWithIdOnly = await prisma.products.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends productsFindManyArgs>(args?: SelectSubset<T, productsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$productsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Products.
     * @param {productsCreateArgs} args - Arguments to create a Products.
     * @example
     * // Create one Products
     * const Products = await prisma.products.create({
     *   data: {
     *     // ... data to create a Products
     *   }
     * })
     * 
     */
    create<T extends productsCreateArgs>(args: SelectSubset<T, productsCreateArgs<ExtArgs>>): Prisma__productsClient<$Result.GetResult<Prisma.$productsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Products.
     * @param {productsCreateManyArgs} args - Arguments to create many Products.
     * @example
     * // Create many Products
     * const products = await prisma.products.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends productsCreateManyArgs>(args?: SelectSubset<T, productsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Products.
     * @param {productsDeleteArgs} args - Arguments to delete one Products.
     * @example
     * // Delete one Products
     * const Products = await prisma.products.delete({
     *   where: {
     *     // ... filter to delete one Products
     *   }
     * })
     * 
     */
    delete<T extends productsDeleteArgs>(args: SelectSubset<T, productsDeleteArgs<ExtArgs>>): Prisma__productsClient<$Result.GetResult<Prisma.$productsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Products.
     * @param {productsUpdateArgs} args - Arguments to update one Products.
     * @example
     * // Update one Products
     * const products = await prisma.products.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends productsUpdateArgs>(args: SelectSubset<T, productsUpdateArgs<ExtArgs>>): Prisma__productsClient<$Result.GetResult<Prisma.$productsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Products.
     * @param {productsDeleteManyArgs} args - Arguments to filter Products to delete.
     * @example
     * // Delete a few Products
     * const { count } = await prisma.products.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends productsDeleteManyArgs>(args?: SelectSubset<T, productsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Products.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {productsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Products
     * const products = await prisma.products.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends productsUpdateManyArgs>(args: SelectSubset<T, productsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Products.
     * @param {productsUpsertArgs} args - Arguments to update or create a Products.
     * @example
     * // Update or create a Products
     * const products = await prisma.products.upsert({
     *   create: {
     *     // ... data to create a Products
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Products we want to update
     *   }
     * })
     */
    upsert<T extends productsUpsertArgs>(args: SelectSubset<T, productsUpsertArgs<ExtArgs>>): Prisma__productsClient<$Result.GetResult<Prisma.$productsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Products.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {productsCountArgs} args - Arguments to filter Products to count.
     * @example
     * // Count the number of Products
     * const count = await prisma.products.count({
     *   where: {
     *     // ... the filter for the Products we want to count
     *   }
     * })
    **/
    count<T extends productsCountArgs>(
      args?: Subset<T, productsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProductsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Products.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProductsAggregateArgs>(args: Subset<T, ProductsAggregateArgs>): Prisma.PrismaPromise<GetProductsAggregateType<T>>

    /**
     * Group by Products.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {productsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends productsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: productsGroupByArgs['orderBy'] }
        : { orderBy?: productsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, productsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProductsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the products model
   */
  readonly fields: productsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for products.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__productsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    category<T extends products$categoryArgs<ExtArgs> = {}>(args?: Subset<T, products$categoryArgs<ExtArgs>>): Prisma__categoriesClient<$Result.GetResult<Prisma.$categoriesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    shop<T extends products$shopArgs<ExtArgs> = {}>(args?: Subset<T, products$shopArgs<ExtArgs>>): Prisma__shopsClient<$Result.GetResult<Prisma.$shopsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    cart_items<T extends products$cart_itemsArgs<ExtArgs> = {}>(args?: Subset<T, products$cart_itemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cart_itemsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    order_items<T extends products$order_itemsArgs<ExtArgs> = {}>(args?: Subset<T, products$order_itemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$order_itemsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    reviews<T extends products$reviewsArgs<ExtArgs> = {}>(args?: Subset<T, products$reviewsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$reviewsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    product_images<T extends products$product_imagesArgs<ExtArgs> = {}>(args?: Subset<T, products$product_imagesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$product_imagesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    product_specifications<T extends products$product_specificationsArgs<ExtArgs> = {}>(args?: Subset<T, products$product_specificationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$product_specificationsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    product_attributes<T extends products$product_attributesArgs<ExtArgs> = {}>(args?: Subset<T, products$product_attributesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$product_attributesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the products model
   */
  interface productsFieldRefs {
    readonly id: FieldRef<"products", 'Int'>
    readonly uuid: FieldRef<"products", 'String'>
    readonly name: FieldRef<"products", 'String'>
    readonly slug: FieldRef<"products", 'String'>
    readonly description: FieldRef<"products", 'String'>
    readonly old_price: FieldRef<"products", 'Float'>
    readonly new_price: FieldRef<"products", 'Float'>
    readonly discount_percentage: FieldRef<"products", 'Float'>
    readonly stock: FieldRef<"products", 'Int'>
    readonly sold: FieldRef<"products", 'Int'>
    readonly weight: FieldRef<"products", 'Float'>
    readonly category_id: FieldRef<"products", 'Int'>
    readonly shop_id: FieldRef<"products", 'Int'>
    readonly is_deleted: FieldRef<"products", 'Boolean'>
    readonly created_at: FieldRef<"products", 'DateTime'>
    readonly updated_at: FieldRef<"products", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * products findUnique
   */
  export type productsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the products
     */
    select?: productsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the products
     */
    omit?: productsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productsInclude<ExtArgs> | null
    /**
     * Filter, which products to fetch.
     */
    where: productsWhereUniqueInput
  }

  /**
   * products findUniqueOrThrow
   */
  export type productsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the products
     */
    select?: productsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the products
     */
    omit?: productsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productsInclude<ExtArgs> | null
    /**
     * Filter, which products to fetch.
     */
    where: productsWhereUniqueInput
  }

  /**
   * products findFirst
   */
  export type productsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the products
     */
    select?: productsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the products
     */
    omit?: productsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productsInclude<ExtArgs> | null
    /**
     * Filter, which products to fetch.
     */
    where?: productsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of products to fetch.
     */
    orderBy?: productsOrderByWithRelationInput | productsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for products.
     */
    cursor?: productsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` products.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of products.
     */
    distinct?: ProductsScalarFieldEnum | ProductsScalarFieldEnum[]
  }

  /**
   * products findFirstOrThrow
   */
  export type productsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the products
     */
    select?: productsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the products
     */
    omit?: productsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productsInclude<ExtArgs> | null
    /**
     * Filter, which products to fetch.
     */
    where?: productsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of products to fetch.
     */
    orderBy?: productsOrderByWithRelationInput | productsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for products.
     */
    cursor?: productsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` products.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of products.
     */
    distinct?: ProductsScalarFieldEnum | ProductsScalarFieldEnum[]
  }

  /**
   * products findMany
   */
  export type productsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the products
     */
    select?: productsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the products
     */
    omit?: productsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productsInclude<ExtArgs> | null
    /**
     * Filter, which products to fetch.
     */
    where?: productsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of products to fetch.
     */
    orderBy?: productsOrderByWithRelationInput | productsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing products.
     */
    cursor?: productsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` products.
     */
    skip?: number
    distinct?: ProductsScalarFieldEnum | ProductsScalarFieldEnum[]
  }

  /**
   * products create
   */
  export type productsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the products
     */
    select?: productsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the products
     */
    omit?: productsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productsInclude<ExtArgs> | null
    /**
     * The data needed to create a products.
     */
    data: XOR<productsCreateInput, productsUncheckedCreateInput>
  }

  /**
   * products createMany
   */
  export type productsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many products.
     */
    data: productsCreateManyInput | productsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * products update
   */
  export type productsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the products
     */
    select?: productsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the products
     */
    omit?: productsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productsInclude<ExtArgs> | null
    /**
     * The data needed to update a products.
     */
    data: XOR<productsUpdateInput, productsUncheckedUpdateInput>
    /**
     * Choose, which products to update.
     */
    where: productsWhereUniqueInput
  }

  /**
   * products updateMany
   */
  export type productsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update products.
     */
    data: XOR<productsUpdateManyMutationInput, productsUncheckedUpdateManyInput>
    /**
     * Filter which products to update
     */
    where?: productsWhereInput
    /**
     * Limit how many products to update.
     */
    limit?: number
  }

  /**
   * products upsert
   */
  export type productsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the products
     */
    select?: productsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the products
     */
    omit?: productsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productsInclude<ExtArgs> | null
    /**
     * The filter to search for the products to update in case it exists.
     */
    where: productsWhereUniqueInput
    /**
     * In case the products found by the `where` argument doesn't exist, create a new products with this data.
     */
    create: XOR<productsCreateInput, productsUncheckedCreateInput>
    /**
     * In case the products was found with the provided `where` argument, update it with this data.
     */
    update: XOR<productsUpdateInput, productsUncheckedUpdateInput>
  }

  /**
   * products delete
   */
  export type productsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the products
     */
    select?: productsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the products
     */
    omit?: productsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productsInclude<ExtArgs> | null
    /**
     * Filter which products to delete.
     */
    where: productsWhereUniqueInput
  }

  /**
   * products deleteMany
   */
  export type productsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which products to delete
     */
    where?: productsWhereInput
    /**
     * Limit how many products to delete.
     */
    limit?: number
  }

  /**
   * products.category
   */
  export type products$categoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categories
     */
    select?: categoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the categories
     */
    omit?: categoriesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: categoriesInclude<ExtArgs> | null
    where?: categoriesWhereInput
  }

  /**
   * products.shop
   */
  export type products$shopArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the shops
     */
    select?: shopsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the shops
     */
    omit?: shopsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: shopsInclude<ExtArgs> | null
    where?: shopsWhereInput
  }

  /**
   * products.cart_items
   */
  export type products$cart_itemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cart_items
     */
    select?: cart_itemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cart_items
     */
    omit?: cart_itemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cart_itemsInclude<ExtArgs> | null
    where?: cart_itemsWhereInput
    orderBy?: cart_itemsOrderByWithRelationInput | cart_itemsOrderByWithRelationInput[]
    cursor?: cart_itemsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Cart_itemsScalarFieldEnum | Cart_itemsScalarFieldEnum[]
  }

  /**
   * products.order_items
   */
  export type products$order_itemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_items
     */
    select?: order_itemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the order_items
     */
    omit?: order_itemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_itemsInclude<ExtArgs> | null
    where?: order_itemsWhereInput
    orderBy?: order_itemsOrderByWithRelationInput | order_itemsOrderByWithRelationInput[]
    cursor?: order_itemsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Order_itemsScalarFieldEnum | Order_itemsScalarFieldEnum[]
  }

  /**
   * products.reviews
   */
  export type products$reviewsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reviews
     */
    select?: reviewsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reviews
     */
    omit?: reviewsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reviewsInclude<ExtArgs> | null
    where?: reviewsWhereInput
    orderBy?: reviewsOrderByWithRelationInput | reviewsOrderByWithRelationInput[]
    cursor?: reviewsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReviewsScalarFieldEnum | ReviewsScalarFieldEnum[]
  }

  /**
   * products.product_images
   */
  export type products$product_imagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_images
     */
    select?: product_imagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the product_images
     */
    omit?: product_imagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_imagesInclude<ExtArgs> | null
    where?: product_imagesWhereInput
    orderBy?: product_imagesOrderByWithRelationInput | product_imagesOrderByWithRelationInput[]
    cursor?: product_imagesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Product_imagesScalarFieldEnum | Product_imagesScalarFieldEnum[]
  }

  /**
   * products.product_specifications
   */
  export type products$product_specificationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_specifications
     */
    select?: product_specificationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the product_specifications
     */
    omit?: product_specificationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_specificationsInclude<ExtArgs> | null
    where?: product_specificationsWhereInput
    orderBy?: product_specificationsOrderByWithRelationInput | product_specificationsOrderByWithRelationInput[]
    cursor?: product_specificationsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Product_specificationsScalarFieldEnum | Product_specificationsScalarFieldEnum[]
  }

  /**
   * products.product_attributes
   */
  export type products$product_attributesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_attributes
     */
    select?: product_attributesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the product_attributes
     */
    omit?: product_attributesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_attributesInclude<ExtArgs> | null
    where?: product_attributesWhereInput
    orderBy?: product_attributesOrderByWithRelationInput | product_attributesOrderByWithRelationInput[]
    cursor?: product_attributesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Product_attributesScalarFieldEnum | Product_attributesScalarFieldEnum[]
  }

  /**
   * products without action
   */
  export type productsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the products
     */
    select?: productsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the products
     */
    omit?: productsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productsInclude<ExtArgs> | null
  }


  /**
   * Model categories
   */

  export type AggregateCategories = {
    _count: CategoriesCountAggregateOutputType | null
    _avg: CategoriesAvgAggregateOutputType | null
    _sum: CategoriesSumAggregateOutputType | null
    _min: CategoriesMinAggregateOutputType | null
    _max: CategoriesMaxAggregateOutputType | null
  }

  export type CategoriesAvgAggregateOutputType = {
    id: number | null
    parent_id: number | null
  }

  export type CategoriesSumAggregateOutputType = {
    id: number | null
    parent_id: number | null
  }

  export type CategoriesMinAggregateOutputType = {
    id: number | null
    uuid: string | null
    name: string | null
    icon: string | null
    slug: string | null
    parent_id: number | null
    is_deleted: boolean | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type CategoriesMaxAggregateOutputType = {
    id: number | null
    uuid: string | null
    name: string | null
    icon: string | null
    slug: string | null
    parent_id: number | null
    is_deleted: boolean | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type CategoriesCountAggregateOutputType = {
    id: number
    uuid: number
    name: number
    icon: number
    slug: number
    parent_id: number
    is_deleted: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type CategoriesAvgAggregateInputType = {
    id?: true
    parent_id?: true
  }

  export type CategoriesSumAggregateInputType = {
    id?: true
    parent_id?: true
  }

  export type CategoriesMinAggregateInputType = {
    id?: true
    uuid?: true
    name?: true
    icon?: true
    slug?: true
    parent_id?: true
    is_deleted?: true
    created_at?: true
    updated_at?: true
  }

  export type CategoriesMaxAggregateInputType = {
    id?: true
    uuid?: true
    name?: true
    icon?: true
    slug?: true
    parent_id?: true
    is_deleted?: true
    created_at?: true
    updated_at?: true
  }

  export type CategoriesCountAggregateInputType = {
    id?: true
    uuid?: true
    name?: true
    icon?: true
    slug?: true
    parent_id?: true
    is_deleted?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type CategoriesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which categories to aggregate.
     */
    where?: categoriesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of categories to fetch.
     */
    orderBy?: categoriesOrderByWithRelationInput | categoriesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: categoriesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` categories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned categories
    **/
    _count?: true | CategoriesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CategoriesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CategoriesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CategoriesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CategoriesMaxAggregateInputType
  }

  export type GetCategoriesAggregateType<T extends CategoriesAggregateArgs> = {
        [P in keyof T & keyof AggregateCategories]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCategories[P]>
      : GetScalarType<T[P], AggregateCategories[P]>
  }




  export type categoriesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: categoriesWhereInput
    orderBy?: categoriesOrderByWithAggregationInput | categoriesOrderByWithAggregationInput[]
    by: CategoriesScalarFieldEnum[] | CategoriesScalarFieldEnum
    having?: categoriesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CategoriesCountAggregateInputType | true
    _avg?: CategoriesAvgAggregateInputType
    _sum?: CategoriesSumAggregateInputType
    _min?: CategoriesMinAggregateInputType
    _max?: CategoriesMaxAggregateInputType
  }

  export type CategoriesGroupByOutputType = {
    id: number
    uuid: string
    name: string
    icon: string | null
    slug: string
    parent_id: number | null
    is_deleted: boolean
    created_at: Date
    updated_at: Date
    _count: CategoriesCountAggregateOutputType | null
    _avg: CategoriesAvgAggregateOutputType | null
    _sum: CategoriesSumAggregateOutputType | null
    _min: CategoriesMinAggregateOutputType | null
    _max: CategoriesMaxAggregateOutputType | null
  }

  type GetCategoriesGroupByPayload<T extends categoriesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CategoriesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CategoriesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CategoriesGroupByOutputType[P]>
            : GetScalarType<T[P], CategoriesGroupByOutputType[P]>
        }
      >
    >


  export type categoriesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    uuid?: boolean
    name?: boolean
    icon?: boolean
    slug?: boolean
    parent_id?: boolean
    is_deleted?: boolean
    created_at?: boolean
    updated_at?: boolean
    parent?: boolean | categories$parentArgs<ExtArgs>
    children?: boolean | categories$childrenArgs<ExtArgs>
    products?: boolean | categories$productsArgs<ExtArgs>
    category_breadcrumbs?: boolean | categories$category_breadcrumbsArgs<ExtArgs>
    _count?: boolean | CategoriesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["categories"]>



  export type categoriesSelectScalar = {
    id?: boolean
    uuid?: boolean
    name?: boolean
    icon?: boolean
    slug?: boolean
    parent_id?: boolean
    is_deleted?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type categoriesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "uuid" | "name" | "icon" | "slug" | "parent_id" | "is_deleted" | "created_at" | "updated_at", ExtArgs["result"]["categories"]>
  export type categoriesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    parent?: boolean | categories$parentArgs<ExtArgs>
    children?: boolean | categories$childrenArgs<ExtArgs>
    products?: boolean | categories$productsArgs<ExtArgs>
    category_breadcrumbs?: boolean | categories$category_breadcrumbsArgs<ExtArgs>
    _count?: boolean | CategoriesCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $categoriesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "categories"
    objects: {
      parent: Prisma.$categoriesPayload<ExtArgs> | null
      children: Prisma.$categoriesPayload<ExtArgs>[]
      products: Prisma.$productsPayload<ExtArgs>[]
      category_breadcrumbs: Prisma.$category_breadcrumbsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      uuid: string
      name: string
      icon: string | null
      slug: string
      parent_id: number | null
      is_deleted: boolean
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["categories"]>
    composites: {}
  }

  type categoriesGetPayload<S extends boolean | null | undefined | categoriesDefaultArgs> = $Result.GetResult<Prisma.$categoriesPayload, S>

  type categoriesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<categoriesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CategoriesCountAggregateInputType | true
    }

  export interface categoriesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['categories'], meta: { name: 'categories' } }
    /**
     * Find zero or one Categories that matches the filter.
     * @param {categoriesFindUniqueArgs} args - Arguments to find a Categories
     * @example
     * // Get one Categories
     * const categories = await prisma.categories.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends categoriesFindUniqueArgs>(args: SelectSubset<T, categoriesFindUniqueArgs<ExtArgs>>): Prisma__categoriesClient<$Result.GetResult<Prisma.$categoriesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Categories that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {categoriesFindUniqueOrThrowArgs} args - Arguments to find a Categories
     * @example
     * // Get one Categories
     * const categories = await prisma.categories.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends categoriesFindUniqueOrThrowArgs>(args: SelectSubset<T, categoriesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__categoriesClient<$Result.GetResult<Prisma.$categoriesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Categories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {categoriesFindFirstArgs} args - Arguments to find a Categories
     * @example
     * // Get one Categories
     * const categories = await prisma.categories.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends categoriesFindFirstArgs>(args?: SelectSubset<T, categoriesFindFirstArgs<ExtArgs>>): Prisma__categoriesClient<$Result.GetResult<Prisma.$categoriesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Categories that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {categoriesFindFirstOrThrowArgs} args - Arguments to find a Categories
     * @example
     * // Get one Categories
     * const categories = await prisma.categories.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends categoriesFindFirstOrThrowArgs>(args?: SelectSubset<T, categoriesFindFirstOrThrowArgs<ExtArgs>>): Prisma__categoriesClient<$Result.GetResult<Prisma.$categoriesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Categories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {categoriesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Categories
     * const categories = await prisma.categories.findMany()
     * 
     * // Get first 10 Categories
     * const categories = await prisma.categories.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const categoriesWithIdOnly = await prisma.categories.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends categoriesFindManyArgs>(args?: SelectSubset<T, categoriesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$categoriesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Categories.
     * @param {categoriesCreateArgs} args - Arguments to create a Categories.
     * @example
     * // Create one Categories
     * const Categories = await prisma.categories.create({
     *   data: {
     *     // ... data to create a Categories
     *   }
     * })
     * 
     */
    create<T extends categoriesCreateArgs>(args: SelectSubset<T, categoriesCreateArgs<ExtArgs>>): Prisma__categoriesClient<$Result.GetResult<Prisma.$categoriesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Categories.
     * @param {categoriesCreateManyArgs} args - Arguments to create many Categories.
     * @example
     * // Create many Categories
     * const categories = await prisma.categories.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends categoriesCreateManyArgs>(args?: SelectSubset<T, categoriesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Categories.
     * @param {categoriesDeleteArgs} args - Arguments to delete one Categories.
     * @example
     * // Delete one Categories
     * const Categories = await prisma.categories.delete({
     *   where: {
     *     // ... filter to delete one Categories
     *   }
     * })
     * 
     */
    delete<T extends categoriesDeleteArgs>(args: SelectSubset<T, categoriesDeleteArgs<ExtArgs>>): Prisma__categoriesClient<$Result.GetResult<Prisma.$categoriesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Categories.
     * @param {categoriesUpdateArgs} args - Arguments to update one Categories.
     * @example
     * // Update one Categories
     * const categories = await prisma.categories.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends categoriesUpdateArgs>(args: SelectSubset<T, categoriesUpdateArgs<ExtArgs>>): Prisma__categoriesClient<$Result.GetResult<Prisma.$categoriesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Categories.
     * @param {categoriesDeleteManyArgs} args - Arguments to filter Categories to delete.
     * @example
     * // Delete a few Categories
     * const { count } = await prisma.categories.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends categoriesDeleteManyArgs>(args?: SelectSubset<T, categoriesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Categories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {categoriesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Categories
     * const categories = await prisma.categories.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends categoriesUpdateManyArgs>(args: SelectSubset<T, categoriesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Categories.
     * @param {categoriesUpsertArgs} args - Arguments to update or create a Categories.
     * @example
     * // Update or create a Categories
     * const categories = await prisma.categories.upsert({
     *   create: {
     *     // ... data to create a Categories
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Categories we want to update
     *   }
     * })
     */
    upsert<T extends categoriesUpsertArgs>(args: SelectSubset<T, categoriesUpsertArgs<ExtArgs>>): Prisma__categoriesClient<$Result.GetResult<Prisma.$categoriesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Categories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {categoriesCountArgs} args - Arguments to filter Categories to count.
     * @example
     * // Count the number of Categories
     * const count = await prisma.categories.count({
     *   where: {
     *     // ... the filter for the Categories we want to count
     *   }
     * })
    **/
    count<T extends categoriesCountArgs>(
      args?: Subset<T, categoriesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CategoriesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Categories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CategoriesAggregateArgs>(args: Subset<T, CategoriesAggregateArgs>): Prisma.PrismaPromise<GetCategoriesAggregateType<T>>

    /**
     * Group by Categories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {categoriesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends categoriesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: categoriesGroupByArgs['orderBy'] }
        : { orderBy?: categoriesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, categoriesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCategoriesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the categories model
   */
  readonly fields: categoriesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for categories.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__categoriesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    parent<T extends categories$parentArgs<ExtArgs> = {}>(args?: Subset<T, categories$parentArgs<ExtArgs>>): Prisma__categoriesClient<$Result.GetResult<Prisma.$categoriesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    children<T extends categories$childrenArgs<ExtArgs> = {}>(args?: Subset<T, categories$childrenArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$categoriesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    products<T extends categories$productsArgs<ExtArgs> = {}>(args?: Subset<T, categories$productsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$productsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    category_breadcrumbs<T extends categories$category_breadcrumbsArgs<ExtArgs> = {}>(args?: Subset<T, categories$category_breadcrumbsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$category_breadcrumbsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the categories model
   */
  interface categoriesFieldRefs {
    readonly id: FieldRef<"categories", 'Int'>
    readonly uuid: FieldRef<"categories", 'String'>
    readonly name: FieldRef<"categories", 'String'>
    readonly icon: FieldRef<"categories", 'String'>
    readonly slug: FieldRef<"categories", 'String'>
    readonly parent_id: FieldRef<"categories", 'Int'>
    readonly is_deleted: FieldRef<"categories", 'Boolean'>
    readonly created_at: FieldRef<"categories", 'DateTime'>
    readonly updated_at: FieldRef<"categories", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * categories findUnique
   */
  export type categoriesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categories
     */
    select?: categoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the categories
     */
    omit?: categoriesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: categoriesInclude<ExtArgs> | null
    /**
     * Filter, which categories to fetch.
     */
    where: categoriesWhereUniqueInput
  }

  /**
   * categories findUniqueOrThrow
   */
  export type categoriesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categories
     */
    select?: categoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the categories
     */
    omit?: categoriesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: categoriesInclude<ExtArgs> | null
    /**
     * Filter, which categories to fetch.
     */
    where: categoriesWhereUniqueInput
  }

  /**
   * categories findFirst
   */
  export type categoriesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categories
     */
    select?: categoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the categories
     */
    omit?: categoriesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: categoriesInclude<ExtArgs> | null
    /**
     * Filter, which categories to fetch.
     */
    where?: categoriesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of categories to fetch.
     */
    orderBy?: categoriesOrderByWithRelationInput | categoriesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for categories.
     */
    cursor?: categoriesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` categories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of categories.
     */
    distinct?: CategoriesScalarFieldEnum | CategoriesScalarFieldEnum[]
  }

  /**
   * categories findFirstOrThrow
   */
  export type categoriesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categories
     */
    select?: categoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the categories
     */
    omit?: categoriesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: categoriesInclude<ExtArgs> | null
    /**
     * Filter, which categories to fetch.
     */
    where?: categoriesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of categories to fetch.
     */
    orderBy?: categoriesOrderByWithRelationInput | categoriesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for categories.
     */
    cursor?: categoriesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` categories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of categories.
     */
    distinct?: CategoriesScalarFieldEnum | CategoriesScalarFieldEnum[]
  }

  /**
   * categories findMany
   */
  export type categoriesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categories
     */
    select?: categoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the categories
     */
    omit?: categoriesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: categoriesInclude<ExtArgs> | null
    /**
     * Filter, which categories to fetch.
     */
    where?: categoriesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of categories to fetch.
     */
    orderBy?: categoriesOrderByWithRelationInput | categoriesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing categories.
     */
    cursor?: categoriesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` categories.
     */
    skip?: number
    distinct?: CategoriesScalarFieldEnum | CategoriesScalarFieldEnum[]
  }

  /**
   * categories create
   */
  export type categoriesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categories
     */
    select?: categoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the categories
     */
    omit?: categoriesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: categoriesInclude<ExtArgs> | null
    /**
     * The data needed to create a categories.
     */
    data: XOR<categoriesCreateInput, categoriesUncheckedCreateInput>
  }

  /**
   * categories createMany
   */
  export type categoriesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many categories.
     */
    data: categoriesCreateManyInput | categoriesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * categories update
   */
  export type categoriesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categories
     */
    select?: categoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the categories
     */
    omit?: categoriesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: categoriesInclude<ExtArgs> | null
    /**
     * The data needed to update a categories.
     */
    data: XOR<categoriesUpdateInput, categoriesUncheckedUpdateInput>
    /**
     * Choose, which categories to update.
     */
    where: categoriesWhereUniqueInput
  }

  /**
   * categories updateMany
   */
  export type categoriesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update categories.
     */
    data: XOR<categoriesUpdateManyMutationInput, categoriesUncheckedUpdateManyInput>
    /**
     * Filter which categories to update
     */
    where?: categoriesWhereInput
    /**
     * Limit how many categories to update.
     */
    limit?: number
  }

  /**
   * categories upsert
   */
  export type categoriesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categories
     */
    select?: categoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the categories
     */
    omit?: categoriesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: categoriesInclude<ExtArgs> | null
    /**
     * The filter to search for the categories to update in case it exists.
     */
    where: categoriesWhereUniqueInput
    /**
     * In case the categories found by the `where` argument doesn't exist, create a new categories with this data.
     */
    create: XOR<categoriesCreateInput, categoriesUncheckedCreateInput>
    /**
     * In case the categories was found with the provided `where` argument, update it with this data.
     */
    update: XOR<categoriesUpdateInput, categoriesUncheckedUpdateInput>
  }

  /**
   * categories delete
   */
  export type categoriesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categories
     */
    select?: categoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the categories
     */
    omit?: categoriesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: categoriesInclude<ExtArgs> | null
    /**
     * Filter which categories to delete.
     */
    where: categoriesWhereUniqueInput
  }

  /**
   * categories deleteMany
   */
  export type categoriesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which categories to delete
     */
    where?: categoriesWhereInput
    /**
     * Limit how many categories to delete.
     */
    limit?: number
  }

  /**
   * categories.parent
   */
  export type categories$parentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categories
     */
    select?: categoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the categories
     */
    omit?: categoriesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: categoriesInclude<ExtArgs> | null
    where?: categoriesWhereInput
  }

  /**
   * categories.children
   */
  export type categories$childrenArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categories
     */
    select?: categoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the categories
     */
    omit?: categoriesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: categoriesInclude<ExtArgs> | null
    where?: categoriesWhereInput
    orderBy?: categoriesOrderByWithRelationInput | categoriesOrderByWithRelationInput[]
    cursor?: categoriesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CategoriesScalarFieldEnum | CategoriesScalarFieldEnum[]
  }

  /**
   * categories.products
   */
  export type categories$productsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the products
     */
    select?: productsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the products
     */
    omit?: productsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productsInclude<ExtArgs> | null
    where?: productsWhereInput
    orderBy?: productsOrderByWithRelationInput | productsOrderByWithRelationInput[]
    cursor?: productsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductsScalarFieldEnum | ProductsScalarFieldEnum[]
  }

  /**
   * categories.category_breadcrumbs
   */
  export type categories$category_breadcrumbsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the category_breadcrumbs
     */
    select?: category_breadcrumbsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the category_breadcrumbs
     */
    omit?: category_breadcrumbsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: category_breadcrumbsInclude<ExtArgs> | null
    where?: category_breadcrumbsWhereInput
    orderBy?: category_breadcrumbsOrderByWithRelationInput | category_breadcrumbsOrderByWithRelationInput[]
    cursor?: category_breadcrumbsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Category_breadcrumbsScalarFieldEnum | Category_breadcrumbsScalarFieldEnum[]
  }

  /**
   * categories without action
   */
  export type categoriesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categories
     */
    select?: categoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the categories
     */
    omit?: categoriesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: categoriesInclude<ExtArgs> | null
  }


  /**
   * Model category_breadcrumbs
   */

  export type AggregateCategory_breadcrumbs = {
    _count: Category_breadcrumbsCountAggregateOutputType | null
    _avg: Category_breadcrumbsAvgAggregateOutputType | null
    _sum: Category_breadcrumbsSumAggregateOutputType | null
    _min: Category_breadcrumbsMinAggregateOutputType | null
    _max: Category_breadcrumbsMaxAggregateOutputType | null
  }

  export type Category_breadcrumbsAvgAggregateOutputType = {
    id: number | null
    category_id: number | null
    level: number | null
  }

  export type Category_breadcrumbsSumAggregateOutputType = {
    id: number | null
    category_id: number | null
    level: number | null
  }

  export type Category_breadcrumbsMinAggregateOutputType = {
    id: number | null
    category_id: number | null
    name: string | null
    path: string | null
    level: number | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Category_breadcrumbsMaxAggregateOutputType = {
    id: number | null
    category_id: number | null
    name: string | null
    path: string | null
    level: number | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Category_breadcrumbsCountAggregateOutputType = {
    id: number
    category_id: number
    name: number
    path: number
    level: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type Category_breadcrumbsAvgAggregateInputType = {
    id?: true
    category_id?: true
    level?: true
  }

  export type Category_breadcrumbsSumAggregateInputType = {
    id?: true
    category_id?: true
    level?: true
  }

  export type Category_breadcrumbsMinAggregateInputType = {
    id?: true
    category_id?: true
    name?: true
    path?: true
    level?: true
    created_at?: true
    updated_at?: true
  }

  export type Category_breadcrumbsMaxAggregateInputType = {
    id?: true
    category_id?: true
    name?: true
    path?: true
    level?: true
    created_at?: true
    updated_at?: true
  }

  export type Category_breadcrumbsCountAggregateInputType = {
    id?: true
    category_id?: true
    name?: true
    path?: true
    level?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type Category_breadcrumbsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which category_breadcrumbs to aggregate.
     */
    where?: category_breadcrumbsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of category_breadcrumbs to fetch.
     */
    orderBy?: category_breadcrumbsOrderByWithRelationInput | category_breadcrumbsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: category_breadcrumbsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` category_breadcrumbs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` category_breadcrumbs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned category_breadcrumbs
    **/
    _count?: true | Category_breadcrumbsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Category_breadcrumbsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Category_breadcrumbsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Category_breadcrumbsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Category_breadcrumbsMaxAggregateInputType
  }

  export type GetCategory_breadcrumbsAggregateType<T extends Category_breadcrumbsAggregateArgs> = {
        [P in keyof T & keyof AggregateCategory_breadcrumbs]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCategory_breadcrumbs[P]>
      : GetScalarType<T[P], AggregateCategory_breadcrumbs[P]>
  }




  export type category_breadcrumbsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: category_breadcrumbsWhereInput
    orderBy?: category_breadcrumbsOrderByWithAggregationInput | category_breadcrumbsOrderByWithAggregationInput[]
    by: Category_breadcrumbsScalarFieldEnum[] | Category_breadcrumbsScalarFieldEnum
    having?: category_breadcrumbsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Category_breadcrumbsCountAggregateInputType | true
    _avg?: Category_breadcrumbsAvgAggregateInputType
    _sum?: Category_breadcrumbsSumAggregateInputType
    _min?: Category_breadcrumbsMinAggregateInputType
    _max?: Category_breadcrumbsMaxAggregateInputType
  }

  export type Category_breadcrumbsGroupByOutputType = {
    id: number
    category_id: number
    name: string
    path: string
    level: number
    created_at: Date
    updated_at: Date
    _count: Category_breadcrumbsCountAggregateOutputType | null
    _avg: Category_breadcrumbsAvgAggregateOutputType | null
    _sum: Category_breadcrumbsSumAggregateOutputType | null
    _min: Category_breadcrumbsMinAggregateOutputType | null
    _max: Category_breadcrumbsMaxAggregateOutputType | null
  }

  type GetCategory_breadcrumbsGroupByPayload<T extends category_breadcrumbsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Category_breadcrumbsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Category_breadcrumbsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Category_breadcrumbsGroupByOutputType[P]>
            : GetScalarType<T[P], Category_breadcrumbsGroupByOutputType[P]>
        }
      >
    >


  export type category_breadcrumbsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    category_id?: boolean
    name?: boolean
    path?: boolean
    level?: boolean
    created_at?: boolean
    updated_at?: boolean
    category?: boolean | categoriesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["category_breadcrumbs"]>



  export type category_breadcrumbsSelectScalar = {
    id?: boolean
    category_id?: boolean
    name?: boolean
    path?: boolean
    level?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type category_breadcrumbsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "category_id" | "name" | "path" | "level" | "created_at" | "updated_at", ExtArgs["result"]["category_breadcrumbs"]>
  export type category_breadcrumbsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    category?: boolean | categoriesDefaultArgs<ExtArgs>
  }

  export type $category_breadcrumbsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "category_breadcrumbs"
    objects: {
      category: Prisma.$categoriesPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      category_id: number
      name: string
      path: string
      level: number
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["category_breadcrumbs"]>
    composites: {}
  }

  type category_breadcrumbsGetPayload<S extends boolean | null | undefined | category_breadcrumbsDefaultArgs> = $Result.GetResult<Prisma.$category_breadcrumbsPayload, S>

  type category_breadcrumbsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<category_breadcrumbsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Category_breadcrumbsCountAggregateInputType | true
    }

  export interface category_breadcrumbsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['category_breadcrumbs'], meta: { name: 'category_breadcrumbs' } }
    /**
     * Find zero or one Category_breadcrumbs that matches the filter.
     * @param {category_breadcrumbsFindUniqueArgs} args - Arguments to find a Category_breadcrumbs
     * @example
     * // Get one Category_breadcrumbs
     * const category_breadcrumbs = await prisma.category_breadcrumbs.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends category_breadcrumbsFindUniqueArgs>(args: SelectSubset<T, category_breadcrumbsFindUniqueArgs<ExtArgs>>): Prisma__category_breadcrumbsClient<$Result.GetResult<Prisma.$category_breadcrumbsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Category_breadcrumbs that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {category_breadcrumbsFindUniqueOrThrowArgs} args - Arguments to find a Category_breadcrumbs
     * @example
     * // Get one Category_breadcrumbs
     * const category_breadcrumbs = await prisma.category_breadcrumbs.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends category_breadcrumbsFindUniqueOrThrowArgs>(args: SelectSubset<T, category_breadcrumbsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__category_breadcrumbsClient<$Result.GetResult<Prisma.$category_breadcrumbsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Category_breadcrumbs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {category_breadcrumbsFindFirstArgs} args - Arguments to find a Category_breadcrumbs
     * @example
     * // Get one Category_breadcrumbs
     * const category_breadcrumbs = await prisma.category_breadcrumbs.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends category_breadcrumbsFindFirstArgs>(args?: SelectSubset<T, category_breadcrumbsFindFirstArgs<ExtArgs>>): Prisma__category_breadcrumbsClient<$Result.GetResult<Prisma.$category_breadcrumbsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Category_breadcrumbs that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {category_breadcrumbsFindFirstOrThrowArgs} args - Arguments to find a Category_breadcrumbs
     * @example
     * // Get one Category_breadcrumbs
     * const category_breadcrumbs = await prisma.category_breadcrumbs.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends category_breadcrumbsFindFirstOrThrowArgs>(args?: SelectSubset<T, category_breadcrumbsFindFirstOrThrowArgs<ExtArgs>>): Prisma__category_breadcrumbsClient<$Result.GetResult<Prisma.$category_breadcrumbsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Category_breadcrumbs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {category_breadcrumbsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Category_breadcrumbs
     * const category_breadcrumbs = await prisma.category_breadcrumbs.findMany()
     * 
     * // Get first 10 Category_breadcrumbs
     * const category_breadcrumbs = await prisma.category_breadcrumbs.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const category_breadcrumbsWithIdOnly = await prisma.category_breadcrumbs.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends category_breadcrumbsFindManyArgs>(args?: SelectSubset<T, category_breadcrumbsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$category_breadcrumbsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Category_breadcrumbs.
     * @param {category_breadcrumbsCreateArgs} args - Arguments to create a Category_breadcrumbs.
     * @example
     * // Create one Category_breadcrumbs
     * const Category_breadcrumbs = await prisma.category_breadcrumbs.create({
     *   data: {
     *     // ... data to create a Category_breadcrumbs
     *   }
     * })
     * 
     */
    create<T extends category_breadcrumbsCreateArgs>(args: SelectSubset<T, category_breadcrumbsCreateArgs<ExtArgs>>): Prisma__category_breadcrumbsClient<$Result.GetResult<Prisma.$category_breadcrumbsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Category_breadcrumbs.
     * @param {category_breadcrumbsCreateManyArgs} args - Arguments to create many Category_breadcrumbs.
     * @example
     * // Create many Category_breadcrumbs
     * const category_breadcrumbs = await prisma.category_breadcrumbs.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends category_breadcrumbsCreateManyArgs>(args?: SelectSubset<T, category_breadcrumbsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Category_breadcrumbs.
     * @param {category_breadcrumbsDeleteArgs} args - Arguments to delete one Category_breadcrumbs.
     * @example
     * // Delete one Category_breadcrumbs
     * const Category_breadcrumbs = await prisma.category_breadcrumbs.delete({
     *   where: {
     *     // ... filter to delete one Category_breadcrumbs
     *   }
     * })
     * 
     */
    delete<T extends category_breadcrumbsDeleteArgs>(args: SelectSubset<T, category_breadcrumbsDeleteArgs<ExtArgs>>): Prisma__category_breadcrumbsClient<$Result.GetResult<Prisma.$category_breadcrumbsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Category_breadcrumbs.
     * @param {category_breadcrumbsUpdateArgs} args - Arguments to update one Category_breadcrumbs.
     * @example
     * // Update one Category_breadcrumbs
     * const category_breadcrumbs = await prisma.category_breadcrumbs.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends category_breadcrumbsUpdateArgs>(args: SelectSubset<T, category_breadcrumbsUpdateArgs<ExtArgs>>): Prisma__category_breadcrumbsClient<$Result.GetResult<Prisma.$category_breadcrumbsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Category_breadcrumbs.
     * @param {category_breadcrumbsDeleteManyArgs} args - Arguments to filter Category_breadcrumbs to delete.
     * @example
     * // Delete a few Category_breadcrumbs
     * const { count } = await prisma.category_breadcrumbs.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends category_breadcrumbsDeleteManyArgs>(args?: SelectSubset<T, category_breadcrumbsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Category_breadcrumbs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {category_breadcrumbsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Category_breadcrumbs
     * const category_breadcrumbs = await prisma.category_breadcrumbs.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends category_breadcrumbsUpdateManyArgs>(args: SelectSubset<T, category_breadcrumbsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Category_breadcrumbs.
     * @param {category_breadcrumbsUpsertArgs} args - Arguments to update or create a Category_breadcrumbs.
     * @example
     * // Update or create a Category_breadcrumbs
     * const category_breadcrumbs = await prisma.category_breadcrumbs.upsert({
     *   create: {
     *     // ... data to create a Category_breadcrumbs
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Category_breadcrumbs we want to update
     *   }
     * })
     */
    upsert<T extends category_breadcrumbsUpsertArgs>(args: SelectSubset<T, category_breadcrumbsUpsertArgs<ExtArgs>>): Prisma__category_breadcrumbsClient<$Result.GetResult<Prisma.$category_breadcrumbsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Category_breadcrumbs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {category_breadcrumbsCountArgs} args - Arguments to filter Category_breadcrumbs to count.
     * @example
     * // Count the number of Category_breadcrumbs
     * const count = await prisma.category_breadcrumbs.count({
     *   where: {
     *     // ... the filter for the Category_breadcrumbs we want to count
     *   }
     * })
    **/
    count<T extends category_breadcrumbsCountArgs>(
      args?: Subset<T, category_breadcrumbsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Category_breadcrumbsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Category_breadcrumbs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Category_breadcrumbsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Category_breadcrumbsAggregateArgs>(args: Subset<T, Category_breadcrumbsAggregateArgs>): Prisma.PrismaPromise<GetCategory_breadcrumbsAggregateType<T>>

    /**
     * Group by Category_breadcrumbs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {category_breadcrumbsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends category_breadcrumbsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: category_breadcrumbsGroupByArgs['orderBy'] }
        : { orderBy?: category_breadcrumbsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, category_breadcrumbsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCategory_breadcrumbsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the category_breadcrumbs model
   */
  readonly fields: category_breadcrumbsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for category_breadcrumbs.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__category_breadcrumbsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    category<T extends categoriesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, categoriesDefaultArgs<ExtArgs>>): Prisma__categoriesClient<$Result.GetResult<Prisma.$categoriesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the category_breadcrumbs model
   */
  interface category_breadcrumbsFieldRefs {
    readonly id: FieldRef<"category_breadcrumbs", 'Int'>
    readonly category_id: FieldRef<"category_breadcrumbs", 'Int'>
    readonly name: FieldRef<"category_breadcrumbs", 'String'>
    readonly path: FieldRef<"category_breadcrumbs", 'String'>
    readonly level: FieldRef<"category_breadcrumbs", 'Int'>
    readonly created_at: FieldRef<"category_breadcrumbs", 'DateTime'>
    readonly updated_at: FieldRef<"category_breadcrumbs", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * category_breadcrumbs findUnique
   */
  export type category_breadcrumbsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the category_breadcrumbs
     */
    select?: category_breadcrumbsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the category_breadcrumbs
     */
    omit?: category_breadcrumbsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: category_breadcrumbsInclude<ExtArgs> | null
    /**
     * Filter, which category_breadcrumbs to fetch.
     */
    where: category_breadcrumbsWhereUniqueInput
  }

  /**
   * category_breadcrumbs findUniqueOrThrow
   */
  export type category_breadcrumbsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the category_breadcrumbs
     */
    select?: category_breadcrumbsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the category_breadcrumbs
     */
    omit?: category_breadcrumbsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: category_breadcrumbsInclude<ExtArgs> | null
    /**
     * Filter, which category_breadcrumbs to fetch.
     */
    where: category_breadcrumbsWhereUniqueInput
  }

  /**
   * category_breadcrumbs findFirst
   */
  export type category_breadcrumbsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the category_breadcrumbs
     */
    select?: category_breadcrumbsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the category_breadcrumbs
     */
    omit?: category_breadcrumbsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: category_breadcrumbsInclude<ExtArgs> | null
    /**
     * Filter, which category_breadcrumbs to fetch.
     */
    where?: category_breadcrumbsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of category_breadcrumbs to fetch.
     */
    orderBy?: category_breadcrumbsOrderByWithRelationInput | category_breadcrumbsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for category_breadcrumbs.
     */
    cursor?: category_breadcrumbsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` category_breadcrumbs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` category_breadcrumbs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of category_breadcrumbs.
     */
    distinct?: Category_breadcrumbsScalarFieldEnum | Category_breadcrumbsScalarFieldEnum[]
  }

  /**
   * category_breadcrumbs findFirstOrThrow
   */
  export type category_breadcrumbsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the category_breadcrumbs
     */
    select?: category_breadcrumbsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the category_breadcrumbs
     */
    omit?: category_breadcrumbsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: category_breadcrumbsInclude<ExtArgs> | null
    /**
     * Filter, which category_breadcrumbs to fetch.
     */
    where?: category_breadcrumbsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of category_breadcrumbs to fetch.
     */
    orderBy?: category_breadcrumbsOrderByWithRelationInput | category_breadcrumbsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for category_breadcrumbs.
     */
    cursor?: category_breadcrumbsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` category_breadcrumbs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` category_breadcrumbs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of category_breadcrumbs.
     */
    distinct?: Category_breadcrumbsScalarFieldEnum | Category_breadcrumbsScalarFieldEnum[]
  }

  /**
   * category_breadcrumbs findMany
   */
  export type category_breadcrumbsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the category_breadcrumbs
     */
    select?: category_breadcrumbsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the category_breadcrumbs
     */
    omit?: category_breadcrumbsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: category_breadcrumbsInclude<ExtArgs> | null
    /**
     * Filter, which category_breadcrumbs to fetch.
     */
    where?: category_breadcrumbsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of category_breadcrumbs to fetch.
     */
    orderBy?: category_breadcrumbsOrderByWithRelationInput | category_breadcrumbsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing category_breadcrumbs.
     */
    cursor?: category_breadcrumbsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` category_breadcrumbs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` category_breadcrumbs.
     */
    skip?: number
    distinct?: Category_breadcrumbsScalarFieldEnum | Category_breadcrumbsScalarFieldEnum[]
  }

  /**
   * category_breadcrumbs create
   */
  export type category_breadcrumbsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the category_breadcrumbs
     */
    select?: category_breadcrumbsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the category_breadcrumbs
     */
    omit?: category_breadcrumbsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: category_breadcrumbsInclude<ExtArgs> | null
    /**
     * The data needed to create a category_breadcrumbs.
     */
    data: XOR<category_breadcrumbsCreateInput, category_breadcrumbsUncheckedCreateInput>
  }

  /**
   * category_breadcrumbs createMany
   */
  export type category_breadcrumbsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many category_breadcrumbs.
     */
    data: category_breadcrumbsCreateManyInput | category_breadcrumbsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * category_breadcrumbs update
   */
  export type category_breadcrumbsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the category_breadcrumbs
     */
    select?: category_breadcrumbsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the category_breadcrumbs
     */
    omit?: category_breadcrumbsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: category_breadcrumbsInclude<ExtArgs> | null
    /**
     * The data needed to update a category_breadcrumbs.
     */
    data: XOR<category_breadcrumbsUpdateInput, category_breadcrumbsUncheckedUpdateInput>
    /**
     * Choose, which category_breadcrumbs to update.
     */
    where: category_breadcrumbsWhereUniqueInput
  }

  /**
   * category_breadcrumbs updateMany
   */
  export type category_breadcrumbsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update category_breadcrumbs.
     */
    data: XOR<category_breadcrumbsUpdateManyMutationInput, category_breadcrumbsUncheckedUpdateManyInput>
    /**
     * Filter which category_breadcrumbs to update
     */
    where?: category_breadcrumbsWhereInput
    /**
     * Limit how many category_breadcrumbs to update.
     */
    limit?: number
  }

  /**
   * category_breadcrumbs upsert
   */
  export type category_breadcrumbsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the category_breadcrumbs
     */
    select?: category_breadcrumbsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the category_breadcrumbs
     */
    omit?: category_breadcrumbsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: category_breadcrumbsInclude<ExtArgs> | null
    /**
     * The filter to search for the category_breadcrumbs to update in case it exists.
     */
    where: category_breadcrumbsWhereUniqueInput
    /**
     * In case the category_breadcrumbs found by the `where` argument doesn't exist, create a new category_breadcrumbs with this data.
     */
    create: XOR<category_breadcrumbsCreateInput, category_breadcrumbsUncheckedCreateInput>
    /**
     * In case the category_breadcrumbs was found with the provided `where` argument, update it with this data.
     */
    update: XOR<category_breadcrumbsUpdateInput, category_breadcrumbsUncheckedUpdateInput>
  }

  /**
   * category_breadcrumbs delete
   */
  export type category_breadcrumbsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the category_breadcrumbs
     */
    select?: category_breadcrumbsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the category_breadcrumbs
     */
    omit?: category_breadcrumbsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: category_breadcrumbsInclude<ExtArgs> | null
    /**
     * Filter which category_breadcrumbs to delete.
     */
    where: category_breadcrumbsWhereUniqueInput
  }

  /**
   * category_breadcrumbs deleteMany
   */
  export type category_breadcrumbsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which category_breadcrumbs to delete
     */
    where?: category_breadcrumbsWhereInput
    /**
     * Limit how many category_breadcrumbs to delete.
     */
    limit?: number
  }

  /**
   * category_breadcrumbs without action
   */
  export type category_breadcrumbsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the category_breadcrumbs
     */
    select?: category_breadcrumbsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the category_breadcrumbs
     */
    omit?: category_breadcrumbsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: category_breadcrumbsInclude<ExtArgs> | null
  }


  /**
   * Model product_images
   */

  export type AggregateProduct_images = {
    _count: Product_imagesCountAggregateOutputType | null
    _avg: Product_imagesAvgAggregateOutputType | null
    _sum: Product_imagesSumAggregateOutputType | null
    _min: Product_imagesMinAggregateOutputType | null
    _max: Product_imagesMaxAggregateOutputType | null
  }

  export type Product_imagesAvgAggregateOutputType = {
    id: number | null
    product_id: number | null
  }

  export type Product_imagesSumAggregateOutputType = {
    id: number | null
    product_id: number | null
  }

  export type Product_imagesMinAggregateOutputType = {
    id: number | null
    product_id: number | null
    url: string | null
    is_primary: boolean | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Product_imagesMaxAggregateOutputType = {
    id: number | null
    product_id: number | null
    url: string | null
    is_primary: boolean | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Product_imagesCountAggregateOutputType = {
    id: number
    product_id: number
    url: number
    is_primary: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type Product_imagesAvgAggregateInputType = {
    id?: true
    product_id?: true
  }

  export type Product_imagesSumAggregateInputType = {
    id?: true
    product_id?: true
  }

  export type Product_imagesMinAggregateInputType = {
    id?: true
    product_id?: true
    url?: true
    is_primary?: true
    created_at?: true
    updated_at?: true
  }

  export type Product_imagesMaxAggregateInputType = {
    id?: true
    product_id?: true
    url?: true
    is_primary?: true
    created_at?: true
    updated_at?: true
  }

  export type Product_imagesCountAggregateInputType = {
    id?: true
    product_id?: true
    url?: true
    is_primary?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type Product_imagesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which product_images to aggregate.
     */
    where?: product_imagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of product_images to fetch.
     */
    orderBy?: product_imagesOrderByWithRelationInput | product_imagesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: product_imagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` product_images from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` product_images.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned product_images
    **/
    _count?: true | Product_imagesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Product_imagesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Product_imagesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Product_imagesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Product_imagesMaxAggregateInputType
  }

  export type GetProduct_imagesAggregateType<T extends Product_imagesAggregateArgs> = {
        [P in keyof T & keyof AggregateProduct_images]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProduct_images[P]>
      : GetScalarType<T[P], AggregateProduct_images[P]>
  }




  export type product_imagesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: product_imagesWhereInput
    orderBy?: product_imagesOrderByWithAggregationInput | product_imagesOrderByWithAggregationInput[]
    by: Product_imagesScalarFieldEnum[] | Product_imagesScalarFieldEnum
    having?: product_imagesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Product_imagesCountAggregateInputType | true
    _avg?: Product_imagesAvgAggregateInputType
    _sum?: Product_imagesSumAggregateInputType
    _min?: Product_imagesMinAggregateInputType
    _max?: Product_imagesMaxAggregateInputType
  }

  export type Product_imagesGroupByOutputType = {
    id: number
    product_id: number
    url: string
    is_primary: boolean
    created_at: Date
    updated_at: Date
    _count: Product_imagesCountAggregateOutputType | null
    _avg: Product_imagesAvgAggregateOutputType | null
    _sum: Product_imagesSumAggregateOutputType | null
    _min: Product_imagesMinAggregateOutputType | null
    _max: Product_imagesMaxAggregateOutputType | null
  }

  type GetProduct_imagesGroupByPayload<T extends product_imagesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Product_imagesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Product_imagesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Product_imagesGroupByOutputType[P]>
            : GetScalarType<T[P], Product_imagesGroupByOutputType[P]>
        }
      >
    >


  export type product_imagesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    product_id?: boolean
    url?: boolean
    is_primary?: boolean
    created_at?: boolean
    updated_at?: boolean
    product?: boolean | productsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["product_images"]>



  export type product_imagesSelectScalar = {
    id?: boolean
    product_id?: boolean
    url?: boolean
    is_primary?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type product_imagesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "product_id" | "url" | "is_primary" | "created_at" | "updated_at", ExtArgs["result"]["product_images"]>
  export type product_imagesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product?: boolean | productsDefaultArgs<ExtArgs>
  }

  export type $product_imagesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "product_images"
    objects: {
      product: Prisma.$productsPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      product_id: number
      url: string
      is_primary: boolean
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["product_images"]>
    composites: {}
  }

  type product_imagesGetPayload<S extends boolean | null | undefined | product_imagesDefaultArgs> = $Result.GetResult<Prisma.$product_imagesPayload, S>

  type product_imagesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<product_imagesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Product_imagesCountAggregateInputType | true
    }

  export interface product_imagesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['product_images'], meta: { name: 'product_images' } }
    /**
     * Find zero or one Product_images that matches the filter.
     * @param {product_imagesFindUniqueArgs} args - Arguments to find a Product_images
     * @example
     * // Get one Product_images
     * const product_images = await prisma.product_images.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends product_imagesFindUniqueArgs>(args: SelectSubset<T, product_imagesFindUniqueArgs<ExtArgs>>): Prisma__product_imagesClient<$Result.GetResult<Prisma.$product_imagesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Product_images that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {product_imagesFindUniqueOrThrowArgs} args - Arguments to find a Product_images
     * @example
     * // Get one Product_images
     * const product_images = await prisma.product_images.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends product_imagesFindUniqueOrThrowArgs>(args: SelectSubset<T, product_imagesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__product_imagesClient<$Result.GetResult<Prisma.$product_imagesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Product_images that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {product_imagesFindFirstArgs} args - Arguments to find a Product_images
     * @example
     * // Get one Product_images
     * const product_images = await prisma.product_images.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends product_imagesFindFirstArgs>(args?: SelectSubset<T, product_imagesFindFirstArgs<ExtArgs>>): Prisma__product_imagesClient<$Result.GetResult<Prisma.$product_imagesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Product_images that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {product_imagesFindFirstOrThrowArgs} args - Arguments to find a Product_images
     * @example
     * // Get one Product_images
     * const product_images = await prisma.product_images.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends product_imagesFindFirstOrThrowArgs>(args?: SelectSubset<T, product_imagesFindFirstOrThrowArgs<ExtArgs>>): Prisma__product_imagesClient<$Result.GetResult<Prisma.$product_imagesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Product_images that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {product_imagesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Product_images
     * const product_images = await prisma.product_images.findMany()
     * 
     * // Get first 10 Product_images
     * const product_images = await prisma.product_images.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const product_imagesWithIdOnly = await prisma.product_images.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends product_imagesFindManyArgs>(args?: SelectSubset<T, product_imagesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$product_imagesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Product_images.
     * @param {product_imagesCreateArgs} args - Arguments to create a Product_images.
     * @example
     * // Create one Product_images
     * const Product_images = await prisma.product_images.create({
     *   data: {
     *     // ... data to create a Product_images
     *   }
     * })
     * 
     */
    create<T extends product_imagesCreateArgs>(args: SelectSubset<T, product_imagesCreateArgs<ExtArgs>>): Prisma__product_imagesClient<$Result.GetResult<Prisma.$product_imagesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Product_images.
     * @param {product_imagesCreateManyArgs} args - Arguments to create many Product_images.
     * @example
     * // Create many Product_images
     * const product_images = await prisma.product_images.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends product_imagesCreateManyArgs>(args?: SelectSubset<T, product_imagesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Product_images.
     * @param {product_imagesDeleteArgs} args - Arguments to delete one Product_images.
     * @example
     * // Delete one Product_images
     * const Product_images = await prisma.product_images.delete({
     *   where: {
     *     // ... filter to delete one Product_images
     *   }
     * })
     * 
     */
    delete<T extends product_imagesDeleteArgs>(args: SelectSubset<T, product_imagesDeleteArgs<ExtArgs>>): Prisma__product_imagesClient<$Result.GetResult<Prisma.$product_imagesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Product_images.
     * @param {product_imagesUpdateArgs} args - Arguments to update one Product_images.
     * @example
     * // Update one Product_images
     * const product_images = await prisma.product_images.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends product_imagesUpdateArgs>(args: SelectSubset<T, product_imagesUpdateArgs<ExtArgs>>): Prisma__product_imagesClient<$Result.GetResult<Prisma.$product_imagesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Product_images.
     * @param {product_imagesDeleteManyArgs} args - Arguments to filter Product_images to delete.
     * @example
     * // Delete a few Product_images
     * const { count } = await prisma.product_images.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends product_imagesDeleteManyArgs>(args?: SelectSubset<T, product_imagesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Product_images.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {product_imagesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Product_images
     * const product_images = await prisma.product_images.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends product_imagesUpdateManyArgs>(args: SelectSubset<T, product_imagesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Product_images.
     * @param {product_imagesUpsertArgs} args - Arguments to update or create a Product_images.
     * @example
     * // Update or create a Product_images
     * const product_images = await prisma.product_images.upsert({
     *   create: {
     *     // ... data to create a Product_images
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Product_images we want to update
     *   }
     * })
     */
    upsert<T extends product_imagesUpsertArgs>(args: SelectSubset<T, product_imagesUpsertArgs<ExtArgs>>): Prisma__product_imagesClient<$Result.GetResult<Prisma.$product_imagesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Product_images.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {product_imagesCountArgs} args - Arguments to filter Product_images to count.
     * @example
     * // Count the number of Product_images
     * const count = await prisma.product_images.count({
     *   where: {
     *     // ... the filter for the Product_images we want to count
     *   }
     * })
    **/
    count<T extends product_imagesCountArgs>(
      args?: Subset<T, product_imagesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Product_imagesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Product_images.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Product_imagesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Product_imagesAggregateArgs>(args: Subset<T, Product_imagesAggregateArgs>): Prisma.PrismaPromise<GetProduct_imagesAggregateType<T>>

    /**
     * Group by Product_images.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {product_imagesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends product_imagesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: product_imagesGroupByArgs['orderBy'] }
        : { orderBy?: product_imagesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, product_imagesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProduct_imagesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the product_images model
   */
  readonly fields: product_imagesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for product_images.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__product_imagesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    product<T extends productsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, productsDefaultArgs<ExtArgs>>): Prisma__productsClient<$Result.GetResult<Prisma.$productsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the product_images model
   */
  interface product_imagesFieldRefs {
    readonly id: FieldRef<"product_images", 'Int'>
    readonly product_id: FieldRef<"product_images", 'Int'>
    readonly url: FieldRef<"product_images", 'String'>
    readonly is_primary: FieldRef<"product_images", 'Boolean'>
    readonly created_at: FieldRef<"product_images", 'DateTime'>
    readonly updated_at: FieldRef<"product_images", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * product_images findUnique
   */
  export type product_imagesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_images
     */
    select?: product_imagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the product_images
     */
    omit?: product_imagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_imagesInclude<ExtArgs> | null
    /**
     * Filter, which product_images to fetch.
     */
    where: product_imagesWhereUniqueInput
  }

  /**
   * product_images findUniqueOrThrow
   */
  export type product_imagesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_images
     */
    select?: product_imagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the product_images
     */
    omit?: product_imagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_imagesInclude<ExtArgs> | null
    /**
     * Filter, which product_images to fetch.
     */
    where: product_imagesWhereUniqueInput
  }

  /**
   * product_images findFirst
   */
  export type product_imagesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_images
     */
    select?: product_imagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the product_images
     */
    omit?: product_imagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_imagesInclude<ExtArgs> | null
    /**
     * Filter, which product_images to fetch.
     */
    where?: product_imagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of product_images to fetch.
     */
    orderBy?: product_imagesOrderByWithRelationInput | product_imagesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for product_images.
     */
    cursor?: product_imagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` product_images from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` product_images.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of product_images.
     */
    distinct?: Product_imagesScalarFieldEnum | Product_imagesScalarFieldEnum[]
  }

  /**
   * product_images findFirstOrThrow
   */
  export type product_imagesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_images
     */
    select?: product_imagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the product_images
     */
    omit?: product_imagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_imagesInclude<ExtArgs> | null
    /**
     * Filter, which product_images to fetch.
     */
    where?: product_imagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of product_images to fetch.
     */
    orderBy?: product_imagesOrderByWithRelationInput | product_imagesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for product_images.
     */
    cursor?: product_imagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` product_images from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` product_images.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of product_images.
     */
    distinct?: Product_imagesScalarFieldEnum | Product_imagesScalarFieldEnum[]
  }

  /**
   * product_images findMany
   */
  export type product_imagesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_images
     */
    select?: product_imagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the product_images
     */
    omit?: product_imagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_imagesInclude<ExtArgs> | null
    /**
     * Filter, which product_images to fetch.
     */
    where?: product_imagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of product_images to fetch.
     */
    orderBy?: product_imagesOrderByWithRelationInput | product_imagesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing product_images.
     */
    cursor?: product_imagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` product_images from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` product_images.
     */
    skip?: number
    distinct?: Product_imagesScalarFieldEnum | Product_imagesScalarFieldEnum[]
  }

  /**
   * product_images create
   */
  export type product_imagesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_images
     */
    select?: product_imagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the product_images
     */
    omit?: product_imagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_imagesInclude<ExtArgs> | null
    /**
     * The data needed to create a product_images.
     */
    data: XOR<product_imagesCreateInput, product_imagesUncheckedCreateInput>
  }

  /**
   * product_images createMany
   */
  export type product_imagesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many product_images.
     */
    data: product_imagesCreateManyInput | product_imagesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * product_images update
   */
  export type product_imagesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_images
     */
    select?: product_imagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the product_images
     */
    omit?: product_imagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_imagesInclude<ExtArgs> | null
    /**
     * The data needed to update a product_images.
     */
    data: XOR<product_imagesUpdateInput, product_imagesUncheckedUpdateInput>
    /**
     * Choose, which product_images to update.
     */
    where: product_imagesWhereUniqueInput
  }

  /**
   * product_images updateMany
   */
  export type product_imagesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update product_images.
     */
    data: XOR<product_imagesUpdateManyMutationInput, product_imagesUncheckedUpdateManyInput>
    /**
     * Filter which product_images to update
     */
    where?: product_imagesWhereInput
    /**
     * Limit how many product_images to update.
     */
    limit?: number
  }

  /**
   * product_images upsert
   */
  export type product_imagesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_images
     */
    select?: product_imagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the product_images
     */
    omit?: product_imagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_imagesInclude<ExtArgs> | null
    /**
     * The filter to search for the product_images to update in case it exists.
     */
    where: product_imagesWhereUniqueInput
    /**
     * In case the product_images found by the `where` argument doesn't exist, create a new product_images with this data.
     */
    create: XOR<product_imagesCreateInput, product_imagesUncheckedCreateInput>
    /**
     * In case the product_images was found with the provided `where` argument, update it with this data.
     */
    update: XOR<product_imagesUpdateInput, product_imagesUncheckedUpdateInput>
  }

  /**
   * product_images delete
   */
  export type product_imagesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_images
     */
    select?: product_imagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the product_images
     */
    omit?: product_imagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_imagesInclude<ExtArgs> | null
    /**
     * Filter which product_images to delete.
     */
    where: product_imagesWhereUniqueInput
  }

  /**
   * product_images deleteMany
   */
  export type product_imagesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which product_images to delete
     */
    where?: product_imagesWhereInput
    /**
     * Limit how many product_images to delete.
     */
    limit?: number
  }

  /**
   * product_images without action
   */
  export type product_imagesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_images
     */
    select?: product_imagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the product_images
     */
    omit?: product_imagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_imagesInclude<ExtArgs> | null
  }


  /**
   * Model product_specifications
   */

  export type AggregateProduct_specifications = {
    _count: Product_specificationsCountAggregateOutputType | null
    _avg: Product_specificationsAvgAggregateOutputType | null
    _sum: Product_specificationsSumAggregateOutputType | null
    _min: Product_specificationsMinAggregateOutputType | null
    _max: Product_specificationsMaxAggregateOutputType | null
  }

  export type Product_specificationsAvgAggregateOutputType = {
    id: number | null
    product_id: number | null
  }

  export type Product_specificationsSumAggregateOutputType = {
    id: number | null
    product_id: number | null
  }

  export type Product_specificationsMinAggregateOutputType = {
    id: number | null
    product_id: number | null
    key: string | null
    value: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Product_specificationsMaxAggregateOutputType = {
    id: number | null
    product_id: number | null
    key: string | null
    value: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Product_specificationsCountAggregateOutputType = {
    id: number
    product_id: number
    key: number
    value: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type Product_specificationsAvgAggregateInputType = {
    id?: true
    product_id?: true
  }

  export type Product_specificationsSumAggregateInputType = {
    id?: true
    product_id?: true
  }

  export type Product_specificationsMinAggregateInputType = {
    id?: true
    product_id?: true
    key?: true
    value?: true
    created_at?: true
    updated_at?: true
  }

  export type Product_specificationsMaxAggregateInputType = {
    id?: true
    product_id?: true
    key?: true
    value?: true
    created_at?: true
    updated_at?: true
  }

  export type Product_specificationsCountAggregateInputType = {
    id?: true
    product_id?: true
    key?: true
    value?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type Product_specificationsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which product_specifications to aggregate.
     */
    where?: product_specificationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of product_specifications to fetch.
     */
    orderBy?: product_specificationsOrderByWithRelationInput | product_specificationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: product_specificationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` product_specifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` product_specifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned product_specifications
    **/
    _count?: true | Product_specificationsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Product_specificationsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Product_specificationsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Product_specificationsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Product_specificationsMaxAggregateInputType
  }

  export type GetProduct_specificationsAggregateType<T extends Product_specificationsAggregateArgs> = {
        [P in keyof T & keyof AggregateProduct_specifications]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProduct_specifications[P]>
      : GetScalarType<T[P], AggregateProduct_specifications[P]>
  }




  export type product_specificationsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: product_specificationsWhereInput
    orderBy?: product_specificationsOrderByWithAggregationInput | product_specificationsOrderByWithAggregationInput[]
    by: Product_specificationsScalarFieldEnum[] | Product_specificationsScalarFieldEnum
    having?: product_specificationsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Product_specificationsCountAggregateInputType | true
    _avg?: Product_specificationsAvgAggregateInputType
    _sum?: Product_specificationsSumAggregateInputType
    _min?: Product_specificationsMinAggregateInputType
    _max?: Product_specificationsMaxAggregateInputType
  }

  export type Product_specificationsGroupByOutputType = {
    id: number
    product_id: number
    key: string
    value: string
    created_at: Date
    updated_at: Date
    _count: Product_specificationsCountAggregateOutputType | null
    _avg: Product_specificationsAvgAggregateOutputType | null
    _sum: Product_specificationsSumAggregateOutputType | null
    _min: Product_specificationsMinAggregateOutputType | null
    _max: Product_specificationsMaxAggregateOutputType | null
  }

  type GetProduct_specificationsGroupByPayload<T extends product_specificationsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Product_specificationsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Product_specificationsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Product_specificationsGroupByOutputType[P]>
            : GetScalarType<T[P], Product_specificationsGroupByOutputType[P]>
        }
      >
    >


  export type product_specificationsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    product_id?: boolean
    key?: boolean
    value?: boolean
    created_at?: boolean
    updated_at?: boolean
    product?: boolean | productsDefaultArgs<ExtArgs>
    product_attributes?: boolean | product_specifications$product_attributesArgs<ExtArgs>
    _count?: boolean | Product_specificationsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["product_specifications"]>



  export type product_specificationsSelectScalar = {
    id?: boolean
    product_id?: boolean
    key?: boolean
    value?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type product_specificationsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "product_id" | "key" | "value" | "created_at" | "updated_at", ExtArgs["result"]["product_specifications"]>
  export type product_specificationsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product?: boolean | productsDefaultArgs<ExtArgs>
    product_attributes?: boolean | product_specifications$product_attributesArgs<ExtArgs>
    _count?: boolean | Product_specificationsCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $product_specificationsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "product_specifications"
    objects: {
      product: Prisma.$productsPayload<ExtArgs>
      product_attributes: Prisma.$product_attributesPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      product_id: number
      key: string
      value: string
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["product_specifications"]>
    composites: {}
  }

  type product_specificationsGetPayload<S extends boolean | null | undefined | product_specificationsDefaultArgs> = $Result.GetResult<Prisma.$product_specificationsPayload, S>

  type product_specificationsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<product_specificationsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Product_specificationsCountAggregateInputType | true
    }

  export interface product_specificationsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['product_specifications'], meta: { name: 'product_specifications' } }
    /**
     * Find zero or one Product_specifications that matches the filter.
     * @param {product_specificationsFindUniqueArgs} args - Arguments to find a Product_specifications
     * @example
     * // Get one Product_specifications
     * const product_specifications = await prisma.product_specifications.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends product_specificationsFindUniqueArgs>(args: SelectSubset<T, product_specificationsFindUniqueArgs<ExtArgs>>): Prisma__product_specificationsClient<$Result.GetResult<Prisma.$product_specificationsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Product_specifications that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {product_specificationsFindUniqueOrThrowArgs} args - Arguments to find a Product_specifications
     * @example
     * // Get one Product_specifications
     * const product_specifications = await prisma.product_specifications.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends product_specificationsFindUniqueOrThrowArgs>(args: SelectSubset<T, product_specificationsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__product_specificationsClient<$Result.GetResult<Prisma.$product_specificationsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Product_specifications that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {product_specificationsFindFirstArgs} args - Arguments to find a Product_specifications
     * @example
     * // Get one Product_specifications
     * const product_specifications = await prisma.product_specifications.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends product_specificationsFindFirstArgs>(args?: SelectSubset<T, product_specificationsFindFirstArgs<ExtArgs>>): Prisma__product_specificationsClient<$Result.GetResult<Prisma.$product_specificationsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Product_specifications that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {product_specificationsFindFirstOrThrowArgs} args - Arguments to find a Product_specifications
     * @example
     * // Get one Product_specifications
     * const product_specifications = await prisma.product_specifications.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends product_specificationsFindFirstOrThrowArgs>(args?: SelectSubset<T, product_specificationsFindFirstOrThrowArgs<ExtArgs>>): Prisma__product_specificationsClient<$Result.GetResult<Prisma.$product_specificationsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Product_specifications that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {product_specificationsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Product_specifications
     * const product_specifications = await prisma.product_specifications.findMany()
     * 
     * // Get first 10 Product_specifications
     * const product_specifications = await prisma.product_specifications.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const product_specificationsWithIdOnly = await prisma.product_specifications.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends product_specificationsFindManyArgs>(args?: SelectSubset<T, product_specificationsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$product_specificationsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Product_specifications.
     * @param {product_specificationsCreateArgs} args - Arguments to create a Product_specifications.
     * @example
     * // Create one Product_specifications
     * const Product_specifications = await prisma.product_specifications.create({
     *   data: {
     *     // ... data to create a Product_specifications
     *   }
     * })
     * 
     */
    create<T extends product_specificationsCreateArgs>(args: SelectSubset<T, product_specificationsCreateArgs<ExtArgs>>): Prisma__product_specificationsClient<$Result.GetResult<Prisma.$product_specificationsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Product_specifications.
     * @param {product_specificationsCreateManyArgs} args - Arguments to create many Product_specifications.
     * @example
     * // Create many Product_specifications
     * const product_specifications = await prisma.product_specifications.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends product_specificationsCreateManyArgs>(args?: SelectSubset<T, product_specificationsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Product_specifications.
     * @param {product_specificationsDeleteArgs} args - Arguments to delete one Product_specifications.
     * @example
     * // Delete one Product_specifications
     * const Product_specifications = await prisma.product_specifications.delete({
     *   where: {
     *     // ... filter to delete one Product_specifications
     *   }
     * })
     * 
     */
    delete<T extends product_specificationsDeleteArgs>(args: SelectSubset<T, product_specificationsDeleteArgs<ExtArgs>>): Prisma__product_specificationsClient<$Result.GetResult<Prisma.$product_specificationsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Product_specifications.
     * @param {product_specificationsUpdateArgs} args - Arguments to update one Product_specifications.
     * @example
     * // Update one Product_specifications
     * const product_specifications = await prisma.product_specifications.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends product_specificationsUpdateArgs>(args: SelectSubset<T, product_specificationsUpdateArgs<ExtArgs>>): Prisma__product_specificationsClient<$Result.GetResult<Prisma.$product_specificationsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Product_specifications.
     * @param {product_specificationsDeleteManyArgs} args - Arguments to filter Product_specifications to delete.
     * @example
     * // Delete a few Product_specifications
     * const { count } = await prisma.product_specifications.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends product_specificationsDeleteManyArgs>(args?: SelectSubset<T, product_specificationsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Product_specifications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {product_specificationsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Product_specifications
     * const product_specifications = await prisma.product_specifications.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends product_specificationsUpdateManyArgs>(args: SelectSubset<T, product_specificationsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Product_specifications.
     * @param {product_specificationsUpsertArgs} args - Arguments to update or create a Product_specifications.
     * @example
     * // Update or create a Product_specifications
     * const product_specifications = await prisma.product_specifications.upsert({
     *   create: {
     *     // ... data to create a Product_specifications
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Product_specifications we want to update
     *   }
     * })
     */
    upsert<T extends product_specificationsUpsertArgs>(args: SelectSubset<T, product_specificationsUpsertArgs<ExtArgs>>): Prisma__product_specificationsClient<$Result.GetResult<Prisma.$product_specificationsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Product_specifications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {product_specificationsCountArgs} args - Arguments to filter Product_specifications to count.
     * @example
     * // Count the number of Product_specifications
     * const count = await prisma.product_specifications.count({
     *   where: {
     *     // ... the filter for the Product_specifications we want to count
     *   }
     * })
    **/
    count<T extends product_specificationsCountArgs>(
      args?: Subset<T, product_specificationsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Product_specificationsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Product_specifications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Product_specificationsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Product_specificationsAggregateArgs>(args: Subset<T, Product_specificationsAggregateArgs>): Prisma.PrismaPromise<GetProduct_specificationsAggregateType<T>>

    /**
     * Group by Product_specifications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {product_specificationsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends product_specificationsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: product_specificationsGroupByArgs['orderBy'] }
        : { orderBy?: product_specificationsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, product_specificationsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProduct_specificationsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the product_specifications model
   */
  readonly fields: product_specificationsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for product_specifications.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__product_specificationsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    product<T extends productsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, productsDefaultArgs<ExtArgs>>): Prisma__productsClient<$Result.GetResult<Prisma.$productsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    product_attributes<T extends product_specifications$product_attributesArgs<ExtArgs> = {}>(args?: Subset<T, product_specifications$product_attributesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$product_attributesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the product_specifications model
   */
  interface product_specificationsFieldRefs {
    readonly id: FieldRef<"product_specifications", 'Int'>
    readonly product_id: FieldRef<"product_specifications", 'Int'>
    readonly key: FieldRef<"product_specifications", 'String'>
    readonly value: FieldRef<"product_specifications", 'String'>
    readonly created_at: FieldRef<"product_specifications", 'DateTime'>
    readonly updated_at: FieldRef<"product_specifications", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * product_specifications findUnique
   */
  export type product_specificationsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_specifications
     */
    select?: product_specificationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the product_specifications
     */
    omit?: product_specificationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_specificationsInclude<ExtArgs> | null
    /**
     * Filter, which product_specifications to fetch.
     */
    where: product_specificationsWhereUniqueInput
  }

  /**
   * product_specifications findUniqueOrThrow
   */
  export type product_specificationsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_specifications
     */
    select?: product_specificationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the product_specifications
     */
    omit?: product_specificationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_specificationsInclude<ExtArgs> | null
    /**
     * Filter, which product_specifications to fetch.
     */
    where: product_specificationsWhereUniqueInput
  }

  /**
   * product_specifications findFirst
   */
  export type product_specificationsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_specifications
     */
    select?: product_specificationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the product_specifications
     */
    omit?: product_specificationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_specificationsInclude<ExtArgs> | null
    /**
     * Filter, which product_specifications to fetch.
     */
    where?: product_specificationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of product_specifications to fetch.
     */
    orderBy?: product_specificationsOrderByWithRelationInput | product_specificationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for product_specifications.
     */
    cursor?: product_specificationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` product_specifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` product_specifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of product_specifications.
     */
    distinct?: Product_specificationsScalarFieldEnum | Product_specificationsScalarFieldEnum[]
  }

  /**
   * product_specifications findFirstOrThrow
   */
  export type product_specificationsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_specifications
     */
    select?: product_specificationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the product_specifications
     */
    omit?: product_specificationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_specificationsInclude<ExtArgs> | null
    /**
     * Filter, which product_specifications to fetch.
     */
    where?: product_specificationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of product_specifications to fetch.
     */
    orderBy?: product_specificationsOrderByWithRelationInput | product_specificationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for product_specifications.
     */
    cursor?: product_specificationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` product_specifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` product_specifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of product_specifications.
     */
    distinct?: Product_specificationsScalarFieldEnum | Product_specificationsScalarFieldEnum[]
  }

  /**
   * product_specifications findMany
   */
  export type product_specificationsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_specifications
     */
    select?: product_specificationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the product_specifications
     */
    omit?: product_specificationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_specificationsInclude<ExtArgs> | null
    /**
     * Filter, which product_specifications to fetch.
     */
    where?: product_specificationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of product_specifications to fetch.
     */
    orderBy?: product_specificationsOrderByWithRelationInput | product_specificationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing product_specifications.
     */
    cursor?: product_specificationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` product_specifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` product_specifications.
     */
    skip?: number
    distinct?: Product_specificationsScalarFieldEnum | Product_specificationsScalarFieldEnum[]
  }

  /**
   * product_specifications create
   */
  export type product_specificationsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_specifications
     */
    select?: product_specificationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the product_specifications
     */
    omit?: product_specificationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_specificationsInclude<ExtArgs> | null
    /**
     * The data needed to create a product_specifications.
     */
    data: XOR<product_specificationsCreateInput, product_specificationsUncheckedCreateInput>
  }

  /**
   * product_specifications createMany
   */
  export type product_specificationsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many product_specifications.
     */
    data: product_specificationsCreateManyInput | product_specificationsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * product_specifications update
   */
  export type product_specificationsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_specifications
     */
    select?: product_specificationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the product_specifications
     */
    omit?: product_specificationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_specificationsInclude<ExtArgs> | null
    /**
     * The data needed to update a product_specifications.
     */
    data: XOR<product_specificationsUpdateInput, product_specificationsUncheckedUpdateInput>
    /**
     * Choose, which product_specifications to update.
     */
    where: product_specificationsWhereUniqueInput
  }

  /**
   * product_specifications updateMany
   */
  export type product_specificationsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update product_specifications.
     */
    data: XOR<product_specificationsUpdateManyMutationInput, product_specificationsUncheckedUpdateManyInput>
    /**
     * Filter which product_specifications to update
     */
    where?: product_specificationsWhereInput
    /**
     * Limit how many product_specifications to update.
     */
    limit?: number
  }

  /**
   * product_specifications upsert
   */
  export type product_specificationsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_specifications
     */
    select?: product_specificationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the product_specifications
     */
    omit?: product_specificationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_specificationsInclude<ExtArgs> | null
    /**
     * The filter to search for the product_specifications to update in case it exists.
     */
    where: product_specificationsWhereUniqueInput
    /**
     * In case the product_specifications found by the `where` argument doesn't exist, create a new product_specifications with this data.
     */
    create: XOR<product_specificationsCreateInput, product_specificationsUncheckedCreateInput>
    /**
     * In case the product_specifications was found with the provided `where` argument, update it with this data.
     */
    update: XOR<product_specificationsUpdateInput, product_specificationsUncheckedUpdateInput>
  }

  /**
   * product_specifications delete
   */
  export type product_specificationsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_specifications
     */
    select?: product_specificationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the product_specifications
     */
    omit?: product_specificationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_specificationsInclude<ExtArgs> | null
    /**
     * Filter which product_specifications to delete.
     */
    where: product_specificationsWhereUniqueInput
  }

  /**
   * product_specifications deleteMany
   */
  export type product_specificationsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which product_specifications to delete
     */
    where?: product_specificationsWhereInput
    /**
     * Limit how many product_specifications to delete.
     */
    limit?: number
  }

  /**
   * product_specifications.product_attributes
   */
  export type product_specifications$product_attributesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_attributes
     */
    select?: product_attributesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the product_attributes
     */
    omit?: product_attributesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_attributesInclude<ExtArgs> | null
    where?: product_attributesWhereInput
    orderBy?: product_attributesOrderByWithRelationInput | product_attributesOrderByWithRelationInput[]
    cursor?: product_attributesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Product_attributesScalarFieldEnum | Product_attributesScalarFieldEnum[]
  }

  /**
   * product_specifications without action
   */
  export type product_specificationsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_specifications
     */
    select?: product_specificationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the product_specifications
     */
    omit?: product_specificationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_specificationsInclude<ExtArgs> | null
  }


  /**
   * Model product_attributes
   */

  export type AggregateProduct_attributes = {
    _count: Product_attributesCountAggregateOutputType | null
    _avg: Product_attributesAvgAggregateOutputType | null
    _sum: Product_attributesSumAggregateOutputType | null
    _min: Product_attributesMinAggregateOutputType | null
    _max: Product_attributesMaxAggregateOutputType | null
  }

  export type Product_attributesAvgAggregateOutputType = {
    id: number | null
    product_id: number | null
    specification_id: number | null
  }

  export type Product_attributesSumAggregateOutputType = {
    id: number | null
    product_id: number | null
    specification_id: number | null
  }

  export type Product_attributesMinAggregateOutputType = {
    id: number | null
    product_id: number | null
    specification_id: number | null
    name: string | null
    value: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Product_attributesMaxAggregateOutputType = {
    id: number | null
    product_id: number | null
    specification_id: number | null
    name: string | null
    value: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Product_attributesCountAggregateOutputType = {
    id: number
    product_id: number
    specification_id: number
    name: number
    value: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type Product_attributesAvgAggregateInputType = {
    id?: true
    product_id?: true
    specification_id?: true
  }

  export type Product_attributesSumAggregateInputType = {
    id?: true
    product_id?: true
    specification_id?: true
  }

  export type Product_attributesMinAggregateInputType = {
    id?: true
    product_id?: true
    specification_id?: true
    name?: true
    value?: true
    created_at?: true
    updated_at?: true
  }

  export type Product_attributesMaxAggregateInputType = {
    id?: true
    product_id?: true
    specification_id?: true
    name?: true
    value?: true
    created_at?: true
    updated_at?: true
  }

  export type Product_attributesCountAggregateInputType = {
    id?: true
    product_id?: true
    specification_id?: true
    name?: true
    value?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type Product_attributesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which product_attributes to aggregate.
     */
    where?: product_attributesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of product_attributes to fetch.
     */
    orderBy?: product_attributesOrderByWithRelationInput | product_attributesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: product_attributesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` product_attributes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` product_attributes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned product_attributes
    **/
    _count?: true | Product_attributesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Product_attributesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Product_attributesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Product_attributesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Product_attributesMaxAggregateInputType
  }

  export type GetProduct_attributesAggregateType<T extends Product_attributesAggregateArgs> = {
        [P in keyof T & keyof AggregateProduct_attributes]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProduct_attributes[P]>
      : GetScalarType<T[P], AggregateProduct_attributes[P]>
  }




  export type product_attributesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: product_attributesWhereInput
    orderBy?: product_attributesOrderByWithAggregationInput | product_attributesOrderByWithAggregationInput[]
    by: Product_attributesScalarFieldEnum[] | Product_attributesScalarFieldEnum
    having?: product_attributesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Product_attributesCountAggregateInputType | true
    _avg?: Product_attributesAvgAggregateInputType
    _sum?: Product_attributesSumAggregateInputType
    _min?: Product_attributesMinAggregateInputType
    _max?: Product_attributesMaxAggregateInputType
  }

  export type Product_attributesGroupByOutputType = {
    id: number
    product_id: number
    specification_id: number
    name: string
    value: string
    created_at: Date
    updated_at: Date
    _count: Product_attributesCountAggregateOutputType | null
    _avg: Product_attributesAvgAggregateOutputType | null
    _sum: Product_attributesSumAggregateOutputType | null
    _min: Product_attributesMinAggregateOutputType | null
    _max: Product_attributesMaxAggregateOutputType | null
  }

  type GetProduct_attributesGroupByPayload<T extends product_attributesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Product_attributesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Product_attributesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Product_attributesGroupByOutputType[P]>
            : GetScalarType<T[P], Product_attributesGroupByOutputType[P]>
        }
      >
    >


  export type product_attributesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    product_id?: boolean
    specification_id?: boolean
    name?: boolean
    value?: boolean
    created_at?: boolean
    updated_at?: boolean
    product?: boolean | productsDefaultArgs<ExtArgs>
    specification?: boolean | product_specificationsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["product_attributes"]>



  export type product_attributesSelectScalar = {
    id?: boolean
    product_id?: boolean
    specification_id?: boolean
    name?: boolean
    value?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type product_attributesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "product_id" | "specification_id" | "name" | "value" | "created_at" | "updated_at", ExtArgs["result"]["product_attributes"]>
  export type product_attributesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product?: boolean | productsDefaultArgs<ExtArgs>
    specification?: boolean | product_specificationsDefaultArgs<ExtArgs>
  }

  export type $product_attributesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "product_attributes"
    objects: {
      product: Prisma.$productsPayload<ExtArgs>
      specification: Prisma.$product_specificationsPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      product_id: number
      specification_id: number
      name: string
      value: string
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["product_attributes"]>
    composites: {}
  }

  type product_attributesGetPayload<S extends boolean | null | undefined | product_attributesDefaultArgs> = $Result.GetResult<Prisma.$product_attributesPayload, S>

  type product_attributesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<product_attributesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Product_attributesCountAggregateInputType | true
    }

  export interface product_attributesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['product_attributes'], meta: { name: 'product_attributes' } }
    /**
     * Find zero or one Product_attributes that matches the filter.
     * @param {product_attributesFindUniqueArgs} args - Arguments to find a Product_attributes
     * @example
     * // Get one Product_attributes
     * const product_attributes = await prisma.product_attributes.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends product_attributesFindUniqueArgs>(args: SelectSubset<T, product_attributesFindUniqueArgs<ExtArgs>>): Prisma__product_attributesClient<$Result.GetResult<Prisma.$product_attributesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Product_attributes that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {product_attributesFindUniqueOrThrowArgs} args - Arguments to find a Product_attributes
     * @example
     * // Get one Product_attributes
     * const product_attributes = await prisma.product_attributes.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends product_attributesFindUniqueOrThrowArgs>(args: SelectSubset<T, product_attributesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__product_attributesClient<$Result.GetResult<Prisma.$product_attributesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Product_attributes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {product_attributesFindFirstArgs} args - Arguments to find a Product_attributes
     * @example
     * // Get one Product_attributes
     * const product_attributes = await prisma.product_attributes.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends product_attributesFindFirstArgs>(args?: SelectSubset<T, product_attributesFindFirstArgs<ExtArgs>>): Prisma__product_attributesClient<$Result.GetResult<Prisma.$product_attributesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Product_attributes that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {product_attributesFindFirstOrThrowArgs} args - Arguments to find a Product_attributes
     * @example
     * // Get one Product_attributes
     * const product_attributes = await prisma.product_attributes.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends product_attributesFindFirstOrThrowArgs>(args?: SelectSubset<T, product_attributesFindFirstOrThrowArgs<ExtArgs>>): Prisma__product_attributesClient<$Result.GetResult<Prisma.$product_attributesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Product_attributes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {product_attributesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Product_attributes
     * const product_attributes = await prisma.product_attributes.findMany()
     * 
     * // Get first 10 Product_attributes
     * const product_attributes = await prisma.product_attributes.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const product_attributesWithIdOnly = await prisma.product_attributes.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends product_attributesFindManyArgs>(args?: SelectSubset<T, product_attributesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$product_attributesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Product_attributes.
     * @param {product_attributesCreateArgs} args - Arguments to create a Product_attributes.
     * @example
     * // Create one Product_attributes
     * const Product_attributes = await prisma.product_attributes.create({
     *   data: {
     *     // ... data to create a Product_attributes
     *   }
     * })
     * 
     */
    create<T extends product_attributesCreateArgs>(args: SelectSubset<T, product_attributesCreateArgs<ExtArgs>>): Prisma__product_attributesClient<$Result.GetResult<Prisma.$product_attributesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Product_attributes.
     * @param {product_attributesCreateManyArgs} args - Arguments to create many Product_attributes.
     * @example
     * // Create many Product_attributes
     * const product_attributes = await prisma.product_attributes.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends product_attributesCreateManyArgs>(args?: SelectSubset<T, product_attributesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Product_attributes.
     * @param {product_attributesDeleteArgs} args - Arguments to delete one Product_attributes.
     * @example
     * // Delete one Product_attributes
     * const Product_attributes = await prisma.product_attributes.delete({
     *   where: {
     *     // ... filter to delete one Product_attributes
     *   }
     * })
     * 
     */
    delete<T extends product_attributesDeleteArgs>(args: SelectSubset<T, product_attributesDeleteArgs<ExtArgs>>): Prisma__product_attributesClient<$Result.GetResult<Prisma.$product_attributesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Product_attributes.
     * @param {product_attributesUpdateArgs} args - Arguments to update one Product_attributes.
     * @example
     * // Update one Product_attributes
     * const product_attributes = await prisma.product_attributes.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends product_attributesUpdateArgs>(args: SelectSubset<T, product_attributesUpdateArgs<ExtArgs>>): Prisma__product_attributesClient<$Result.GetResult<Prisma.$product_attributesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Product_attributes.
     * @param {product_attributesDeleteManyArgs} args - Arguments to filter Product_attributes to delete.
     * @example
     * // Delete a few Product_attributes
     * const { count } = await prisma.product_attributes.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends product_attributesDeleteManyArgs>(args?: SelectSubset<T, product_attributesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Product_attributes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {product_attributesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Product_attributes
     * const product_attributes = await prisma.product_attributes.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends product_attributesUpdateManyArgs>(args: SelectSubset<T, product_attributesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Product_attributes.
     * @param {product_attributesUpsertArgs} args - Arguments to update or create a Product_attributes.
     * @example
     * // Update or create a Product_attributes
     * const product_attributes = await prisma.product_attributes.upsert({
     *   create: {
     *     // ... data to create a Product_attributes
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Product_attributes we want to update
     *   }
     * })
     */
    upsert<T extends product_attributesUpsertArgs>(args: SelectSubset<T, product_attributesUpsertArgs<ExtArgs>>): Prisma__product_attributesClient<$Result.GetResult<Prisma.$product_attributesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Product_attributes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {product_attributesCountArgs} args - Arguments to filter Product_attributes to count.
     * @example
     * // Count the number of Product_attributes
     * const count = await prisma.product_attributes.count({
     *   where: {
     *     // ... the filter for the Product_attributes we want to count
     *   }
     * })
    **/
    count<T extends product_attributesCountArgs>(
      args?: Subset<T, product_attributesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Product_attributesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Product_attributes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Product_attributesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Product_attributesAggregateArgs>(args: Subset<T, Product_attributesAggregateArgs>): Prisma.PrismaPromise<GetProduct_attributesAggregateType<T>>

    /**
     * Group by Product_attributes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {product_attributesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends product_attributesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: product_attributesGroupByArgs['orderBy'] }
        : { orderBy?: product_attributesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, product_attributesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProduct_attributesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the product_attributes model
   */
  readonly fields: product_attributesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for product_attributes.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__product_attributesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    product<T extends productsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, productsDefaultArgs<ExtArgs>>): Prisma__productsClient<$Result.GetResult<Prisma.$productsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    specification<T extends product_specificationsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, product_specificationsDefaultArgs<ExtArgs>>): Prisma__product_specificationsClient<$Result.GetResult<Prisma.$product_specificationsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the product_attributes model
   */
  interface product_attributesFieldRefs {
    readonly id: FieldRef<"product_attributes", 'Int'>
    readonly product_id: FieldRef<"product_attributes", 'Int'>
    readonly specification_id: FieldRef<"product_attributes", 'Int'>
    readonly name: FieldRef<"product_attributes", 'String'>
    readonly value: FieldRef<"product_attributes", 'String'>
    readonly created_at: FieldRef<"product_attributes", 'DateTime'>
    readonly updated_at: FieldRef<"product_attributes", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * product_attributes findUnique
   */
  export type product_attributesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_attributes
     */
    select?: product_attributesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the product_attributes
     */
    omit?: product_attributesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_attributesInclude<ExtArgs> | null
    /**
     * Filter, which product_attributes to fetch.
     */
    where: product_attributesWhereUniqueInput
  }

  /**
   * product_attributes findUniqueOrThrow
   */
  export type product_attributesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_attributes
     */
    select?: product_attributesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the product_attributes
     */
    omit?: product_attributesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_attributesInclude<ExtArgs> | null
    /**
     * Filter, which product_attributes to fetch.
     */
    where: product_attributesWhereUniqueInput
  }

  /**
   * product_attributes findFirst
   */
  export type product_attributesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_attributes
     */
    select?: product_attributesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the product_attributes
     */
    omit?: product_attributesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_attributesInclude<ExtArgs> | null
    /**
     * Filter, which product_attributes to fetch.
     */
    where?: product_attributesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of product_attributes to fetch.
     */
    orderBy?: product_attributesOrderByWithRelationInput | product_attributesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for product_attributes.
     */
    cursor?: product_attributesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` product_attributes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` product_attributes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of product_attributes.
     */
    distinct?: Product_attributesScalarFieldEnum | Product_attributesScalarFieldEnum[]
  }

  /**
   * product_attributes findFirstOrThrow
   */
  export type product_attributesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_attributes
     */
    select?: product_attributesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the product_attributes
     */
    omit?: product_attributesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_attributesInclude<ExtArgs> | null
    /**
     * Filter, which product_attributes to fetch.
     */
    where?: product_attributesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of product_attributes to fetch.
     */
    orderBy?: product_attributesOrderByWithRelationInput | product_attributesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for product_attributes.
     */
    cursor?: product_attributesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` product_attributes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` product_attributes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of product_attributes.
     */
    distinct?: Product_attributesScalarFieldEnum | Product_attributesScalarFieldEnum[]
  }

  /**
   * product_attributes findMany
   */
  export type product_attributesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_attributes
     */
    select?: product_attributesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the product_attributes
     */
    omit?: product_attributesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_attributesInclude<ExtArgs> | null
    /**
     * Filter, which product_attributes to fetch.
     */
    where?: product_attributesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of product_attributes to fetch.
     */
    orderBy?: product_attributesOrderByWithRelationInput | product_attributesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing product_attributes.
     */
    cursor?: product_attributesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` product_attributes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` product_attributes.
     */
    skip?: number
    distinct?: Product_attributesScalarFieldEnum | Product_attributesScalarFieldEnum[]
  }

  /**
   * product_attributes create
   */
  export type product_attributesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_attributes
     */
    select?: product_attributesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the product_attributes
     */
    omit?: product_attributesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_attributesInclude<ExtArgs> | null
    /**
     * The data needed to create a product_attributes.
     */
    data: XOR<product_attributesCreateInput, product_attributesUncheckedCreateInput>
  }

  /**
   * product_attributes createMany
   */
  export type product_attributesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many product_attributes.
     */
    data: product_attributesCreateManyInput | product_attributesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * product_attributes update
   */
  export type product_attributesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_attributes
     */
    select?: product_attributesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the product_attributes
     */
    omit?: product_attributesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_attributesInclude<ExtArgs> | null
    /**
     * The data needed to update a product_attributes.
     */
    data: XOR<product_attributesUpdateInput, product_attributesUncheckedUpdateInput>
    /**
     * Choose, which product_attributes to update.
     */
    where: product_attributesWhereUniqueInput
  }

  /**
   * product_attributes updateMany
   */
  export type product_attributesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update product_attributes.
     */
    data: XOR<product_attributesUpdateManyMutationInput, product_attributesUncheckedUpdateManyInput>
    /**
     * Filter which product_attributes to update
     */
    where?: product_attributesWhereInput
    /**
     * Limit how many product_attributes to update.
     */
    limit?: number
  }

  /**
   * product_attributes upsert
   */
  export type product_attributesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_attributes
     */
    select?: product_attributesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the product_attributes
     */
    omit?: product_attributesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_attributesInclude<ExtArgs> | null
    /**
     * The filter to search for the product_attributes to update in case it exists.
     */
    where: product_attributesWhereUniqueInput
    /**
     * In case the product_attributes found by the `where` argument doesn't exist, create a new product_attributes with this data.
     */
    create: XOR<product_attributesCreateInput, product_attributesUncheckedCreateInput>
    /**
     * In case the product_attributes was found with the provided `where` argument, update it with this data.
     */
    update: XOR<product_attributesUpdateInput, product_attributesUncheckedUpdateInput>
  }

  /**
   * product_attributes delete
   */
  export type product_attributesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_attributes
     */
    select?: product_attributesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the product_attributes
     */
    omit?: product_attributesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_attributesInclude<ExtArgs> | null
    /**
     * Filter which product_attributes to delete.
     */
    where: product_attributesWhereUniqueInput
  }

  /**
   * product_attributes deleteMany
   */
  export type product_attributesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which product_attributes to delete
     */
    where?: product_attributesWhereInput
    /**
     * Limit how many product_attributes to delete.
     */
    limit?: number
  }

  /**
   * product_attributes without action
   */
  export type product_attributesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_attributes
     */
    select?: product_attributesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the product_attributes
     */
    omit?: product_attributesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_attributesInclude<ExtArgs> | null
  }


  /**
   * Model orders
   */

  export type AggregateOrders = {
    _count: OrdersCountAggregateOutputType | null
    _avg: OrdersAvgAggregateOutputType | null
    _sum: OrdersSumAggregateOutputType | null
    _min: OrdersMinAggregateOutputType | null
    _max: OrdersMaxAggregateOutputType | null
  }

  export type OrdersAvgAggregateOutputType = {
    id: number | null
    user_id: number | null
    address_id: number | null
    total_amount: number | null
  }

  export type OrdersSumAggregateOutputType = {
    id: number | null
    user_id: number | null
    address_id: number | null
    total_amount: number | null
  }

  export type OrdersMinAggregateOutputType = {
    id: number | null
    uuid: string | null
    user_id: number | null
    address_id: number | null
    total_amount: number | null
    status: $Enums.OrderStatusEnum | null
    is_deleted: boolean | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type OrdersMaxAggregateOutputType = {
    id: number | null
    uuid: string | null
    user_id: number | null
    address_id: number | null
    total_amount: number | null
    status: $Enums.OrderStatusEnum | null
    is_deleted: boolean | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type OrdersCountAggregateOutputType = {
    id: number
    uuid: number
    user_id: number
    address_id: number
    total_amount: number
    status: number
    is_deleted: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type OrdersAvgAggregateInputType = {
    id?: true
    user_id?: true
    address_id?: true
    total_amount?: true
  }

  export type OrdersSumAggregateInputType = {
    id?: true
    user_id?: true
    address_id?: true
    total_amount?: true
  }

  export type OrdersMinAggregateInputType = {
    id?: true
    uuid?: true
    user_id?: true
    address_id?: true
    total_amount?: true
    status?: true
    is_deleted?: true
    created_at?: true
    updated_at?: true
  }

  export type OrdersMaxAggregateInputType = {
    id?: true
    uuid?: true
    user_id?: true
    address_id?: true
    total_amount?: true
    status?: true
    is_deleted?: true
    created_at?: true
    updated_at?: true
  }

  export type OrdersCountAggregateInputType = {
    id?: true
    uuid?: true
    user_id?: true
    address_id?: true
    total_amount?: true
    status?: true
    is_deleted?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type OrdersAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which orders to aggregate.
     */
    where?: ordersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of orders to fetch.
     */
    orderBy?: ordersOrderByWithRelationInput | ordersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ordersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` orders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` orders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned orders
    **/
    _count?: true | OrdersCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: OrdersAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: OrdersSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: OrdersMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: OrdersMaxAggregateInputType
  }

  export type GetOrdersAggregateType<T extends OrdersAggregateArgs> = {
        [P in keyof T & keyof AggregateOrders]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOrders[P]>
      : GetScalarType<T[P], AggregateOrders[P]>
  }




  export type ordersGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ordersWhereInput
    orderBy?: ordersOrderByWithAggregationInput | ordersOrderByWithAggregationInput[]
    by: OrdersScalarFieldEnum[] | OrdersScalarFieldEnum
    having?: ordersScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: OrdersCountAggregateInputType | true
    _avg?: OrdersAvgAggregateInputType
    _sum?: OrdersSumAggregateInputType
    _min?: OrdersMinAggregateInputType
    _max?: OrdersMaxAggregateInputType
  }

  export type OrdersGroupByOutputType = {
    id: number
    uuid: string
    user_id: number
    address_id: number
    total_amount: number
    status: $Enums.OrderStatusEnum
    is_deleted: boolean
    created_at: Date
    updated_at: Date
    _count: OrdersCountAggregateOutputType | null
    _avg: OrdersAvgAggregateOutputType | null
    _sum: OrdersSumAggregateOutputType | null
    _min: OrdersMinAggregateOutputType | null
    _max: OrdersMaxAggregateOutputType | null
  }

  type GetOrdersGroupByPayload<T extends ordersGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<OrdersGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof OrdersGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], OrdersGroupByOutputType[P]>
            : GetScalarType<T[P], OrdersGroupByOutputType[P]>
        }
      >
    >


  export type ordersSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    uuid?: boolean
    user_id?: boolean
    address_id?: boolean
    total_amount?: boolean
    status?: boolean
    is_deleted?: boolean
    created_at?: boolean
    updated_at?: boolean
    user?: boolean | usersDefaultArgs<ExtArgs>
    address?: boolean | addressesDefaultArgs<ExtArgs>
    order_items?: boolean | orders$order_itemsArgs<ExtArgs>
    payments?: boolean | orders$paymentsArgs<ExtArgs>
    _count?: boolean | OrdersCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["orders"]>



  export type ordersSelectScalar = {
    id?: boolean
    uuid?: boolean
    user_id?: boolean
    address_id?: boolean
    total_amount?: boolean
    status?: boolean
    is_deleted?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type ordersOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "uuid" | "user_id" | "address_id" | "total_amount" | "status" | "is_deleted" | "created_at" | "updated_at", ExtArgs["result"]["orders"]>
  export type ordersInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | usersDefaultArgs<ExtArgs>
    address?: boolean | addressesDefaultArgs<ExtArgs>
    order_items?: boolean | orders$order_itemsArgs<ExtArgs>
    payments?: boolean | orders$paymentsArgs<ExtArgs>
    _count?: boolean | OrdersCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $ordersPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "orders"
    objects: {
      user: Prisma.$usersPayload<ExtArgs>
      address: Prisma.$addressesPayload<ExtArgs>
      order_items: Prisma.$order_itemsPayload<ExtArgs>[]
      payments: Prisma.$paymentsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      uuid: string
      user_id: number
      address_id: number
      total_amount: number
      status: $Enums.OrderStatusEnum
      is_deleted: boolean
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["orders"]>
    composites: {}
  }

  type ordersGetPayload<S extends boolean | null | undefined | ordersDefaultArgs> = $Result.GetResult<Prisma.$ordersPayload, S>

  type ordersCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ordersFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: OrdersCountAggregateInputType | true
    }

  export interface ordersDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['orders'], meta: { name: 'orders' } }
    /**
     * Find zero or one Orders that matches the filter.
     * @param {ordersFindUniqueArgs} args - Arguments to find a Orders
     * @example
     * // Get one Orders
     * const orders = await prisma.orders.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ordersFindUniqueArgs>(args: SelectSubset<T, ordersFindUniqueArgs<ExtArgs>>): Prisma__ordersClient<$Result.GetResult<Prisma.$ordersPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Orders that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ordersFindUniqueOrThrowArgs} args - Arguments to find a Orders
     * @example
     * // Get one Orders
     * const orders = await prisma.orders.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ordersFindUniqueOrThrowArgs>(args: SelectSubset<T, ordersFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ordersClient<$Result.GetResult<Prisma.$ordersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Orders that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ordersFindFirstArgs} args - Arguments to find a Orders
     * @example
     * // Get one Orders
     * const orders = await prisma.orders.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ordersFindFirstArgs>(args?: SelectSubset<T, ordersFindFirstArgs<ExtArgs>>): Prisma__ordersClient<$Result.GetResult<Prisma.$ordersPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Orders that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ordersFindFirstOrThrowArgs} args - Arguments to find a Orders
     * @example
     * // Get one Orders
     * const orders = await prisma.orders.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ordersFindFirstOrThrowArgs>(args?: SelectSubset<T, ordersFindFirstOrThrowArgs<ExtArgs>>): Prisma__ordersClient<$Result.GetResult<Prisma.$ordersPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Orders that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ordersFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Orders
     * const orders = await prisma.orders.findMany()
     * 
     * // Get first 10 Orders
     * const orders = await prisma.orders.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const ordersWithIdOnly = await prisma.orders.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ordersFindManyArgs>(args?: SelectSubset<T, ordersFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ordersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Orders.
     * @param {ordersCreateArgs} args - Arguments to create a Orders.
     * @example
     * // Create one Orders
     * const Orders = await prisma.orders.create({
     *   data: {
     *     // ... data to create a Orders
     *   }
     * })
     * 
     */
    create<T extends ordersCreateArgs>(args: SelectSubset<T, ordersCreateArgs<ExtArgs>>): Prisma__ordersClient<$Result.GetResult<Prisma.$ordersPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Orders.
     * @param {ordersCreateManyArgs} args - Arguments to create many Orders.
     * @example
     * // Create many Orders
     * const orders = await prisma.orders.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ordersCreateManyArgs>(args?: SelectSubset<T, ordersCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Orders.
     * @param {ordersDeleteArgs} args - Arguments to delete one Orders.
     * @example
     * // Delete one Orders
     * const Orders = await prisma.orders.delete({
     *   where: {
     *     // ... filter to delete one Orders
     *   }
     * })
     * 
     */
    delete<T extends ordersDeleteArgs>(args: SelectSubset<T, ordersDeleteArgs<ExtArgs>>): Prisma__ordersClient<$Result.GetResult<Prisma.$ordersPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Orders.
     * @param {ordersUpdateArgs} args - Arguments to update one Orders.
     * @example
     * // Update one Orders
     * const orders = await prisma.orders.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ordersUpdateArgs>(args: SelectSubset<T, ordersUpdateArgs<ExtArgs>>): Prisma__ordersClient<$Result.GetResult<Prisma.$ordersPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Orders.
     * @param {ordersDeleteManyArgs} args - Arguments to filter Orders to delete.
     * @example
     * // Delete a few Orders
     * const { count } = await prisma.orders.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ordersDeleteManyArgs>(args?: SelectSubset<T, ordersDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Orders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ordersUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Orders
     * const orders = await prisma.orders.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ordersUpdateManyArgs>(args: SelectSubset<T, ordersUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Orders.
     * @param {ordersUpsertArgs} args - Arguments to update or create a Orders.
     * @example
     * // Update or create a Orders
     * const orders = await prisma.orders.upsert({
     *   create: {
     *     // ... data to create a Orders
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Orders we want to update
     *   }
     * })
     */
    upsert<T extends ordersUpsertArgs>(args: SelectSubset<T, ordersUpsertArgs<ExtArgs>>): Prisma__ordersClient<$Result.GetResult<Prisma.$ordersPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Orders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ordersCountArgs} args - Arguments to filter Orders to count.
     * @example
     * // Count the number of Orders
     * const count = await prisma.orders.count({
     *   where: {
     *     // ... the filter for the Orders we want to count
     *   }
     * })
    **/
    count<T extends ordersCountArgs>(
      args?: Subset<T, ordersCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], OrdersCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Orders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrdersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends OrdersAggregateArgs>(args: Subset<T, OrdersAggregateArgs>): Prisma.PrismaPromise<GetOrdersAggregateType<T>>

    /**
     * Group by Orders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ordersGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ordersGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ordersGroupByArgs['orderBy'] }
        : { orderBy?: ordersGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ordersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOrdersGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the orders model
   */
  readonly fields: ordersFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for orders.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ordersClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usersDefaultArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    address<T extends addressesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, addressesDefaultArgs<ExtArgs>>): Prisma__addressesClient<$Result.GetResult<Prisma.$addressesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    order_items<T extends orders$order_itemsArgs<ExtArgs> = {}>(args?: Subset<T, orders$order_itemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$order_itemsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    payments<T extends orders$paymentsArgs<ExtArgs> = {}>(args?: Subset<T, orders$paymentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$paymentsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the orders model
   */
  interface ordersFieldRefs {
    readonly id: FieldRef<"orders", 'Int'>
    readonly uuid: FieldRef<"orders", 'String'>
    readonly user_id: FieldRef<"orders", 'Int'>
    readonly address_id: FieldRef<"orders", 'Int'>
    readonly total_amount: FieldRef<"orders", 'Float'>
    readonly status: FieldRef<"orders", 'OrderStatusEnum'>
    readonly is_deleted: FieldRef<"orders", 'Boolean'>
    readonly created_at: FieldRef<"orders", 'DateTime'>
    readonly updated_at: FieldRef<"orders", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * orders findUnique
   */
  export type ordersFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the orders
     */
    select?: ordersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the orders
     */
    omit?: ordersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordersInclude<ExtArgs> | null
    /**
     * Filter, which orders to fetch.
     */
    where: ordersWhereUniqueInput
  }

  /**
   * orders findUniqueOrThrow
   */
  export type ordersFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the orders
     */
    select?: ordersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the orders
     */
    omit?: ordersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordersInclude<ExtArgs> | null
    /**
     * Filter, which orders to fetch.
     */
    where: ordersWhereUniqueInput
  }

  /**
   * orders findFirst
   */
  export type ordersFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the orders
     */
    select?: ordersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the orders
     */
    omit?: ordersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordersInclude<ExtArgs> | null
    /**
     * Filter, which orders to fetch.
     */
    where?: ordersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of orders to fetch.
     */
    orderBy?: ordersOrderByWithRelationInput | ordersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for orders.
     */
    cursor?: ordersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` orders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` orders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of orders.
     */
    distinct?: OrdersScalarFieldEnum | OrdersScalarFieldEnum[]
  }

  /**
   * orders findFirstOrThrow
   */
  export type ordersFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the orders
     */
    select?: ordersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the orders
     */
    omit?: ordersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordersInclude<ExtArgs> | null
    /**
     * Filter, which orders to fetch.
     */
    where?: ordersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of orders to fetch.
     */
    orderBy?: ordersOrderByWithRelationInput | ordersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for orders.
     */
    cursor?: ordersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` orders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` orders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of orders.
     */
    distinct?: OrdersScalarFieldEnum | OrdersScalarFieldEnum[]
  }

  /**
   * orders findMany
   */
  export type ordersFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the orders
     */
    select?: ordersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the orders
     */
    omit?: ordersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordersInclude<ExtArgs> | null
    /**
     * Filter, which orders to fetch.
     */
    where?: ordersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of orders to fetch.
     */
    orderBy?: ordersOrderByWithRelationInput | ordersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing orders.
     */
    cursor?: ordersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` orders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` orders.
     */
    skip?: number
    distinct?: OrdersScalarFieldEnum | OrdersScalarFieldEnum[]
  }

  /**
   * orders create
   */
  export type ordersCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the orders
     */
    select?: ordersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the orders
     */
    omit?: ordersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordersInclude<ExtArgs> | null
    /**
     * The data needed to create a orders.
     */
    data: XOR<ordersCreateInput, ordersUncheckedCreateInput>
  }

  /**
   * orders createMany
   */
  export type ordersCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many orders.
     */
    data: ordersCreateManyInput | ordersCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * orders update
   */
  export type ordersUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the orders
     */
    select?: ordersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the orders
     */
    omit?: ordersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordersInclude<ExtArgs> | null
    /**
     * The data needed to update a orders.
     */
    data: XOR<ordersUpdateInput, ordersUncheckedUpdateInput>
    /**
     * Choose, which orders to update.
     */
    where: ordersWhereUniqueInput
  }

  /**
   * orders updateMany
   */
  export type ordersUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update orders.
     */
    data: XOR<ordersUpdateManyMutationInput, ordersUncheckedUpdateManyInput>
    /**
     * Filter which orders to update
     */
    where?: ordersWhereInput
    /**
     * Limit how many orders to update.
     */
    limit?: number
  }

  /**
   * orders upsert
   */
  export type ordersUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the orders
     */
    select?: ordersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the orders
     */
    omit?: ordersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordersInclude<ExtArgs> | null
    /**
     * The filter to search for the orders to update in case it exists.
     */
    where: ordersWhereUniqueInput
    /**
     * In case the orders found by the `where` argument doesn't exist, create a new orders with this data.
     */
    create: XOR<ordersCreateInput, ordersUncheckedCreateInput>
    /**
     * In case the orders was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ordersUpdateInput, ordersUncheckedUpdateInput>
  }

  /**
   * orders delete
   */
  export type ordersDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the orders
     */
    select?: ordersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the orders
     */
    omit?: ordersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordersInclude<ExtArgs> | null
    /**
     * Filter which orders to delete.
     */
    where: ordersWhereUniqueInput
  }

  /**
   * orders deleteMany
   */
  export type ordersDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which orders to delete
     */
    where?: ordersWhereInput
    /**
     * Limit how many orders to delete.
     */
    limit?: number
  }

  /**
   * orders.order_items
   */
  export type orders$order_itemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_items
     */
    select?: order_itemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the order_items
     */
    omit?: order_itemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_itemsInclude<ExtArgs> | null
    where?: order_itemsWhereInput
    orderBy?: order_itemsOrderByWithRelationInput | order_itemsOrderByWithRelationInput[]
    cursor?: order_itemsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Order_itemsScalarFieldEnum | Order_itemsScalarFieldEnum[]
  }

  /**
   * orders.payments
   */
  export type orders$paymentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the payments
     */
    select?: paymentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the payments
     */
    omit?: paymentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: paymentsInclude<ExtArgs> | null
    where?: paymentsWhereInput
    orderBy?: paymentsOrderByWithRelationInput | paymentsOrderByWithRelationInput[]
    cursor?: paymentsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PaymentsScalarFieldEnum | PaymentsScalarFieldEnum[]
  }

  /**
   * orders without action
   */
  export type ordersDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the orders
     */
    select?: ordersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the orders
     */
    omit?: ordersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordersInclude<ExtArgs> | null
  }


  /**
   * Model order_items
   */

  export type AggregateOrder_items = {
    _count: Order_itemsCountAggregateOutputType | null
    _avg: Order_itemsAvgAggregateOutputType | null
    _sum: Order_itemsSumAggregateOutputType | null
    _min: Order_itemsMinAggregateOutputType | null
    _max: Order_itemsMaxAggregateOutputType | null
  }

  export type Order_itemsAvgAggregateOutputType = {
    id: number | null
    order_id: number | null
    product_id: number | null
    quantity: number | null
    unit_price: number | null
  }

  export type Order_itemsSumAggregateOutputType = {
    id: number | null
    order_id: number | null
    product_id: number | null
    quantity: number | null
    unit_price: number | null
  }

  export type Order_itemsMinAggregateOutputType = {
    id: number | null
    order_id: number | null
    product_id: number | null
    quantity: number | null
    unit_price: number | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Order_itemsMaxAggregateOutputType = {
    id: number | null
    order_id: number | null
    product_id: number | null
    quantity: number | null
    unit_price: number | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Order_itemsCountAggregateOutputType = {
    id: number
    order_id: number
    product_id: number
    quantity: number
    unit_price: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type Order_itemsAvgAggregateInputType = {
    id?: true
    order_id?: true
    product_id?: true
    quantity?: true
    unit_price?: true
  }

  export type Order_itemsSumAggregateInputType = {
    id?: true
    order_id?: true
    product_id?: true
    quantity?: true
    unit_price?: true
  }

  export type Order_itemsMinAggregateInputType = {
    id?: true
    order_id?: true
    product_id?: true
    quantity?: true
    unit_price?: true
    created_at?: true
    updated_at?: true
  }

  export type Order_itemsMaxAggregateInputType = {
    id?: true
    order_id?: true
    product_id?: true
    quantity?: true
    unit_price?: true
    created_at?: true
    updated_at?: true
  }

  export type Order_itemsCountAggregateInputType = {
    id?: true
    order_id?: true
    product_id?: true
    quantity?: true
    unit_price?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type Order_itemsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which order_items to aggregate.
     */
    where?: order_itemsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of order_items to fetch.
     */
    orderBy?: order_itemsOrderByWithRelationInput | order_itemsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: order_itemsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` order_items from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` order_items.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned order_items
    **/
    _count?: true | Order_itemsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Order_itemsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Order_itemsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Order_itemsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Order_itemsMaxAggregateInputType
  }

  export type GetOrder_itemsAggregateType<T extends Order_itemsAggregateArgs> = {
        [P in keyof T & keyof AggregateOrder_items]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOrder_items[P]>
      : GetScalarType<T[P], AggregateOrder_items[P]>
  }




  export type order_itemsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: order_itemsWhereInput
    orderBy?: order_itemsOrderByWithAggregationInput | order_itemsOrderByWithAggregationInput[]
    by: Order_itemsScalarFieldEnum[] | Order_itemsScalarFieldEnum
    having?: order_itemsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Order_itemsCountAggregateInputType | true
    _avg?: Order_itemsAvgAggregateInputType
    _sum?: Order_itemsSumAggregateInputType
    _min?: Order_itemsMinAggregateInputType
    _max?: Order_itemsMaxAggregateInputType
  }

  export type Order_itemsGroupByOutputType = {
    id: number
    order_id: number
    product_id: number
    quantity: number
    unit_price: number
    created_at: Date
    updated_at: Date
    _count: Order_itemsCountAggregateOutputType | null
    _avg: Order_itemsAvgAggregateOutputType | null
    _sum: Order_itemsSumAggregateOutputType | null
    _min: Order_itemsMinAggregateOutputType | null
    _max: Order_itemsMaxAggregateOutputType | null
  }

  type GetOrder_itemsGroupByPayload<T extends order_itemsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Order_itemsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Order_itemsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Order_itemsGroupByOutputType[P]>
            : GetScalarType<T[P], Order_itemsGroupByOutputType[P]>
        }
      >
    >


  export type order_itemsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    order_id?: boolean
    product_id?: boolean
    quantity?: boolean
    unit_price?: boolean
    created_at?: boolean
    updated_at?: boolean
    order?: boolean | ordersDefaultArgs<ExtArgs>
    product?: boolean | productsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["order_items"]>



  export type order_itemsSelectScalar = {
    id?: boolean
    order_id?: boolean
    product_id?: boolean
    quantity?: boolean
    unit_price?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type order_itemsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "order_id" | "product_id" | "quantity" | "unit_price" | "created_at" | "updated_at", ExtArgs["result"]["order_items"]>
  export type order_itemsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order?: boolean | ordersDefaultArgs<ExtArgs>
    product?: boolean | productsDefaultArgs<ExtArgs>
  }

  export type $order_itemsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "order_items"
    objects: {
      order: Prisma.$ordersPayload<ExtArgs>
      product: Prisma.$productsPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      order_id: number
      product_id: number
      quantity: number
      unit_price: number
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["order_items"]>
    composites: {}
  }

  type order_itemsGetPayload<S extends boolean | null | undefined | order_itemsDefaultArgs> = $Result.GetResult<Prisma.$order_itemsPayload, S>

  type order_itemsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<order_itemsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Order_itemsCountAggregateInputType | true
    }

  export interface order_itemsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['order_items'], meta: { name: 'order_items' } }
    /**
     * Find zero or one Order_items that matches the filter.
     * @param {order_itemsFindUniqueArgs} args - Arguments to find a Order_items
     * @example
     * // Get one Order_items
     * const order_items = await prisma.order_items.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends order_itemsFindUniqueArgs>(args: SelectSubset<T, order_itemsFindUniqueArgs<ExtArgs>>): Prisma__order_itemsClient<$Result.GetResult<Prisma.$order_itemsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Order_items that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {order_itemsFindUniqueOrThrowArgs} args - Arguments to find a Order_items
     * @example
     * // Get one Order_items
     * const order_items = await prisma.order_items.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends order_itemsFindUniqueOrThrowArgs>(args: SelectSubset<T, order_itemsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__order_itemsClient<$Result.GetResult<Prisma.$order_itemsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Order_items that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {order_itemsFindFirstArgs} args - Arguments to find a Order_items
     * @example
     * // Get one Order_items
     * const order_items = await prisma.order_items.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends order_itemsFindFirstArgs>(args?: SelectSubset<T, order_itemsFindFirstArgs<ExtArgs>>): Prisma__order_itemsClient<$Result.GetResult<Prisma.$order_itemsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Order_items that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {order_itemsFindFirstOrThrowArgs} args - Arguments to find a Order_items
     * @example
     * // Get one Order_items
     * const order_items = await prisma.order_items.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends order_itemsFindFirstOrThrowArgs>(args?: SelectSubset<T, order_itemsFindFirstOrThrowArgs<ExtArgs>>): Prisma__order_itemsClient<$Result.GetResult<Prisma.$order_itemsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Order_items that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {order_itemsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Order_items
     * const order_items = await prisma.order_items.findMany()
     * 
     * // Get first 10 Order_items
     * const order_items = await prisma.order_items.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const order_itemsWithIdOnly = await prisma.order_items.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends order_itemsFindManyArgs>(args?: SelectSubset<T, order_itemsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$order_itemsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Order_items.
     * @param {order_itemsCreateArgs} args - Arguments to create a Order_items.
     * @example
     * // Create one Order_items
     * const Order_items = await prisma.order_items.create({
     *   data: {
     *     // ... data to create a Order_items
     *   }
     * })
     * 
     */
    create<T extends order_itemsCreateArgs>(args: SelectSubset<T, order_itemsCreateArgs<ExtArgs>>): Prisma__order_itemsClient<$Result.GetResult<Prisma.$order_itemsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Order_items.
     * @param {order_itemsCreateManyArgs} args - Arguments to create many Order_items.
     * @example
     * // Create many Order_items
     * const order_items = await prisma.order_items.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends order_itemsCreateManyArgs>(args?: SelectSubset<T, order_itemsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Order_items.
     * @param {order_itemsDeleteArgs} args - Arguments to delete one Order_items.
     * @example
     * // Delete one Order_items
     * const Order_items = await prisma.order_items.delete({
     *   where: {
     *     // ... filter to delete one Order_items
     *   }
     * })
     * 
     */
    delete<T extends order_itemsDeleteArgs>(args: SelectSubset<T, order_itemsDeleteArgs<ExtArgs>>): Prisma__order_itemsClient<$Result.GetResult<Prisma.$order_itemsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Order_items.
     * @param {order_itemsUpdateArgs} args - Arguments to update one Order_items.
     * @example
     * // Update one Order_items
     * const order_items = await prisma.order_items.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends order_itemsUpdateArgs>(args: SelectSubset<T, order_itemsUpdateArgs<ExtArgs>>): Prisma__order_itemsClient<$Result.GetResult<Prisma.$order_itemsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Order_items.
     * @param {order_itemsDeleteManyArgs} args - Arguments to filter Order_items to delete.
     * @example
     * // Delete a few Order_items
     * const { count } = await prisma.order_items.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends order_itemsDeleteManyArgs>(args?: SelectSubset<T, order_itemsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Order_items.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {order_itemsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Order_items
     * const order_items = await prisma.order_items.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends order_itemsUpdateManyArgs>(args: SelectSubset<T, order_itemsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Order_items.
     * @param {order_itemsUpsertArgs} args - Arguments to update or create a Order_items.
     * @example
     * // Update or create a Order_items
     * const order_items = await prisma.order_items.upsert({
     *   create: {
     *     // ... data to create a Order_items
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Order_items we want to update
     *   }
     * })
     */
    upsert<T extends order_itemsUpsertArgs>(args: SelectSubset<T, order_itemsUpsertArgs<ExtArgs>>): Prisma__order_itemsClient<$Result.GetResult<Prisma.$order_itemsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Order_items.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {order_itemsCountArgs} args - Arguments to filter Order_items to count.
     * @example
     * // Count the number of Order_items
     * const count = await prisma.order_items.count({
     *   where: {
     *     // ... the filter for the Order_items we want to count
     *   }
     * })
    **/
    count<T extends order_itemsCountArgs>(
      args?: Subset<T, order_itemsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Order_itemsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Order_items.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Order_itemsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Order_itemsAggregateArgs>(args: Subset<T, Order_itemsAggregateArgs>): Prisma.PrismaPromise<GetOrder_itemsAggregateType<T>>

    /**
     * Group by Order_items.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {order_itemsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends order_itemsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: order_itemsGroupByArgs['orderBy'] }
        : { orderBy?: order_itemsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, order_itemsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOrder_itemsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the order_items model
   */
  readonly fields: order_itemsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for order_items.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__order_itemsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    order<T extends ordersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ordersDefaultArgs<ExtArgs>>): Prisma__ordersClient<$Result.GetResult<Prisma.$ordersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    product<T extends productsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, productsDefaultArgs<ExtArgs>>): Prisma__productsClient<$Result.GetResult<Prisma.$productsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the order_items model
   */
  interface order_itemsFieldRefs {
    readonly id: FieldRef<"order_items", 'Int'>
    readonly order_id: FieldRef<"order_items", 'Int'>
    readonly product_id: FieldRef<"order_items", 'Int'>
    readonly quantity: FieldRef<"order_items", 'Int'>
    readonly unit_price: FieldRef<"order_items", 'Float'>
    readonly created_at: FieldRef<"order_items", 'DateTime'>
    readonly updated_at: FieldRef<"order_items", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * order_items findUnique
   */
  export type order_itemsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_items
     */
    select?: order_itemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the order_items
     */
    omit?: order_itemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_itemsInclude<ExtArgs> | null
    /**
     * Filter, which order_items to fetch.
     */
    where: order_itemsWhereUniqueInput
  }

  /**
   * order_items findUniqueOrThrow
   */
  export type order_itemsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_items
     */
    select?: order_itemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the order_items
     */
    omit?: order_itemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_itemsInclude<ExtArgs> | null
    /**
     * Filter, which order_items to fetch.
     */
    where: order_itemsWhereUniqueInput
  }

  /**
   * order_items findFirst
   */
  export type order_itemsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_items
     */
    select?: order_itemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the order_items
     */
    omit?: order_itemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_itemsInclude<ExtArgs> | null
    /**
     * Filter, which order_items to fetch.
     */
    where?: order_itemsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of order_items to fetch.
     */
    orderBy?: order_itemsOrderByWithRelationInput | order_itemsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for order_items.
     */
    cursor?: order_itemsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` order_items from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` order_items.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of order_items.
     */
    distinct?: Order_itemsScalarFieldEnum | Order_itemsScalarFieldEnum[]
  }

  /**
   * order_items findFirstOrThrow
   */
  export type order_itemsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_items
     */
    select?: order_itemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the order_items
     */
    omit?: order_itemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_itemsInclude<ExtArgs> | null
    /**
     * Filter, which order_items to fetch.
     */
    where?: order_itemsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of order_items to fetch.
     */
    orderBy?: order_itemsOrderByWithRelationInput | order_itemsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for order_items.
     */
    cursor?: order_itemsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` order_items from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` order_items.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of order_items.
     */
    distinct?: Order_itemsScalarFieldEnum | Order_itemsScalarFieldEnum[]
  }

  /**
   * order_items findMany
   */
  export type order_itemsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_items
     */
    select?: order_itemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the order_items
     */
    omit?: order_itemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_itemsInclude<ExtArgs> | null
    /**
     * Filter, which order_items to fetch.
     */
    where?: order_itemsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of order_items to fetch.
     */
    orderBy?: order_itemsOrderByWithRelationInput | order_itemsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing order_items.
     */
    cursor?: order_itemsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` order_items from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` order_items.
     */
    skip?: number
    distinct?: Order_itemsScalarFieldEnum | Order_itemsScalarFieldEnum[]
  }

  /**
   * order_items create
   */
  export type order_itemsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_items
     */
    select?: order_itemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the order_items
     */
    omit?: order_itemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_itemsInclude<ExtArgs> | null
    /**
     * The data needed to create a order_items.
     */
    data: XOR<order_itemsCreateInput, order_itemsUncheckedCreateInput>
  }

  /**
   * order_items createMany
   */
  export type order_itemsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many order_items.
     */
    data: order_itemsCreateManyInput | order_itemsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * order_items update
   */
  export type order_itemsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_items
     */
    select?: order_itemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the order_items
     */
    omit?: order_itemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_itemsInclude<ExtArgs> | null
    /**
     * The data needed to update a order_items.
     */
    data: XOR<order_itemsUpdateInput, order_itemsUncheckedUpdateInput>
    /**
     * Choose, which order_items to update.
     */
    where: order_itemsWhereUniqueInput
  }

  /**
   * order_items updateMany
   */
  export type order_itemsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update order_items.
     */
    data: XOR<order_itemsUpdateManyMutationInput, order_itemsUncheckedUpdateManyInput>
    /**
     * Filter which order_items to update
     */
    where?: order_itemsWhereInput
    /**
     * Limit how many order_items to update.
     */
    limit?: number
  }

  /**
   * order_items upsert
   */
  export type order_itemsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_items
     */
    select?: order_itemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the order_items
     */
    omit?: order_itemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_itemsInclude<ExtArgs> | null
    /**
     * The filter to search for the order_items to update in case it exists.
     */
    where: order_itemsWhereUniqueInput
    /**
     * In case the order_items found by the `where` argument doesn't exist, create a new order_items with this data.
     */
    create: XOR<order_itemsCreateInput, order_itemsUncheckedCreateInput>
    /**
     * In case the order_items was found with the provided `where` argument, update it with this data.
     */
    update: XOR<order_itemsUpdateInput, order_itemsUncheckedUpdateInput>
  }

  /**
   * order_items delete
   */
  export type order_itemsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_items
     */
    select?: order_itemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the order_items
     */
    omit?: order_itemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_itemsInclude<ExtArgs> | null
    /**
     * Filter which order_items to delete.
     */
    where: order_itemsWhereUniqueInput
  }

  /**
   * order_items deleteMany
   */
  export type order_itemsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which order_items to delete
     */
    where?: order_itemsWhereInput
    /**
     * Limit how many order_items to delete.
     */
    limit?: number
  }

  /**
   * order_items without action
   */
  export type order_itemsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_items
     */
    select?: order_itemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the order_items
     */
    omit?: order_itemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_itemsInclude<ExtArgs> | null
  }


  /**
   * Model cart_items
   */

  export type AggregateCart_items = {
    _count: Cart_itemsCountAggregateOutputType | null
    _avg: Cart_itemsAvgAggregateOutputType | null
    _sum: Cart_itemsSumAggregateOutputType | null
    _min: Cart_itemsMinAggregateOutputType | null
    _max: Cart_itemsMaxAggregateOutputType | null
  }

  export type Cart_itemsAvgAggregateOutputType = {
    id: number | null
    user_id: number | null
    product_id: number | null
    quantity: number | null
  }

  export type Cart_itemsSumAggregateOutputType = {
    id: number | null
    user_id: number | null
    product_id: number | null
    quantity: number | null
  }

  export type Cart_itemsMinAggregateOutputType = {
    id: number | null
    user_id: number | null
    product_id: number | null
    quantity: number | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Cart_itemsMaxAggregateOutputType = {
    id: number | null
    user_id: number | null
    product_id: number | null
    quantity: number | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Cart_itemsCountAggregateOutputType = {
    id: number
    user_id: number
    product_id: number
    quantity: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type Cart_itemsAvgAggregateInputType = {
    id?: true
    user_id?: true
    product_id?: true
    quantity?: true
  }

  export type Cart_itemsSumAggregateInputType = {
    id?: true
    user_id?: true
    product_id?: true
    quantity?: true
  }

  export type Cart_itemsMinAggregateInputType = {
    id?: true
    user_id?: true
    product_id?: true
    quantity?: true
    created_at?: true
    updated_at?: true
  }

  export type Cart_itemsMaxAggregateInputType = {
    id?: true
    user_id?: true
    product_id?: true
    quantity?: true
    created_at?: true
    updated_at?: true
  }

  export type Cart_itemsCountAggregateInputType = {
    id?: true
    user_id?: true
    product_id?: true
    quantity?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type Cart_itemsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which cart_items to aggregate.
     */
    where?: cart_itemsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cart_items to fetch.
     */
    orderBy?: cart_itemsOrderByWithRelationInput | cart_itemsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: cart_itemsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cart_items from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cart_items.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned cart_items
    **/
    _count?: true | Cart_itemsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Cart_itemsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Cart_itemsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Cart_itemsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Cart_itemsMaxAggregateInputType
  }

  export type GetCart_itemsAggregateType<T extends Cart_itemsAggregateArgs> = {
        [P in keyof T & keyof AggregateCart_items]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCart_items[P]>
      : GetScalarType<T[P], AggregateCart_items[P]>
  }




  export type cart_itemsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: cart_itemsWhereInput
    orderBy?: cart_itemsOrderByWithAggregationInput | cart_itemsOrderByWithAggregationInput[]
    by: Cart_itemsScalarFieldEnum[] | Cart_itemsScalarFieldEnum
    having?: cart_itemsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Cart_itemsCountAggregateInputType | true
    _avg?: Cart_itemsAvgAggregateInputType
    _sum?: Cart_itemsSumAggregateInputType
    _min?: Cart_itemsMinAggregateInputType
    _max?: Cart_itemsMaxAggregateInputType
  }

  export type Cart_itemsGroupByOutputType = {
    id: number
    user_id: number
    product_id: number
    quantity: number
    created_at: Date
    updated_at: Date
    _count: Cart_itemsCountAggregateOutputType | null
    _avg: Cart_itemsAvgAggregateOutputType | null
    _sum: Cart_itemsSumAggregateOutputType | null
    _min: Cart_itemsMinAggregateOutputType | null
    _max: Cart_itemsMaxAggregateOutputType | null
  }

  type GetCart_itemsGroupByPayload<T extends cart_itemsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Cart_itemsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Cart_itemsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Cart_itemsGroupByOutputType[P]>
            : GetScalarType<T[P], Cart_itemsGroupByOutputType[P]>
        }
      >
    >


  export type cart_itemsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    product_id?: boolean
    quantity?: boolean
    created_at?: boolean
    updated_at?: boolean
    user?: boolean | usersDefaultArgs<ExtArgs>
    product?: boolean | productsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cart_items"]>



  export type cart_itemsSelectScalar = {
    id?: boolean
    user_id?: boolean
    product_id?: boolean
    quantity?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type cart_itemsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "user_id" | "product_id" | "quantity" | "created_at" | "updated_at", ExtArgs["result"]["cart_items"]>
  export type cart_itemsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | usersDefaultArgs<ExtArgs>
    product?: boolean | productsDefaultArgs<ExtArgs>
  }

  export type $cart_itemsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "cart_items"
    objects: {
      user: Prisma.$usersPayload<ExtArgs>
      product: Prisma.$productsPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      user_id: number
      product_id: number
      quantity: number
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["cart_items"]>
    composites: {}
  }

  type cart_itemsGetPayload<S extends boolean | null | undefined | cart_itemsDefaultArgs> = $Result.GetResult<Prisma.$cart_itemsPayload, S>

  type cart_itemsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<cart_itemsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Cart_itemsCountAggregateInputType | true
    }

  export interface cart_itemsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['cart_items'], meta: { name: 'cart_items' } }
    /**
     * Find zero or one Cart_items that matches the filter.
     * @param {cart_itemsFindUniqueArgs} args - Arguments to find a Cart_items
     * @example
     * // Get one Cart_items
     * const cart_items = await prisma.cart_items.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends cart_itemsFindUniqueArgs>(args: SelectSubset<T, cart_itemsFindUniqueArgs<ExtArgs>>): Prisma__cart_itemsClient<$Result.GetResult<Prisma.$cart_itemsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Cart_items that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {cart_itemsFindUniqueOrThrowArgs} args - Arguments to find a Cart_items
     * @example
     * // Get one Cart_items
     * const cart_items = await prisma.cart_items.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends cart_itemsFindUniqueOrThrowArgs>(args: SelectSubset<T, cart_itemsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__cart_itemsClient<$Result.GetResult<Prisma.$cart_itemsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Cart_items that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cart_itemsFindFirstArgs} args - Arguments to find a Cart_items
     * @example
     * // Get one Cart_items
     * const cart_items = await prisma.cart_items.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends cart_itemsFindFirstArgs>(args?: SelectSubset<T, cart_itemsFindFirstArgs<ExtArgs>>): Prisma__cart_itemsClient<$Result.GetResult<Prisma.$cart_itemsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Cart_items that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cart_itemsFindFirstOrThrowArgs} args - Arguments to find a Cart_items
     * @example
     * // Get one Cart_items
     * const cart_items = await prisma.cart_items.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends cart_itemsFindFirstOrThrowArgs>(args?: SelectSubset<T, cart_itemsFindFirstOrThrowArgs<ExtArgs>>): Prisma__cart_itemsClient<$Result.GetResult<Prisma.$cart_itemsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Cart_items that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cart_itemsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Cart_items
     * const cart_items = await prisma.cart_items.findMany()
     * 
     * // Get first 10 Cart_items
     * const cart_items = await prisma.cart_items.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const cart_itemsWithIdOnly = await prisma.cart_items.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends cart_itemsFindManyArgs>(args?: SelectSubset<T, cart_itemsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cart_itemsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Cart_items.
     * @param {cart_itemsCreateArgs} args - Arguments to create a Cart_items.
     * @example
     * // Create one Cart_items
     * const Cart_items = await prisma.cart_items.create({
     *   data: {
     *     // ... data to create a Cart_items
     *   }
     * })
     * 
     */
    create<T extends cart_itemsCreateArgs>(args: SelectSubset<T, cart_itemsCreateArgs<ExtArgs>>): Prisma__cart_itemsClient<$Result.GetResult<Prisma.$cart_itemsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Cart_items.
     * @param {cart_itemsCreateManyArgs} args - Arguments to create many Cart_items.
     * @example
     * // Create many Cart_items
     * const cart_items = await prisma.cart_items.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends cart_itemsCreateManyArgs>(args?: SelectSubset<T, cart_itemsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Cart_items.
     * @param {cart_itemsDeleteArgs} args - Arguments to delete one Cart_items.
     * @example
     * // Delete one Cart_items
     * const Cart_items = await prisma.cart_items.delete({
     *   where: {
     *     // ... filter to delete one Cart_items
     *   }
     * })
     * 
     */
    delete<T extends cart_itemsDeleteArgs>(args: SelectSubset<T, cart_itemsDeleteArgs<ExtArgs>>): Prisma__cart_itemsClient<$Result.GetResult<Prisma.$cart_itemsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Cart_items.
     * @param {cart_itemsUpdateArgs} args - Arguments to update one Cart_items.
     * @example
     * // Update one Cart_items
     * const cart_items = await prisma.cart_items.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends cart_itemsUpdateArgs>(args: SelectSubset<T, cart_itemsUpdateArgs<ExtArgs>>): Prisma__cart_itemsClient<$Result.GetResult<Prisma.$cart_itemsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Cart_items.
     * @param {cart_itemsDeleteManyArgs} args - Arguments to filter Cart_items to delete.
     * @example
     * // Delete a few Cart_items
     * const { count } = await prisma.cart_items.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends cart_itemsDeleteManyArgs>(args?: SelectSubset<T, cart_itemsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Cart_items.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cart_itemsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Cart_items
     * const cart_items = await prisma.cart_items.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends cart_itemsUpdateManyArgs>(args: SelectSubset<T, cart_itemsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Cart_items.
     * @param {cart_itemsUpsertArgs} args - Arguments to update or create a Cart_items.
     * @example
     * // Update or create a Cart_items
     * const cart_items = await prisma.cart_items.upsert({
     *   create: {
     *     // ... data to create a Cart_items
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Cart_items we want to update
     *   }
     * })
     */
    upsert<T extends cart_itemsUpsertArgs>(args: SelectSubset<T, cart_itemsUpsertArgs<ExtArgs>>): Prisma__cart_itemsClient<$Result.GetResult<Prisma.$cart_itemsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Cart_items.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cart_itemsCountArgs} args - Arguments to filter Cart_items to count.
     * @example
     * // Count the number of Cart_items
     * const count = await prisma.cart_items.count({
     *   where: {
     *     // ... the filter for the Cart_items we want to count
     *   }
     * })
    **/
    count<T extends cart_itemsCountArgs>(
      args?: Subset<T, cart_itemsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Cart_itemsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Cart_items.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Cart_itemsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Cart_itemsAggregateArgs>(args: Subset<T, Cart_itemsAggregateArgs>): Prisma.PrismaPromise<GetCart_itemsAggregateType<T>>

    /**
     * Group by Cart_items.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cart_itemsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends cart_itemsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: cart_itemsGroupByArgs['orderBy'] }
        : { orderBy?: cart_itemsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, cart_itemsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCart_itemsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the cart_items model
   */
  readonly fields: cart_itemsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for cart_items.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__cart_itemsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usersDefaultArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    product<T extends productsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, productsDefaultArgs<ExtArgs>>): Prisma__productsClient<$Result.GetResult<Prisma.$productsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the cart_items model
   */
  interface cart_itemsFieldRefs {
    readonly id: FieldRef<"cart_items", 'Int'>
    readonly user_id: FieldRef<"cart_items", 'Int'>
    readonly product_id: FieldRef<"cart_items", 'Int'>
    readonly quantity: FieldRef<"cart_items", 'Int'>
    readonly created_at: FieldRef<"cart_items", 'DateTime'>
    readonly updated_at: FieldRef<"cart_items", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * cart_items findUnique
   */
  export type cart_itemsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cart_items
     */
    select?: cart_itemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cart_items
     */
    omit?: cart_itemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cart_itemsInclude<ExtArgs> | null
    /**
     * Filter, which cart_items to fetch.
     */
    where: cart_itemsWhereUniqueInput
  }

  /**
   * cart_items findUniqueOrThrow
   */
  export type cart_itemsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cart_items
     */
    select?: cart_itemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cart_items
     */
    omit?: cart_itemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cart_itemsInclude<ExtArgs> | null
    /**
     * Filter, which cart_items to fetch.
     */
    where: cart_itemsWhereUniqueInput
  }

  /**
   * cart_items findFirst
   */
  export type cart_itemsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cart_items
     */
    select?: cart_itemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cart_items
     */
    omit?: cart_itemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cart_itemsInclude<ExtArgs> | null
    /**
     * Filter, which cart_items to fetch.
     */
    where?: cart_itemsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cart_items to fetch.
     */
    orderBy?: cart_itemsOrderByWithRelationInput | cart_itemsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for cart_items.
     */
    cursor?: cart_itemsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cart_items from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cart_items.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of cart_items.
     */
    distinct?: Cart_itemsScalarFieldEnum | Cart_itemsScalarFieldEnum[]
  }

  /**
   * cart_items findFirstOrThrow
   */
  export type cart_itemsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cart_items
     */
    select?: cart_itemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cart_items
     */
    omit?: cart_itemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cart_itemsInclude<ExtArgs> | null
    /**
     * Filter, which cart_items to fetch.
     */
    where?: cart_itemsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cart_items to fetch.
     */
    orderBy?: cart_itemsOrderByWithRelationInput | cart_itemsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for cart_items.
     */
    cursor?: cart_itemsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cart_items from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cart_items.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of cart_items.
     */
    distinct?: Cart_itemsScalarFieldEnum | Cart_itemsScalarFieldEnum[]
  }

  /**
   * cart_items findMany
   */
  export type cart_itemsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cart_items
     */
    select?: cart_itemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cart_items
     */
    omit?: cart_itemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cart_itemsInclude<ExtArgs> | null
    /**
     * Filter, which cart_items to fetch.
     */
    where?: cart_itemsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cart_items to fetch.
     */
    orderBy?: cart_itemsOrderByWithRelationInput | cart_itemsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing cart_items.
     */
    cursor?: cart_itemsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cart_items from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cart_items.
     */
    skip?: number
    distinct?: Cart_itemsScalarFieldEnum | Cart_itemsScalarFieldEnum[]
  }

  /**
   * cart_items create
   */
  export type cart_itemsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cart_items
     */
    select?: cart_itemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cart_items
     */
    omit?: cart_itemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cart_itemsInclude<ExtArgs> | null
    /**
     * The data needed to create a cart_items.
     */
    data: XOR<cart_itemsCreateInput, cart_itemsUncheckedCreateInput>
  }

  /**
   * cart_items createMany
   */
  export type cart_itemsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many cart_items.
     */
    data: cart_itemsCreateManyInput | cart_itemsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * cart_items update
   */
  export type cart_itemsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cart_items
     */
    select?: cart_itemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cart_items
     */
    omit?: cart_itemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cart_itemsInclude<ExtArgs> | null
    /**
     * The data needed to update a cart_items.
     */
    data: XOR<cart_itemsUpdateInput, cart_itemsUncheckedUpdateInput>
    /**
     * Choose, which cart_items to update.
     */
    where: cart_itemsWhereUniqueInput
  }

  /**
   * cart_items updateMany
   */
  export type cart_itemsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update cart_items.
     */
    data: XOR<cart_itemsUpdateManyMutationInput, cart_itemsUncheckedUpdateManyInput>
    /**
     * Filter which cart_items to update
     */
    where?: cart_itemsWhereInput
    /**
     * Limit how many cart_items to update.
     */
    limit?: number
  }

  /**
   * cart_items upsert
   */
  export type cart_itemsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cart_items
     */
    select?: cart_itemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cart_items
     */
    omit?: cart_itemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cart_itemsInclude<ExtArgs> | null
    /**
     * The filter to search for the cart_items to update in case it exists.
     */
    where: cart_itemsWhereUniqueInput
    /**
     * In case the cart_items found by the `where` argument doesn't exist, create a new cart_items with this data.
     */
    create: XOR<cart_itemsCreateInput, cart_itemsUncheckedCreateInput>
    /**
     * In case the cart_items was found with the provided `where` argument, update it with this data.
     */
    update: XOR<cart_itemsUpdateInput, cart_itemsUncheckedUpdateInput>
  }

  /**
   * cart_items delete
   */
  export type cart_itemsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cart_items
     */
    select?: cart_itemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cart_items
     */
    omit?: cart_itemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cart_itemsInclude<ExtArgs> | null
    /**
     * Filter which cart_items to delete.
     */
    where: cart_itemsWhereUniqueInput
  }

  /**
   * cart_items deleteMany
   */
  export type cart_itemsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which cart_items to delete
     */
    where?: cart_itemsWhereInput
    /**
     * Limit how many cart_items to delete.
     */
    limit?: number
  }

  /**
   * cart_items without action
   */
  export type cart_itemsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cart_items
     */
    select?: cart_itemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cart_items
     */
    omit?: cart_itemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cart_itemsInclude<ExtArgs> | null
  }


  /**
   * Model reviews
   */

  export type AggregateReviews = {
    _count: ReviewsCountAggregateOutputType | null
    _avg: ReviewsAvgAggregateOutputType | null
    _sum: ReviewsSumAggregateOutputType | null
    _min: ReviewsMinAggregateOutputType | null
    _max: ReviewsMaxAggregateOutputType | null
  }

  export type ReviewsAvgAggregateOutputType = {
    id: number | null
    user_id: number | null
    product_id: number | null
    rating: number | null
  }

  export type ReviewsSumAggregateOutputType = {
    id: number | null
    user_id: number | null
    product_id: number | null
    rating: number | null
  }

  export type ReviewsMinAggregateOutputType = {
    id: number | null
    uuid: string | null
    user_id: number | null
    product_id: number | null
    rating: number | null
    comment: string | null
    is_deleted: boolean | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type ReviewsMaxAggregateOutputType = {
    id: number | null
    uuid: string | null
    user_id: number | null
    product_id: number | null
    rating: number | null
    comment: string | null
    is_deleted: boolean | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type ReviewsCountAggregateOutputType = {
    id: number
    uuid: number
    user_id: number
    product_id: number
    rating: number
    comment: number
    is_deleted: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type ReviewsAvgAggregateInputType = {
    id?: true
    user_id?: true
    product_id?: true
    rating?: true
  }

  export type ReviewsSumAggregateInputType = {
    id?: true
    user_id?: true
    product_id?: true
    rating?: true
  }

  export type ReviewsMinAggregateInputType = {
    id?: true
    uuid?: true
    user_id?: true
    product_id?: true
    rating?: true
    comment?: true
    is_deleted?: true
    created_at?: true
    updated_at?: true
  }

  export type ReviewsMaxAggregateInputType = {
    id?: true
    uuid?: true
    user_id?: true
    product_id?: true
    rating?: true
    comment?: true
    is_deleted?: true
    created_at?: true
    updated_at?: true
  }

  export type ReviewsCountAggregateInputType = {
    id?: true
    uuid?: true
    user_id?: true
    product_id?: true
    rating?: true
    comment?: true
    is_deleted?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type ReviewsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which reviews to aggregate.
     */
    where?: reviewsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of reviews to fetch.
     */
    orderBy?: reviewsOrderByWithRelationInput | reviewsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: reviewsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` reviews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` reviews.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned reviews
    **/
    _count?: true | ReviewsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ReviewsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ReviewsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ReviewsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ReviewsMaxAggregateInputType
  }

  export type GetReviewsAggregateType<T extends ReviewsAggregateArgs> = {
        [P in keyof T & keyof AggregateReviews]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateReviews[P]>
      : GetScalarType<T[P], AggregateReviews[P]>
  }




  export type reviewsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: reviewsWhereInput
    orderBy?: reviewsOrderByWithAggregationInput | reviewsOrderByWithAggregationInput[]
    by: ReviewsScalarFieldEnum[] | ReviewsScalarFieldEnum
    having?: reviewsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ReviewsCountAggregateInputType | true
    _avg?: ReviewsAvgAggregateInputType
    _sum?: ReviewsSumAggregateInputType
    _min?: ReviewsMinAggregateInputType
    _max?: ReviewsMaxAggregateInputType
  }

  export type ReviewsGroupByOutputType = {
    id: number
    uuid: string
    user_id: number
    product_id: number
    rating: number
    comment: string | null
    is_deleted: boolean
    created_at: Date
    updated_at: Date
    _count: ReviewsCountAggregateOutputType | null
    _avg: ReviewsAvgAggregateOutputType | null
    _sum: ReviewsSumAggregateOutputType | null
    _min: ReviewsMinAggregateOutputType | null
    _max: ReviewsMaxAggregateOutputType | null
  }

  type GetReviewsGroupByPayload<T extends reviewsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ReviewsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ReviewsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ReviewsGroupByOutputType[P]>
            : GetScalarType<T[P], ReviewsGroupByOutputType[P]>
        }
      >
    >


  export type reviewsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    uuid?: boolean
    user_id?: boolean
    product_id?: boolean
    rating?: boolean
    comment?: boolean
    is_deleted?: boolean
    created_at?: boolean
    updated_at?: boolean
    user?: boolean | usersDefaultArgs<ExtArgs>
    product?: boolean | productsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["reviews"]>



  export type reviewsSelectScalar = {
    id?: boolean
    uuid?: boolean
    user_id?: boolean
    product_id?: boolean
    rating?: boolean
    comment?: boolean
    is_deleted?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type reviewsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "uuid" | "user_id" | "product_id" | "rating" | "comment" | "is_deleted" | "created_at" | "updated_at", ExtArgs["result"]["reviews"]>
  export type reviewsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | usersDefaultArgs<ExtArgs>
    product?: boolean | productsDefaultArgs<ExtArgs>
  }

  export type $reviewsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "reviews"
    objects: {
      user: Prisma.$usersPayload<ExtArgs>
      product: Prisma.$productsPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      uuid: string
      user_id: number
      product_id: number
      rating: number
      comment: string | null
      is_deleted: boolean
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["reviews"]>
    composites: {}
  }

  type reviewsGetPayload<S extends boolean | null | undefined | reviewsDefaultArgs> = $Result.GetResult<Prisma.$reviewsPayload, S>

  type reviewsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<reviewsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ReviewsCountAggregateInputType | true
    }

  export interface reviewsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['reviews'], meta: { name: 'reviews' } }
    /**
     * Find zero or one Reviews that matches the filter.
     * @param {reviewsFindUniqueArgs} args - Arguments to find a Reviews
     * @example
     * // Get one Reviews
     * const reviews = await prisma.reviews.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends reviewsFindUniqueArgs>(args: SelectSubset<T, reviewsFindUniqueArgs<ExtArgs>>): Prisma__reviewsClient<$Result.GetResult<Prisma.$reviewsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Reviews that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {reviewsFindUniqueOrThrowArgs} args - Arguments to find a Reviews
     * @example
     * // Get one Reviews
     * const reviews = await prisma.reviews.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends reviewsFindUniqueOrThrowArgs>(args: SelectSubset<T, reviewsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__reviewsClient<$Result.GetResult<Prisma.$reviewsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Reviews that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reviewsFindFirstArgs} args - Arguments to find a Reviews
     * @example
     * // Get one Reviews
     * const reviews = await prisma.reviews.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends reviewsFindFirstArgs>(args?: SelectSubset<T, reviewsFindFirstArgs<ExtArgs>>): Prisma__reviewsClient<$Result.GetResult<Prisma.$reviewsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Reviews that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reviewsFindFirstOrThrowArgs} args - Arguments to find a Reviews
     * @example
     * // Get one Reviews
     * const reviews = await prisma.reviews.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends reviewsFindFirstOrThrowArgs>(args?: SelectSubset<T, reviewsFindFirstOrThrowArgs<ExtArgs>>): Prisma__reviewsClient<$Result.GetResult<Prisma.$reviewsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Reviews that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reviewsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Reviews
     * const reviews = await prisma.reviews.findMany()
     * 
     * // Get first 10 Reviews
     * const reviews = await prisma.reviews.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const reviewsWithIdOnly = await prisma.reviews.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends reviewsFindManyArgs>(args?: SelectSubset<T, reviewsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$reviewsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Reviews.
     * @param {reviewsCreateArgs} args - Arguments to create a Reviews.
     * @example
     * // Create one Reviews
     * const Reviews = await prisma.reviews.create({
     *   data: {
     *     // ... data to create a Reviews
     *   }
     * })
     * 
     */
    create<T extends reviewsCreateArgs>(args: SelectSubset<T, reviewsCreateArgs<ExtArgs>>): Prisma__reviewsClient<$Result.GetResult<Prisma.$reviewsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Reviews.
     * @param {reviewsCreateManyArgs} args - Arguments to create many Reviews.
     * @example
     * // Create many Reviews
     * const reviews = await prisma.reviews.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends reviewsCreateManyArgs>(args?: SelectSubset<T, reviewsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Reviews.
     * @param {reviewsDeleteArgs} args - Arguments to delete one Reviews.
     * @example
     * // Delete one Reviews
     * const Reviews = await prisma.reviews.delete({
     *   where: {
     *     // ... filter to delete one Reviews
     *   }
     * })
     * 
     */
    delete<T extends reviewsDeleteArgs>(args: SelectSubset<T, reviewsDeleteArgs<ExtArgs>>): Prisma__reviewsClient<$Result.GetResult<Prisma.$reviewsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Reviews.
     * @param {reviewsUpdateArgs} args - Arguments to update one Reviews.
     * @example
     * // Update one Reviews
     * const reviews = await prisma.reviews.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends reviewsUpdateArgs>(args: SelectSubset<T, reviewsUpdateArgs<ExtArgs>>): Prisma__reviewsClient<$Result.GetResult<Prisma.$reviewsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Reviews.
     * @param {reviewsDeleteManyArgs} args - Arguments to filter Reviews to delete.
     * @example
     * // Delete a few Reviews
     * const { count } = await prisma.reviews.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends reviewsDeleteManyArgs>(args?: SelectSubset<T, reviewsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Reviews.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reviewsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Reviews
     * const reviews = await prisma.reviews.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends reviewsUpdateManyArgs>(args: SelectSubset<T, reviewsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Reviews.
     * @param {reviewsUpsertArgs} args - Arguments to update or create a Reviews.
     * @example
     * // Update or create a Reviews
     * const reviews = await prisma.reviews.upsert({
     *   create: {
     *     // ... data to create a Reviews
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Reviews we want to update
     *   }
     * })
     */
    upsert<T extends reviewsUpsertArgs>(args: SelectSubset<T, reviewsUpsertArgs<ExtArgs>>): Prisma__reviewsClient<$Result.GetResult<Prisma.$reviewsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Reviews.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reviewsCountArgs} args - Arguments to filter Reviews to count.
     * @example
     * // Count the number of Reviews
     * const count = await prisma.reviews.count({
     *   where: {
     *     // ... the filter for the Reviews we want to count
     *   }
     * })
    **/
    count<T extends reviewsCountArgs>(
      args?: Subset<T, reviewsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ReviewsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Reviews.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReviewsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ReviewsAggregateArgs>(args: Subset<T, ReviewsAggregateArgs>): Prisma.PrismaPromise<GetReviewsAggregateType<T>>

    /**
     * Group by Reviews.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reviewsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends reviewsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: reviewsGroupByArgs['orderBy'] }
        : { orderBy?: reviewsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, reviewsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetReviewsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the reviews model
   */
  readonly fields: reviewsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for reviews.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__reviewsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usersDefaultArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    product<T extends productsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, productsDefaultArgs<ExtArgs>>): Prisma__productsClient<$Result.GetResult<Prisma.$productsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the reviews model
   */
  interface reviewsFieldRefs {
    readonly id: FieldRef<"reviews", 'Int'>
    readonly uuid: FieldRef<"reviews", 'String'>
    readonly user_id: FieldRef<"reviews", 'Int'>
    readonly product_id: FieldRef<"reviews", 'Int'>
    readonly rating: FieldRef<"reviews", 'Int'>
    readonly comment: FieldRef<"reviews", 'String'>
    readonly is_deleted: FieldRef<"reviews", 'Boolean'>
    readonly created_at: FieldRef<"reviews", 'DateTime'>
    readonly updated_at: FieldRef<"reviews", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * reviews findUnique
   */
  export type reviewsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reviews
     */
    select?: reviewsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reviews
     */
    omit?: reviewsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reviewsInclude<ExtArgs> | null
    /**
     * Filter, which reviews to fetch.
     */
    where: reviewsWhereUniqueInput
  }

  /**
   * reviews findUniqueOrThrow
   */
  export type reviewsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reviews
     */
    select?: reviewsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reviews
     */
    omit?: reviewsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reviewsInclude<ExtArgs> | null
    /**
     * Filter, which reviews to fetch.
     */
    where: reviewsWhereUniqueInput
  }

  /**
   * reviews findFirst
   */
  export type reviewsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reviews
     */
    select?: reviewsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reviews
     */
    omit?: reviewsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reviewsInclude<ExtArgs> | null
    /**
     * Filter, which reviews to fetch.
     */
    where?: reviewsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of reviews to fetch.
     */
    orderBy?: reviewsOrderByWithRelationInput | reviewsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for reviews.
     */
    cursor?: reviewsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` reviews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` reviews.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of reviews.
     */
    distinct?: ReviewsScalarFieldEnum | ReviewsScalarFieldEnum[]
  }

  /**
   * reviews findFirstOrThrow
   */
  export type reviewsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reviews
     */
    select?: reviewsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reviews
     */
    omit?: reviewsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reviewsInclude<ExtArgs> | null
    /**
     * Filter, which reviews to fetch.
     */
    where?: reviewsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of reviews to fetch.
     */
    orderBy?: reviewsOrderByWithRelationInput | reviewsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for reviews.
     */
    cursor?: reviewsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` reviews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` reviews.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of reviews.
     */
    distinct?: ReviewsScalarFieldEnum | ReviewsScalarFieldEnum[]
  }

  /**
   * reviews findMany
   */
  export type reviewsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reviews
     */
    select?: reviewsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reviews
     */
    omit?: reviewsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reviewsInclude<ExtArgs> | null
    /**
     * Filter, which reviews to fetch.
     */
    where?: reviewsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of reviews to fetch.
     */
    orderBy?: reviewsOrderByWithRelationInput | reviewsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing reviews.
     */
    cursor?: reviewsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` reviews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` reviews.
     */
    skip?: number
    distinct?: ReviewsScalarFieldEnum | ReviewsScalarFieldEnum[]
  }

  /**
   * reviews create
   */
  export type reviewsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reviews
     */
    select?: reviewsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reviews
     */
    omit?: reviewsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reviewsInclude<ExtArgs> | null
    /**
     * The data needed to create a reviews.
     */
    data: XOR<reviewsCreateInput, reviewsUncheckedCreateInput>
  }

  /**
   * reviews createMany
   */
  export type reviewsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many reviews.
     */
    data: reviewsCreateManyInput | reviewsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * reviews update
   */
  export type reviewsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reviews
     */
    select?: reviewsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reviews
     */
    omit?: reviewsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reviewsInclude<ExtArgs> | null
    /**
     * The data needed to update a reviews.
     */
    data: XOR<reviewsUpdateInput, reviewsUncheckedUpdateInput>
    /**
     * Choose, which reviews to update.
     */
    where: reviewsWhereUniqueInput
  }

  /**
   * reviews updateMany
   */
  export type reviewsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update reviews.
     */
    data: XOR<reviewsUpdateManyMutationInput, reviewsUncheckedUpdateManyInput>
    /**
     * Filter which reviews to update
     */
    where?: reviewsWhereInput
    /**
     * Limit how many reviews to update.
     */
    limit?: number
  }

  /**
   * reviews upsert
   */
  export type reviewsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reviews
     */
    select?: reviewsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reviews
     */
    omit?: reviewsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reviewsInclude<ExtArgs> | null
    /**
     * The filter to search for the reviews to update in case it exists.
     */
    where: reviewsWhereUniqueInput
    /**
     * In case the reviews found by the `where` argument doesn't exist, create a new reviews with this data.
     */
    create: XOR<reviewsCreateInput, reviewsUncheckedCreateInput>
    /**
     * In case the reviews was found with the provided `where` argument, update it with this data.
     */
    update: XOR<reviewsUpdateInput, reviewsUncheckedUpdateInput>
  }

  /**
   * reviews delete
   */
  export type reviewsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reviews
     */
    select?: reviewsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reviews
     */
    omit?: reviewsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reviewsInclude<ExtArgs> | null
    /**
     * Filter which reviews to delete.
     */
    where: reviewsWhereUniqueInput
  }

  /**
   * reviews deleteMany
   */
  export type reviewsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which reviews to delete
     */
    where?: reviewsWhereInput
    /**
     * Limit how many reviews to delete.
     */
    limit?: number
  }

  /**
   * reviews without action
   */
  export type reviewsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reviews
     */
    select?: reviewsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reviews
     */
    omit?: reviewsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reviewsInclude<ExtArgs> | null
  }


  /**
   * Model payments
   */

  export type AggregatePayments = {
    _count: PaymentsCountAggregateOutputType | null
    _avg: PaymentsAvgAggregateOutputType | null
    _sum: PaymentsSumAggregateOutputType | null
    _min: PaymentsMinAggregateOutputType | null
    _max: PaymentsMaxAggregateOutputType | null
  }

  export type PaymentsAvgAggregateOutputType = {
    id: number | null
    order_id: number | null
    user_id: number | null
    amount: number | null
  }

  export type PaymentsSumAggregateOutputType = {
    id: number | null
    order_id: number | null
    user_id: number | null
    amount: number | null
  }

  export type PaymentsMinAggregateOutputType = {
    id: number | null
    uuid: string | null
    order_id: number | null
    user_id: number | null
    amount: number | null
    provider: string | null
    transaction_id: string | null
    status: $Enums.PaymentStatusEnum | null
    is_deleted: boolean | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type PaymentsMaxAggregateOutputType = {
    id: number | null
    uuid: string | null
    order_id: number | null
    user_id: number | null
    amount: number | null
    provider: string | null
    transaction_id: string | null
    status: $Enums.PaymentStatusEnum | null
    is_deleted: boolean | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type PaymentsCountAggregateOutputType = {
    id: number
    uuid: number
    order_id: number
    user_id: number
    amount: number
    provider: number
    transaction_id: number
    status: number
    items: number
    is_deleted: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type PaymentsAvgAggregateInputType = {
    id?: true
    order_id?: true
    user_id?: true
    amount?: true
  }

  export type PaymentsSumAggregateInputType = {
    id?: true
    order_id?: true
    user_id?: true
    amount?: true
  }

  export type PaymentsMinAggregateInputType = {
    id?: true
    uuid?: true
    order_id?: true
    user_id?: true
    amount?: true
    provider?: true
    transaction_id?: true
    status?: true
    is_deleted?: true
    created_at?: true
    updated_at?: true
  }

  export type PaymentsMaxAggregateInputType = {
    id?: true
    uuid?: true
    order_id?: true
    user_id?: true
    amount?: true
    provider?: true
    transaction_id?: true
    status?: true
    is_deleted?: true
    created_at?: true
    updated_at?: true
  }

  export type PaymentsCountAggregateInputType = {
    id?: true
    uuid?: true
    order_id?: true
    user_id?: true
    amount?: true
    provider?: true
    transaction_id?: true
    status?: true
    items?: true
    is_deleted?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type PaymentsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which payments to aggregate.
     */
    where?: paymentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of payments to fetch.
     */
    orderBy?: paymentsOrderByWithRelationInput | paymentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: paymentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` payments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` payments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned payments
    **/
    _count?: true | PaymentsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PaymentsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PaymentsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PaymentsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PaymentsMaxAggregateInputType
  }

  export type GetPaymentsAggregateType<T extends PaymentsAggregateArgs> = {
        [P in keyof T & keyof AggregatePayments]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePayments[P]>
      : GetScalarType<T[P], AggregatePayments[P]>
  }




  export type paymentsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: paymentsWhereInput
    orderBy?: paymentsOrderByWithAggregationInput | paymentsOrderByWithAggregationInput[]
    by: PaymentsScalarFieldEnum[] | PaymentsScalarFieldEnum
    having?: paymentsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PaymentsCountAggregateInputType | true
    _avg?: PaymentsAvgAggregateInputType
    _sum?: PaymentsSumAggregateInputType
    _min?: PaymentsMinAggregateInputType
    _max?: PaymentsMaxAggregateInputType
  }

  export type PaymentsGroupByOutputType = {
    id: number
    uuid: string
    order_id: number | null
    user_id: number
    amount: number
    provider: string
    transaction_id: string | null
    status: $Enums.PaymentStatusEnum
    items: JsonValue | null
    is_deleted: boolean
    created_at: Date
    updated_at: Date
    _count: PaymentsCountAggregateOutputType | null
    _avg: PaymentsAvgAggregateOutputType | null
    _sum: PaymentsSumAggregateOutputType | null
    _min: PaymentsMinAggregateOutputType | null
    _max: PaymentsMaxAggregateOutputType | null
  }

  type GetPaymentsGroupByPayload<T extends paymentsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PaymentsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PaymentsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PaymentsGroupByOutputType[P]>
            : GetScalarType<T[P], PaymentsGroupByOutputType[P]>
        }
      >
    >


  export type paymentsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    uuid?: boolean
    order_id?: boolean
    user_id?: boolean
    amount?: boolean
    provider?: boolean
    transaction_id?: boolean
    status?: boolean
    items?: boolean
    is_deleted?: boolean
    created_at?: boolean
    updated_at?: boolean
    order?: boolean | payments$orderArgs<ExtArgs>
    user?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["payments"]>



  export type paymentsSelectScalar = {
    id?: boolean
    uuid?: boolean
    order_id?: boolean
    user_id?: boolean
    amount?: boolean
    provider?: boolean
    transaction_id?: boolean
    status?: boolean
    items?: boolean
    is_deleted?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type paymentsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "uuid" | "order_id" | "user_id" | "amount" | "provider" | "transaction_id" | "status" | "items" | "is_deleted" | "created_at" | "updated_at", ExtArgs["result"]["payments"]>
  export type paymentsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order?: boolean | payments$orderArgs<ExtArgs>
    user?: boolean | usersDefaultArgs<ExtArgs>
  }

  export type $paymentsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "payments"
    objects: {
      order: Prisma.$ordersPayload<ExtArgs> | null
      user: Prisma.$usersPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      uuid: string
      order_id: number | null
      user_id: number
      amount: number
      provider: string
      transaction_id: string | null
      status: $Enums.PaymentStatusEnum
      items: Prisma.JsonValue | null
      is_deleted: boolean
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["payments"]>
    composites: {}
  }

  type paymentsGetPayload<S extends boolean | null | undefined | paymentsDefaultArgs> = $Result.GetResult<Prisma.$paymentsPayload, S>

  type paymentsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<paymentsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PaymentsCountAggregateInputType | true
    }

  export interface paymentsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['payments'], meta: { name: 'payments' } }
    /**
     * Find zero or one Payments that matches the filter.
     * @param {paymentsFindUniqueArgs} args - Arguments to find a Payments
     * @example
     * // Get one Payments
     * const payments = await prisma.payments.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends paymentsFindUniqueArgs>(args: SelectSubset<T, paymentsFindUniqueArgs<ExtArgs>>): Prisma__paymentsClient<$Result.GetResult<Prisma.$paymentsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Payments that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {paymentsFindUniqueOrThrowArgs} args - Arguments to find a Payments
     * @example
     * // Get one Payments
     * const payments = await prisma.payments.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends paymentsFindUniqueOrThrowArgs>(args: SelectSubset<T, paymentsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__paymentsClient<$Result.GetResult<Prisma.$paymentsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Payments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {paymentsFindFirstArgs} args - Arguments to find a Payments
     * @example
     * // Get one Payments
     * const payments = await prisma.payments.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends paymentsFindFirstArgs>(args?: SelectSubset<T, paymentsFindFirstArgs<ExtArgs>>): Prisma__paymentsClient<$Result.GetResult<Prisma.$paymentsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Payments that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {paymentsFindFirstOrThrowArgs} args - Arguments to find a Payments
     * @example
     * // Get one Payments
     * const payments = await prisma.payments.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends paymentsFindFirstOrThrowArgs>(args?: SelectSubset<T, paymentsFindFirstOrThrowArgs<ExtArgs>>): Prisma__paymentsClient<$Result.GetResult<Prisma.$paymentsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Payments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {paymentsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Payments
     * const payments = await prisma.payments.findMany()
     * 
     * // Get first 10 Payments
     * const payments = await prisma.payments.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const paymentsWithIdOnly = await prisma.payments.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends paymentsFindManyArgs>(args?: SelectSubset<T, paymentsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$paymentsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Payments.
     * @param {paymentsCreateArgs} args - Arguments to create a Payments.
     * @example
     * // Create one Payments
     * const Payments = await prisma.payments.create({
     *   data: {
     *     // ... data to create a Payments
     *   }
     * })
     * 
     */
    create<T extends paymentsCreateArgs>(args: SelectSubset<T, paymentsCreateArgs<ExtArgs>>): Prisma__paymentsClient<$Result.GetResult<Prisma.$paymentsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Payments.
     * @param {paymentsCreateManyArgs} args - Arguments to create many Payments.
     * @example
     * // Create many Payments
     * const payments = await prisma.payments.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends paymentsCreateManyArgs>(args?: SelectSubset<T, paymentsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Payments.
     * @param {paymentsDeleteArgs} args - Arguments to delete one Payments.
     * @example
     * // Delete one Payments
     * const Payments = await prisma.payments.delete({
     *   where: {
     *     // ... filter to delete one Payments
     *   }
     * })
     * 
     */
    delete<T extends paymentsDeleteArgs>(args: SelectSubset<T, paymentsDeleteArgs<ExtArgs>>): Prisma__paymentsClient<$Result.GetResult<Prisma.$paymentsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Payments.
     * @param {paymentsUpdateArgs} args - Arguments to update one Payments.
     * @example
     * // Update one Payments
     * const payments = await prisma.payments.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends paymentsUpdateArgs>(args: SelectSubset<T, paymentsUpdateArgs<ExtArgs>>): Prisma__paymentsClient<$Result.GetResult<Prisma.$paymentsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Payments.
     * @param {paymentsDeleteManyArgs} args - Arguments to filter Payments to delete.
     * @example
     * // Delete a few Payments
     * const { count } = await prisma.payments.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends paymentsDeleteManyArgs>(args?: SelectSubset<T, paymentsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Payments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {paymentsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Payments
     * const payments = await prisma.payments.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends paymentsUpdateManyArgs>(args: SelectSubset<T, paymentsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Payments.
     * @param {paymentsUpsertArgs} args - Arguments to update or create a Payments.
     * @example
     * // Update or create a Payments
     * const payments = await prisma.payments.upsert({
     *   create: {
     *     // ... data to create a Payments
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Payments we want to update
     *   }
     * })
     */
    upsert<T extends paymentsUpsertArgs>(args: SelectSubset<T, paymentsUpsertArgs<ExtArgs>>): Prisma__paymentsClient<$Result.GetResult<Prisma.$paymentsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Payments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {paymentsCountArgs} args - Arguments to filter Payments to count.
     * @example
     * // Count the number of Payments
     * const count = await prisma.payments.count({
     *   where: {
     *     // ... the filter for the Payments we want to count
     *   }
     * })
    **/
    count<T extends paymentsCountArgs>(
      args?: Subset<T, paymentsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PaymentsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Payments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PaymentsAggregateArgs>(args: Subset<T, PaymentsAggregateArgs>): Prisma.PrismaPromise<GetPaymentsAggregateType<T>>

    /**
     * Group by Payments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {paymentsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends paymentsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: paymentsGroupByArgs['orderBy'] }
        : { orderBy?: paymentsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, paymentsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPaymentsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the payments model
   */
  readonly fields: paymentsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for payments.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__paymentsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    order<T extends payments$orderArgs<ExtArgs> = {}>(args?: Subset<T, payments$orderArgs<ExtArgs>>): Prisma__ordersClient<$Result.GetResult<Prisma.$ordersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    user<T extends usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usersDefaultArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the payments model
   */
  interface paymentsFieldRefs {
    readonly id: FieldRef<"payments", 'Int'>
    readonly uuid: FieldRef<"payments", 'String'>
    readonly order_id: FieldRef<"payments", 'Int'>
    readonly user_id: FieldRef<"payments", 'Int'>
    readonly amount: FieldRef<"payments", 'Float'>
    readonly provider: FieldRef<"payments", 'String'>
    readonly transaction_id: FieldRef<"payments", 'String'>
    readonly status: FieldRef<"payments", 'PaymentStatusEnum'>
    readonly items: FieldRef<"payments", 'Json'>
    readonly is_deleted: FieldRef<"payments", 'Boolean'>
    readonly created_at: FieldRef<"payments", 'DateTime'>
    readonly updated_at: FieldRef<"payments", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * payments findUnique
   */
  export type paymentsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the payments
     */
    select?: paymentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the payments
     */
    omit?: paymentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: paymentsInclude<ExtArgs> | null
    /**
     * Filter, which payments to fetch.
     */
    where: paymentsWhereUniqueInput
  }

  /**
   * payments findUniqueOrThrow
   */
  export type paymentsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the payments
     */
    select?: paymentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the payments
     */
    omit?: paymentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: paymentsInclude<ExtArgs> | null
    /**
     * Filter, which payments to fetch.
     */
    where: paymentsWhereUniqueInput
  }

  /**
   * payments findFirst
   */
  export type paymentsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the payments
     */
    select?: paymentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the payments
     */
    omit?: paymentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: paymentsInclude<ExtArgs> | null
    /**
     * Filter, which payments to fetch.
     */
    where?: paymentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of payments to fetch.
     */
    orderBy?: paymentsOrderByWithRelationInput | paymentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for payments.
     */
    cursor?: paymentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` payments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` payments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of payments.
     */
    distinct?: PaymentsScalarFieldEnum | PaymentsScalarFieldEnum[]
  }

  /**
   * payments findFirstOrThrow
   */
  export type paymentsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the payments
     */
    select?: paymentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the payments
     */
    omit?: paymentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: paymentsInclude<ExtArgs> | null
    /**
     * Filter, which payments to fetch.
     */
    where?: paymentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of payments to fetch.
     */
    orderBy?: paymentsOrderByWithRelationInput | paymentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for payments.
     */
    cursor?: paymentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` payments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` payments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of payments.
     */
    distinct?: PaymentsScalarFieldEnum | PaymentsScalarFieldEnum[]
  }

  /**
   * payments findMany
   */
  export type paymentsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the payments
     */
    select?: paymentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the payments
     */
    omit?: paymentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: paymentsInclude<ExtArgs> | null
    /**
     * Filter, which payments to fetch.
     */
    where?: paymentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of payments to fetch.
     */
    orderBy?: paymentsOrderByWithRelationInput | paymentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing payments.
     */
    cursor?: paymentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` payments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` payments.
     */
    skip?: number
    distinct?: PaymentsScalarFieldEnum | PaymentsScalarFieldEnum[]
  }

  /**
   * payments create
   */
  export type paymentsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the payments
     */
    select?: paymentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the payments
     */
    omit?: paymentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: paymentsInclude<ExtArgs> | null
    /**
     * The data needed to create a payments.
     */
    data: XOR<paymentsCreateInput, paymentsUncheckedCreateInput>
  }

  /**
   * payments createMany
   */
  export type paymentsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many payments.
     */
    data: paymentsCreateManyInput | paymentsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * payments update
   */
  export type paymentsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the payments
     */
    select?: paymentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the payments
     */
    omit?: paymentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: paymentsInclude<ExtArgs> | null
    /**
     * The data needed to update a payments.
     */
    data: XOR<paymentsUpdateInput, paymentsUncheckedUpdateInput>
    /**
     * Choose, which payments to update.
     */
    where: paymentsWhereUniqueInput
  }

  /**
   * payments updateMany
   */
  export type paymentsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update payments.
     */
    data: XOR<paymentsUpdateManyMutationInput, paymentsUncheckedUpdateManyInput>
    /**
     * Filter which payments to update
     */
    where?: paymentsWhereInput
    /**
     * Limit how many payments to update.
     */
    limit?: number
  }

  /**
   * payments upsert
   */
  export type paymentsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the payments
     */
    select?: paymentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the payments
     */
    omit?: paymentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: paymentsInclude<ExtArgs> | null
    /**
     * The filter to search for the payments to update in case it exists.
     */
    where: paymentsWhereUniqueInput
    /**
     * In case the payments found by the `where` argument doesn't exist, create a new payments with this data.
     */
    create: XOR<paymentsCreateInput, paymentsUncheckedCreateInput>
    /**
     * In case the payments was found with the provided `where` argument, update it with this data.
     */
    update: XOR<paymentsUpdateInput, paymentsUncheckedUpdateInput>
  }

  /**
   * payments delete
   */
  export type paymentsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the payments
     */
    select?: paymentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the payments
     */
    omit?: paymentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: paymentsInclude<ExtArgs> | null
    /**
     * Filter which payments to delete.
     */
    where: paymentsWhereUniqueInput
  }

  /**
   * payments deleteMany
   */
  export type paymentsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which payments to delete
     */
    where?: paymentsWhereInput
    /**
     * Limit how many payments to delete.
     */
    limit?: number
  }

  /**
   * payments.order
   */
  export type payments$orderArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the orders
     */
    select?: ordersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the orders
     */
    omit?: ordersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordersInclude<ExtArgs> | null
    where?: ordersWhereInput
  }

  /**
   * payments without action
   */
  export type paymentsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the payments
     */
    select?: paymentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the payments
     */
    omit?: paymentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: paymentsInclude<ExtArgs> | null
  }


  /**
   * Model email_blacklist
   */

  export type AggregateEmail_blacklist = {
    _count: Email_blacklistCountAggregateOutputType | null
    _avg: Email_blacklistAvgAggregateOutputType | null
    _sum: Email_blacklistSumAggregateOutputType | null
    _min: Email_blacklistMinAggregateOutputType | null
    _max: Email_blacklistMaxAggregateOutputType | null
  }

  export type Email_blacklistAvgAggregateOutputType = {
    id: number | null
  }

  export type Email_blacklistSumAggregateOutputType = {
    id: number | null
  }

  export type Email_blacklistMinAggregateOutputType = {
    id: number | null
    email: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Email_blacklistMaxAggregateOutputType = {
    id: number | null
    email: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Email_blacklistCountAggregateOutputType = {
    id: number
    email: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type Email_blacklistAvgAggregateInputType = {
    id?: true
  }

  export type Email_blacklistSumAggregateInputType = {
    id?: true
  }

  export type Email_blacklistMinAggregateInputType = {
    id?: true
    email?: true
    created_at?: true
    updated_at?: true
  }

  export type Email_blacklistMaxAggregateInputType = {
    id?: true
    email?: true
    created_at?: true
    updated_at?: true
  }

  export type Email_blacklistCountAggregateInputType = {
    id?: true
    email?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type Email_blacklistAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which email_blacklist to aggregate.
     */
    where?: email_blacklistWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of email_blacklists to fetch.
     */
    orderBy?: email_blacklistOrderByWithRelationInput | email_blacklistOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: email_blacklistWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` email_blacklists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` email_blacklists.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned email_blacklists
    **/
    _count?: true | Email_blacklistCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Email_blacklistAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Email_blacklistSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Email_blacklistMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Email_blacklistMaxAggregateInputType
  }

  export type GetEmail_blacklistAggregateType<T extends Email_blacklistAggregateArgs> = {
        [P in keyof T & keyof AggregateEmail_blacklist]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEmail_blacklist[P]>
      : GetScalarType<T[P], AggregateEmail_blacklist[P]>
  }




  export type email_blacklistGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: email_blacklistWhereInput
    orderBy?: email_blacklistOrderByWithAggregationInput | email_blacklistOrderByWithAggregationInput[]
    by: Email_blacklistScalarFieldEnum[] | Email_blacklistScalarFieldEnum
    having?: email_blacklistScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Email_blacklistCountAggregateInputType | true
    _avg?: Email_blacklistAvgAggregateInputType
    _sum?: Email_blacklistSumAggregateInputType
    _min?: Email_blacklistMinAggregateInputType
    _max?: Email_blacklistMaxAggregateInputType
  }

  export type Email_blacklistGroupByOutputType = {
    id: number
    email: string
    created_at: Date
    updated_at: Date
    _count: Email_blacklistCountAggregateOutputType | null
    _avg: Email_blacklistAvgAggregateOutputType | null
    _sum: Email_blacklistSumAggregateOutputType | null
    _min: Email_blacklistMinAggregateOutputType | null
    _max: Email_blacklistMaxAggregateOutputType | null
  }

  type GetEmail_blacklistGroupByPayload<T extends email_blacklistGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Email_blacklistGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Email_blacklistGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Email_blacklistGroupByOutputType[P]>
            : GetScalarType<T[P], Email_blacklistGroupByOutputType[P]>
        }
      >
    >


  export type email_blacklistSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["email_blacklist"]>



  export type email_blacklistSelectScalar = {
    id?: boolean
    email?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type email_blacklistOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "email" | "created_at" | "updated_at", ExtArgs["result"]["email_blacklist"]>

  export type $email_blacklistPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "email_blacklist"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      email: string
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["email_blacklist"]>
    composites: {}
  }

  type email_blacklistGetPayload<S extends boolean | null | undefined | email_blacklistDefaultArgs> = $Result.GetResult<Prisma.$email_blacklistPayload, S>

  type email_blacklistCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<email_blacklistFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Email_blacklistCountAggregateInputType | true
    }

  export interface email_blacklistDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['email_blacklist'], meta: { name: 'email_blacklist' } }
    /**
     * Find zero or one Email_blacklist that matches the filter.
     * @param {email_blacklistFindUniqueArgs} args - Arguments to find a Email_blacklist
     * @example
     * // Get one Email_blacklist
     * const email_blacklist = await prisma.email_blacklist.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends email_blacklistFindUniqueArgs>(args: SelectSubset<T, email_blacklistFindUniqueArgs<ExtArgs>>): Prisma__email_blacklistClient<$Result.GetResult<Prisma.$email_blacklistPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Email_blacklist that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {email_blacklistFindUniqueOrThrowArgs} args - Arguments to find a Email_blacklist
     * @example
     * // Get one Email_blacklist
     * const email_blacklist = await prisma.email_blacklist.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends email_blacklistFindUniqueOrThrowArgs>(args: SelectSubset<T, email_blacklistFindUniqueOrThrowArgs<ExtArgs>>): Prisma__email_blacklistClient<$Result.GetResult<Prisma.$email_blacklistPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Email_blacklist that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {email_blacklistFindFirstArgs} args - Arguments to find a Email_blacklist
     * @example
     * // Get one Email_blacklist
     * const email_blacklist = await prisma.email_blacklist.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends email_blacklistFindFirstArgs>(args?: SelectSubset<T, email_blacklistFindFirstArgs<ExtArgs>>): Prisma__email_blacklistClient<$Result.GetResult<Prisma.$email_blacklistPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Email_blacklist that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {email_blacklistFindFirstOrThrowArgs} args - Arguments to find a Email_blacklist
     * @example
     * // Get one Email_blacklist
     * const email_blacklist = await prisma.email_blacklist.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends email_blacklistFindFirstOrThrowArgs>(args?: SelectSubset<T, email_blacklistFindFirstOrThrowArgs<ExtArgs>>): Prisma__email_blacklistClient<$Result.GetResult<Prisma.$email_blacklistPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Email_blacklists that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {email_blacklistFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Email_blacklists
     * const email_blacklists = await prisma.email_blacklist.findMany()
     * 
     * // Get first 10 Email_blacklists
     * const email_blacklists = await prisma.email_blacklist.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const email_blacklistWithIdOnly = await prisma.email_blacklist.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends email_blacklistFindManyArgs>(args?: SelectSubset<T, email_blacklistFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$email_blacklistPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Email_blacklist.
     * @param {email_blacklistCreateArgs} args - Arguments to create a Email_blacklist.
     * @example
     * // Create one Email_blacklist
     * const Email_blacklist = await prisma.email_blacklist.create({
     *   data: {
     *     // ... data to create a Email_blacklist
     *   }
     * })
     * 
     */
    create<T extends email_blacklistCreateArgs>(args: SelectSubset<T, email_blacklistCreateArgs<ExtArgs>>): Prisma__email_blacklistClient<$Result.GetResult<Prisma.$email_blacklistPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Email_blacklists.
     * @param {email_blacklistCreateManyArgs} args - Arguments to create many Email_blacklists.
     * @example
     * // Create many Email_blacklists
     * const email_blacklist = await prisma.email_blacklist.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends email_blacklistCreateManyArgs>(args?: SelectSubset<T, email_blacklistCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Email_blacklist.
     * @param {email_blacklistDeleteArgs} args - Arguments to delete one Email_blacklist.
     * @example
     * // Delete one Email_blacklist
     * const Email_blacklist = await prisma.email_blacklist.delete({
     *   where: {
     *     // ... filter to delete one Email_blacklist
     *   }
     * })
     * 
     */
    delete<T extends email_blacklistDeleteArgs>(args: SelectSubset<T, email_blacklistDeleteArgs<ExtArgs>>): Prisma__email_blacklistClient<$Result.GetResult<Prisma.$email_blacklistPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Email_blacklist.
     * @param {email_blacklistUpdateArgs} args - Arguments to update one Email_blacklist.
     * @example
     * // Update one Email_blacklist
     * const email_blacklist = await prisma.email_blacklist.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends email_blacklistUpdateArgs>(args: SelectSubset<T, email_blacklistUpdateArgs<ExtArgs>>): Prisma__email_blacklistClient<$Result.GetResult<Prisma.$email_blacklistPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Email_blacklists.
     * @param {email_blacklistDeleteManyArgs} args - Arguments to filter Email_blacklists to delete.
     * @example
     * // Delete a few Email_blacklists
     * const { count } = await prisma.email_blacklist.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends email_blacklistDeleteManyArgs>(args?: SelectSubset<T, email_blacklistDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Email_blacklists.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {email_blacklistUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Email_blacklists
     * const email_blacklist = await prisma.email_blacklist.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends email_blacklistUpdateManyArgs>(args: SelectSubset<T, email_blacklistUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Email_blacklist.
     * @param {email_blacklistUpsertArgs} args - Arguments to update or create a Email_blacklist.
     * @example
     * // Update or create a Email_blacklist
     * const email_blacklist = await prisma.email_blacklist.upsert({
     *   create: {
     *     // ... data to create a Email_blacklist
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Email_blacklist we want to update
     *   }
     * })
     */
    upsert<T extends email_blacklistUpsertArgs>(args: SelectSubset<T, email_blacklistUpsertArgs<ExtArgs>>): Prisma__email_blacklistClient<$Result.GetResult<Prisma.$email_blacklistPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Email_blacklists.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {email_blacklistCountArgs} args - Arguments to filter Email_blacklists to count.
     * @example
     * // Count the number of Email_blacklists
     * const count = await prisma.email_blacklist.count({
     *   where: {
     *     // ... the filter for the Email_blacklists we want to count
     *   }
     * })
    **/
    count<T extends email_blacklistCountArgs>(
      args?: Subset<T, email_blacklistCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Email_blacklistCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Email_blacklist.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Email_blacklistAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Email_blacklistAggregateArgs>(args: Subset<T, Email_blacklistAggregateArgs>): Prisma.PrismaPromise<GetEmail_blacklistAggregateType<T>>

    /**
     * Group by Email_blacklist.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {email_blacklistGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends email_blacklistGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: email_blacklistGroupByArgs['orderBy'] }
        : { orderBy?: email_blacklistGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, email_blacklistGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEmail_blacklistGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the email_blacklist model
   */
  readonly fields: email_blacklistFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for email_blacklist.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__email_blacklistClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the email_blacklist model
   */
  interface email_blacklistFieldRefs {
    readonly id: FieldRef<"email_blacklist", 'Int'>
    readonly email: FieldRef<"email_blacklist", 'String'>
    readonly created_at: FieldRef<"email_blacklist", 'DateTime'>
    readonly updated_at: FieldRef<"email_blacklist", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * email_blacklist findUnique
   */
  export type email_blacklistFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the email_blacklist
     */
    select?: email_blacklistSelect<ExtArgs> | null
    /**
     * Omit specific fields from the email_blacklist
     */
    omit?: email_blacklistOmit<ExtArgs> | null
    /**
     * Filter, which email_blacklist to fetch.
     */
    where: email_blacklistWhereUniqueInput
  }

  /**
   * email_blacklist findUniqueOrThrow
   */
  export type email_blacklistFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the email_blacklist
     */
    select?: email_blacklistSelect<ExtArgs> | null
    /**
     * Omit specific fields from the email_blacklist
     */
    omit?: email_blacklistOmit<ExtArgs> | null
    /**
     * Filter, which email_blacklist to fetch.
     */
    where: email_blacklistWhereUniqueInput
  }

  /**
   * email_blacklist findFirst
   */
  export type email_blacklistFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the email_blacklist
     */
    select?: email_blacklistSelect<ExtArgs> | null
    /**
     * Omit specific fields from the email_blacklist
     */
    omit?: email_blacklistOmit<ExtArgs> | null
    /**
     * Filter, which email_blacklist to fetch.
     */
    where?: email_blacklistWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of email_blacklists to fetch.
     */
    orderBy?: email_blacklistOrderByWithRelationInput | email_blacklistOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for email_blacklists.
     */
    cursor?: email_blacklistWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` email_blacklists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` email_blacklists.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of email_blacklists.
     */
    distinct?: Email_blacklistScalarFieldEnum | Email_blacklistScalarFieldEnum[]
  }

  /**
   * email_blacklist findFirstOrThrow
   */
  export type email_blacklistFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the email_blacklist
     */
    select?: email_blacklistSelect<ExtArgs> | null
    /**
     * Omit specific fields from the email_blacklist
     */
    omit?: email_blacklistOmit<ExtArgs> | null
    /**
     * Filter, which email_blacklist to fetch.
     */
    where?: email_blacklistWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of email_blacklists to fetch.
     */
    orderBy?: email_blacklistOrderByWithRelationInput | email_blacklistOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for email_blacklists.
     */
    cursor?: email_blacklistWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` email_blacklists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` email_blacklists.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of email_blacklists.
     */
    distinct?: Email_blacklistScalarFieldEnum | Email_blacklistScalarFieldEnum[]
  }

  /**
   * email_blacklist findMany
   */
  export type email_blacklistFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the email_blacklist
     */
    select?: email_blacklistSelect<ExtArgs> | null
    /**
     * Omit specific fields from the email_blacklist
     */
    omit?: email_blacklistOmit<ExtArgs> | null
    /**
     * Filter, which email_blacklists to fetch.
     */
    where?: email_blacklistWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of email_blacklists to fetch.
     */
    orderBy?: email_blacklistOrderByWithRelationInput | email_blacklistOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing email_blacklists.
     */
    cursor?: email_blacklistWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` email_blacklists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` email_blacklists.
     */
    skip?: number
    distinct?: Email_blacklistScalarFieldEnum | Email_blacklistScalarFieldEnum[]
  }

  /**
   * email_blacklist create
   */
  export type email_blacklistCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the email_blacklist
     */
    select?: email_blacklistSelect<ExtArgs> | null
    /**
     * Omit specific fields from the email_blacklist
     */
    omit?: email_blacklistOmit<ExtArgs> | null
    /**
     * The data needed to create a email_blacklist.
     */
    data: XOR<email_blacklistCreateInput, email_blacklistUncheckedCreateInput>
  }

  /**
   * email_blacklist createMany
   */
  export type email_blacklistCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many email_blacklists.
     */
    data: email_blacklistCreateManyInput | email_blacklistCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * email_blacklist update
   */
  export type email_blacklistUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the email_blacklist
     */
    select?: email_blacklistSelect<ExtArgs> | null
    /**
     * Omit specific fields from the email_blacklist
     */
    omit?: email_blacklistOmit<ExtArgs> | null
    /**
     * The data needed to update a email_blacklist.
     */
    data: XOR<email_blacklistUpdateInput, email_blacklistUncheckedUpdateInput>
    /**
     * Choose, which email_blacklist to update.
     */
    where: email_blacklistWhereUniqueInput
  }

  /**
   * email_blacklist updateMany
   */
  export type email_blacklistUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update email_blacklists.
     */
    data: XOR<email_blacklistUpdateManyMutationInput, email_blacklistUncheckedUpdateManyInput>
    /**
     * Filter which email_blacklists to update
     */
    where?: email_blacklistWhereInput
    /**
     * Limit how many email_blacklists to update.
     */
    limit?: number
  }

  /**
   * email_blacklist upsert
   */
  export type email_blacklistUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the email_blacklist
     */
    select?: email_blacklistSelect<ExtArgs> | null
    /**
     * Omit specific fields from the email_blacklist
     */
    omit?: email_blacklistOmit<ExtArgs> | null
    /**
     * The filter to search for the email_blacklist to update in case it exists.
     */
    where: email_blacklistWhereUniqueInput
    /**
     * In case the email_blacklist found by the `where` argument doesn't exist, create a new email_blacklist with this data.
     */
    create: XOR<email_blacklistCreateInput, email_blacklistUncheckedCreateInput>
    /**
     * In case the email_blacklist was found with the provided `where` argument, update it with this data.
     */
    update: XOR<email_blacklistUpdateInput, email_blacklistUncheckedUpdateInput>
  }

  /**
   * email_blacklist delete
   */
  export type email_blacklistDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the email_blacklist
     */
    select?: email_blacklistSelect<ExtArgs> | null
    /**
     * Omit specific fields from the email_blacklist
     */
    omit?: email_blacklistOmit<ExtArgs> | null
    /**
     * Filter which email_blacklist to delete.
     */
    where: email_blacklistWhereUniqueInput
  }

  /**
   * email_blacklist deleteMany
   */
  export type email_blacklistDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which email_blacklists to delete
     */
    where?: email_blacklistWhereInput
    /**
     * Limit how many email_blacklists to delete.
     */
    limit?: number
  }

  /**
   * email_blacklist without action
   */
  export type email_blacklistDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the email_blacklist
     */
    select?: email_blacklistSelect<ExtArgs> | null
    /**
     * Omit specific fields from the email_blacklist
     */
    omit?: email_blacklistOmit<ExtArgs> | null
  }


  /**
   * Model conversations
   */

  export type AggregateConversations = {
    _count: ConversationsCountAggregateOutputType | null
    _avg: ConversationsAvgAggregateOutputType | null
    _sum: ConversationsSumAggregateOutputType | null
    _min: ConversationsMinAggregateOutputType | null
    _max: ConversationsMaxAggregateOutputType | null
  }

  export type ConversationsAvgAggregateOutputType = {
    id: number | null
    user_id: number | null
  }

  export type ConversationsSumAggregateOutputType = {
    id: number | null
    user_id: number | null
  }

  export type ConversationsMinAggregateOutputType = {
    id: number | null
    chat_id: string | null
    title: string | null
    started_at: Date | null
    user_id: number | null
  }

  export type ConversationsMaxAggregateOutputType = {
    id: number | null
    chat_id: string | null
    title: string | null
    started_at: Date | null
    user_id: number | null
  }

  export type ConversationsCountAggregateOutputType = {
    id: number
    chat_id: number
    title: number
    started_at: number
    user_id: number
    _all: number
  }


  export type ConversationsAvgAggregateInputType = {
    id?: true
    user_id?: true
  }

  export type ConversationsSumAggregateInputType = {
    id?: true
    user_id?: true
  }

  export type ConversationsMinAggregateInputType = {
    id?: true
    chat_id?: true
    title?: true
    started_at?: true
    user_id?: true
  }

  export type ConversationsMaxAggregateInputType = {
    id?: true
    chat_id?: true
    title?: true
    started_at?: true
    user_id?: true
  }

  export type ConversationsCountAggregateInputType = {
    id?: true
    chat_id?: true
    title?: true
    started_at?: true
    user_id?: true
    _all?: true
  }

  export type ConversationsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which conversations to aggregate.
     */
    where?: conversationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of conversations to fetch.
     */
    orderBy?: conversationsOrderByWithRelationInput | conversationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: conversationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` conversations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` conversations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned conversations
    **/
    _count?: true | ConversationsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ConversationsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ConversationsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ConversationsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ConversationsMaxAggregateInputType
  }

  export type GetConversationsAggregateType<T extends ConversationsAggregateArgs> = {
        [P in keyof T & keyof AggregateConversations]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateConversations[P]>
      : GetScalarType<T[P], AggregateConversations[P]>
  }




  export type conversationsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: conversationsWhereInput
    orderBy?: conversationsOrderByWithAggregationInput | conversationsOrderByWithAggregationInput[]
    by: ConversationsScalarFieldEnum[] | ConversationsScalarFieldEnum
    having?: conversationsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ConversationsCountAggregateInputType | true
    _avg?: ConversationsAvgAggregateInputType
    _sum?: ConversationsSumAggregateInputType
    _min?: ConversationsMinAggregateInputType
    _max?: ConversationsMaxAggregateInputType
  }

  export type ConversationsGroupByOutputType = {
    id: number
    chat_id: string
    title: string | null
    started_at: Date
    user_id: number
    _count: ConversationsCountAggregateOutputType | null
    _avg: ConversationsAvgAggregateOutputType | null
    _sum: ConversationsSumAggregateOutputType | null
    _min: ConversationsMinAggregateOutputType | null
    _max: ConversationsMaxAggregateOutputType | null
  }

  type GetConversationsGroupByPayload<T extends conversationsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ConversationsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ConversationsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ConversationsGroupByOutputType[P]>
            : GetScalarType<T[P], ConversationsGroupByOutputType[P]>
        }
      >
    >


  export type conversationsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    chat_id?: boolean
    title?: boolean
    started_at?: boolean
    user_id?: boolean
    user?: boolean | usersDefaultArgs<ExtArgs>
    messages?: boolean | conversations$messagesArgs<ExtArgs>
    _count?: boolean | ConversationsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["conversations"]>



  export type conversationsSelectScalar = {
    id?: boolean
    chat_id?: boolean
    title?: boolean
    started_at?: boolean
    user_id?: boolean
  }

  export type conversationsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "chat_id" | "title" | "started_at" | "user_id", ExtArgs["result"]["conversations"]>
  export type conversationsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | usersDefaultArgs<ExtArgs>
    messages?: boolean | conversations$messagesArgs<ExtArgs>
    _count?: boolean | ConversationsCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $conversationsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "conversations"
    objects: {
      user: Prisma.$usersPayload<ExtArgs>
      messages: Prisma.$messagesPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      chat_id: string
      title: string | null
      started_at: Date
      user_id: number
    }, ExtArgs["result"]["conversations"]>
    composites: {}
  }

  type conversationsGetPayload<S extends boolean | null | undefined | conversationsDefaultArgs> = $Result.GetResult<Prisma.$conversationsPayload, S>

  type conversationsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<conversationsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ConversationsCountAggregateInputType | true
    }

  export interface conversationsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['conversations'], meta: { name: 'conversations' } }
    /**
     * Find zero or one Conversations that matches the filter.
     * @param {conversationsFindUniqueArgs} args - Arguments to find a Conversations
     * @example
     * // Get one Conversations
     * const conversations = await prisma.conversations.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends conversationsFindUniqueArgs>(args: SelectSubset<T, conversationsFindUniqueArgs<ExtArgs>>): Prisma__conversationsClient<$Result.GetResult<Prisma.$conversationsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Conversations that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {conversationsFindUniqueOrThrowArgs} args - Arguments to find a Conversations
     * @example
     * // Get one Conversations
     * const conversations = await prisma.conversations.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends conversationsFindUniqueOrThrowArgs>(args: SelectSubset<T, conversationsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__conversationsClient<$Result.GetResult<Prisma.$conversationsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Conversations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {conversationsFindFirstArgs} args - Arguments to find a Conversations
     * @example
     * // Get one Conversations
     * const conversations = await prisma.conversations.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends conversationsFindFirstArgs>(args?: SelectSubset<T, conversationsFindFirstArgs<ExtArgs>>): Prisma__conversationsClient<$Result.GetResult<Prisma.$conversationsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Conversations that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {conversationsFindFirstOrThrowArgs} args - Arguments to find a Conversations
     * @example
     * // Get one Conversations
     * const conversations = await prisma.conversations.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends conversationsFindFirstOrThrowArgs>(args?: SelectSubset<T, conversationsFindFirstOrThrowArgs<ExtArgs>>): Prisma__conversationsClient<$Result.GetResult<Prisma.$conversationsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Conversations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {conversationsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Conversations
     * const conversations = await prisma.conversations.findMany()
     * 
     * // Get first 10 Conversations
     * const conversations = await prisma.conversations.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const conversationsWithIdOnly = await prisma.conversations.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends conversationsFindManyArgs>(args?: SelectSubset<T, conversationsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$conversationsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Conversations.
     * @param {conversationsCreateArgs} args - Arguments to create a Conversations.
     * @example
     * // Create one Conversations
     * const Conversations = await prisma.conversations.create({
     *   data: {
     *     // ... data to create a Conversations
     *   }
     * })
     * 
     */
    create<T extends conversationsCreateArgs>(args: SelectSubset<T, conversationsCreateArgs<ExtArgs>>): Prisma__conversationsClient<$Result.GetResult<Prisma.$conversationsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Conversations.
     * @param {conversationsCreateManyArgs} args - Arguments to create many Conversations.
     * @example
     * // Create many Conversations
     * const conversations = await prisma.conversations.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends conversationsCreateManyArgs>(args?: SelectSubset<T, conversationsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Conversations.
     * @param {conversationsDeleteArgs} args - Arguments to delete one Conversations.
     * @example
     * // Delete one Conversations
     * const Conversations = await prisma.conversations.delete({
     *   where: {
     *     // ... filter to delete one Conversations
     *   }
     * })
     * 
     */
    delete<T extends conversationsDeleteArgs>(args: SelectSubset<T, conversationsDeleteArgs<ExtArgs>>): Prisma__conversationsClient<$Result.GetResult<Prisma.$conversationsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Conversations.
     * @param {conversationsUpdateArgs} args - Arguments to update one Conversations.
     * @example
     * // Update one Conversations
     * const conversations = await prisma.conversations.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends conversationsUpdateArgs>(args: SelectSubset<T, conversationsUpdateArgs<ExtArgs>>): Prisma__conversationsClient<$Result.GetResult<Prisma.$conversationsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Conversations.
     * @param {conversationsDeleteManyArgs} args - Arguments to filter Conversations to delete.
     * @example
     * // Delete a few Conversations
     * const { count } = await prisma.conversations.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends conversationsDeleteManyArgs>(args?: SelectSubset<T, conversationsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Conversations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {conversationsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Conversations
     * const conversations = await prisma.conversations.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends conversationsUpdateManyArgs>(args: SelectSubset<T, conversationsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Conversations.
     * @param {conversationsUpsertArgs} args - Arguments to update or create a Conversations.
     * @example
     * // Update or create a Conversations
     * const conversations = await prisma.conversations.upsert({
     *   create: {
     *     // ... data to create a Conversations
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Conversations we want to update
     *   }
     * })
     */
    upsert<T extends conversationsUpsertArgs>(args: SelectSubset<T, conversationsUpsertArgs<ExtArgs>>): Prisma__conversationsClient<$Result.GetResult<Prisma.$conversationsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Conversations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {conversationsCountArgs} args - Arguments to filter Conversations to count.
     * @example
     * // Count the number of Conversations
     * const count = await prisma.conversations.count({
     *   where: {
     *     // ... the filter for the Conversations we want to count
     *   }
     * })
    **/
    count<T extends conversationsCountArgs>(
      args?: Subset<T, conversationsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ConversationsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Conversations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConversationsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ConversationsAggregateArgs>(args: Subset<T, ConversationsAggregateArgs>): Prisma.PrismaPromise<GetConversationsAggregateType<T>>

    /**
     * Group by Conversations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {conversationsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends conversationsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: conversationsGroupByArgs['orderBy'] }
        : { orderBy?: conversationsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, conversationsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetConversationsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the conversations model
   */
  readonly fields: conversationsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for conversations.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__conversationsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usersDefaultArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    messages<T extends conversations$messagesArgs<ExtArgs> = {}>(args?: Subset<T, conversations$messagesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$messagesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the conversations model
   */
  interface conversationsFieldRefs {
    readonly id: FieldRef<"conversations", 'Int'>
    readonly chat_id: FieldRef<"conversations", 'String'>
    readonly title: FieldRef<"conversations", 'String'>
    readonly started_at: FieldRef<"conversations", 'DateTime'>
    readonly user_id: FieldRef<"conversations", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * conversations findUnique
   */
  export type conversationsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the conversations
     */
    select?: conversationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the conversations
     */
    omit?: conversationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: conversationsInclude<ExtArgs> | null
    /**
     * Filter, which conversations to fetch.
     */
    where: conversationsWhereUniqueInput
  }

  /**
   * conversations findUniqueOrThrow
   */
  export type conversationsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the conversations
     */
    select?: conversationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the conversations
     */
    omit?: conversationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: conversationsInclude<ExtArgs> | null
    /**
     * Filter, which conversations to fetch.
     */
    where: conversationsWhereUniqueInput
  }

  /**
   * conversations findFirst
   */
  export type conversationsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the conversations
     */
    select?: conversationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the conversations
     */
    omit?: conversationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: conversationsInclude<ExtArgs> | null
    /**
     * Filter, which conversations to fetch.
     */
    where?: conversationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of conversations to fetch.
     */
    orderBy?: conversationsOrderByWithRelationInput | conversationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for conversations.
     */
    cursor?: conversationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` conversations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` conversations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of conversations.
     */
    distinct?: ConversationsScalarFieldEnum | ConversationsScalarFieldEnum[]
  }

  /**
   * conversations findFirstOrThrow
   */
  export type conversationsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the conversations
     */
    select?: conversationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the conversations
     */
    omit?: conversationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: conversationsInclude<ExtArgs> | null
    /**
     * Filter, which conversations to fetch.
     */
    where?: conversationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of conversations to fetch.
     */
    orderBy?: conversationsOrderByWithRelationInput | conversationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for conversations.
     */
    cursor?: conversationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` conversations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` conversations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of conversations.
     */
    distinct?: ConversationsScalarFieldEnum | ConversationsScalarFieldEnum[]
  }

  /**
   * conversations findMany
   */
  export type conversationsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the conversations
     */
    select?: conversationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the conversations
     */
    omit?: conversationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: conversationsInclude<ExtArgs> | null
    /**
     * Filter, which conversations to fetch.
     */
    where?: conversationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of conversations to fetch.
     */
    orderBy?: conversationsOrderByWithRelationInput | conversationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing conversations.
     */
    cursor?: conversationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` conversations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` conversations.
     */
    skip?: number
    distinct?: ConversationsScalarFieldEnum | ConversationsScalarFieldEnum[]
  }

  /**
   * conversations create
   */
  export type conversationsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the conversations
     */
    select?: conversationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the conversations
     */
    omit?: conversationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: conversationsInclude<ExtArgs> | null
    /**
     * The data needed to create a conversations.
     */
    data: XOR<conversationsCreateInput, conversationsUncheckedCreateInput>
  }

  /**
   * conversations createMany
   */
  export type conversationsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many conversations.
     */
    data: conversationsCreateManyInput | conversationsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * conversations update
   */
  export type conversationsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the conversations
     */
    select?: conversationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the conversations
     */
    omit?: conversationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: conversationsInclude<ExtArgs> | null
    /**
     * The data needed to update a conversations.
     */
    data: XOR<conversationsUpdateInput, conversationsUncheckedUpdateInput>
    /**
     * Choose, which conversations to update.
     */
    where: conversationsWhereUniqueInput
  }

  /**
   * conversations updateMany
   */
  export type conversationsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update conversations.
     */
    data: XOR<conversationsUpdateManyMutationInput, conversationsUncheckedUpdateManyInput>
    /**
     * Filter which conversations to update
     */
    where?: conversationsWhereInput
    /**
     * Limit how many conversations to update.
     */
    limit?: number
  }

  /**
   * conversations upsert
   */
  export type conversationsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the conversations
     */
    select?: conversationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the conversations
     */
    omit?: conversationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: conversationsInclude<ExtArgs> | null
    /**
     * The filter to search for the conversations to update in case it exists.
     */
    where: conversationsWhereUniqueInput
    /**
     * In case the conversations found by the `where` argument doesn't exist, create a new conversations with this data.
     */
    create: XOR<conversationsCreateInput, conversationsUncheckedCreateInput>
    /**
     * In case the conversations was found with the provided `where` argument, update it with this data.
     */
    update: XOR<conversationsUpdateInput, conversationsUncheckedUpdateInput>
  }

  /**
   * conversations delete
   */
  export type conversationsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the conversations
     */
    select?: conversationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the conversations
     */
    omit?: conversationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: conversationsInclude<ExtArgs> | null
    /**
     * Filter which conversations to delete.
     */
    where: conversationsWhereUniqueInput
  }

  /**
   * conversations deleteMany
   */
  export type conversationsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which conversations to delete
     */
    where?: conversationsWhereInput
    /**
     * Limit how many conversations to delete.
     */
    limit?: number
  }

  /**
   * conversations.messages
   */
  export type conversations$messagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the messages
     */
    select?: messagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the messages
     */
    omit?: messagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: messagesInclude<ExtArgs> | null
    where?: messagesWhereInput
    orderBy?: messagesOrderByWithRelationInput | messagesOrderByWithRelationInput[]
    cursor?: messagesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MessagesScalarFieldEnum | MessagesScalarFieldEnum[]
  }

  /**
   * conversations without action
   */
  export type conversationsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the conversations
     */
    select?: conversationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the conversations
     */
    omit?: conversationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: conversationsInclude<ExtArgs> | null
  }


  /**
   * Model messages
   */

  export type AggregateMessages = {
    _count: MessagesCountAggregateOutputType | null
    _avg: MessagesAvgAggregateOutputType | null
    _sum: MessagesSumAggregateOutputType | null
    _min: MessagesMinAggregateOutputType | null
    _max: MessagesMaxAggregateOutputType | null
  }

  export type MessagesAvgAggregateOutputType = {
    id: number | null
  }

  export type MessagesSumAggregateOutputType = {
    id: number | null
  }

  export type MessagesMinAggregateOutputType = {
    id: number | null
    chat_id: string | null
    sender: string | null
    message: string | null
    created_at: Date | null
  }

  export type MessagesMaxAggregateOutputType = {
    id: number | null
    chat_id: string | null
    sender: string | null
    message: string | null
    created_at: Date | null
  }

  export type MessagesCountAggregateOutputType = {
    id: number
    chat_id: number
    sender: number
    message: number
    created_at: number
    _all: number
  }


  export type MessagesAvgAggregateInputType = {
    id?: true
  }

  export type MessagesSumAggregateInputType = {
    id?: true
  }

  export type MessagesMinAggregateInputType = {
    id?: true
    chat_id?: true
    sender?: true
    message?: true
    created_at?: true
  }

  export type MessagesMaxAggregateInputType = {
    id?: true
    chat_id?: true
    sender?: true
    message?: true
    created_at?: true
  }

  export type MessagesCountAggregateInputType = {
    id?: true
    chat_id?: true
    sender?: true
    message?: true
    created_at?: true
    _all?: true
  }

  export type MessagesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which messages to aggregate.
     */
    where?: messagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of messages to fetch.
     */
    orderBy?: messagesOrderByWithRelationInput | messagesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: messagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` messages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` messages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned messages
    **/
    _count?: true | MessagesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MessagesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MessagesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MessagesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MessagesMaxAggregateInputType
  }

  export type GetMessagesAggregateType<T extends MessagesAggregateArgs> = {
        [P in keyof T & keyof AggregateMessages]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMessages[P]>
      : GetScalarType<T[P], AggregateMessages[P]>
  }




  export type messagesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: messagesWhereInput
    orderBy?: messagesOrderByWithAggregationInput | messagesOrderByWithAggregationInput[]
    by: MessagesScalarFieldEnum[] | MessagesScalarFieldEnum
    having?: messagesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MessagesCountAggregateInputType | true
    _avg?: MessagesAvgAggregateInputType
    _sum?: MessagesSumAggregateInputType
    _min?: MessagesMinAggregateInputType
    _max?: MessagesMaxAggregateInputType
  }

  export type MessagesGroupByOutputType = {
    id: number
    chat_id: string
    sender: string
    message: string
    created_at: Date
    _count: MessagesCountAggregateOutputType | null
    _avg: MessagesAvgAggregateOutputType | null
    _sum: MessagesSumAggregateOutputType | null
    _min: MessagesMinAggregateOutputType | null
    _max: MessagesMaxAggregateOutputType | null
  }

  type GetMessagesGroupByPayload<T extends messagesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MessagesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MessagesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MessagesGroupByOutputType[P]>
            : GetScalarType<T[P], MessagesGroupByOutputType[P]>
        }
      >
    >


  export type messagesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    chat_id?: boolean
    sender?: boolean
    message?: boolean
    created_at?: boolean
    conversation?: boolean | conversationsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["messages"]>



  export type messagesSelectScalar = {
    id?: boolean
    chat_id?: boolean
    sender?: boolean
    message?: boolean
    created_at?: boolean
  }

  export type messagesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "chat_id" | "sender" | "message" | "created_at", ExtArgs["result"]["messages"]>
  export type messagesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    conversation?: boolean | conversationsDefaultArgs<ExtArgs>
  }

  export type $messagesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "messages"
    objects: {
      conversation: Prisma.$conversationsPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      chat_id: string
      sender: string
      message: string
      created_at: Date
    }, ExtArgs["result"]["messages"]>
    composites: {}
  }

  type messagesGetPayload<S extends boolean | null | undefined | messagesDefaultArgs> = $Result.GetResult<Prisma.$messagesPayload, S>

  type messagesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<messagesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: MessagesCountAggregateInputType | true
    }

  export interface messagesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['messages'], meta: { name: 'messages' } }
    /**
     * Find zero or one Messages that matches the filter.
     * @param {messagesFindUniqueArgs} args - Arguments to find a Messages
     * @example
     * // Get one Messages
     * const messages = await prisma.messages.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends messagesFindUniqueArgs>(args: SelectSubset<T, messagesFindUniqueArgs<ExtArgs>>): Prisma__messagesClient<$Result.GetResult<Prisma.$messagesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Messages that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {messagesFindUniqueOrThrowArgs} args - Arguments to find a Messages
     * @example
     * // Get one Messages
     * const messages = await prisma.messages.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends messagesFindUniqueOrThrowArgs>(args: SelectSubset<T, messagesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__messagesClient<$Result.GetResult<Prisma.$messagesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Messages that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {messagesFindFirstArgs} args - Arguments to find a Messages
     * @example
     * // Get one Messages
     * const messages = await prisma.messages.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends messagesFindFirstArgs>(args?: SelectSubset<T, messagesFindFirstArgs<ExtArgs>>): Prisma__messagesClient<$Result.GetResult<Prisma.$messagesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Messages that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {messagesFindFirstOrThrowArgs} args - Arguments to find a Messages
     * @example
     * // Get one Messages
     * const messages = await prisma.messages.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends messagesFindFirstOrThrowArgs>(args?: SelectSubset<T, messagesFindFirstOrThrowArgs<ExtArgs>>): Prisma__messagesClient<$Result.GetResult<Prisma.$messagesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Messages that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {messagesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Messages
     * const messages = await prisma.messages.findMany()
     * 
     * // Get first 10 Messages
     * const messages = await prisma.messages.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const messagesWithIdOnly = await prisma.messages.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends messagesFindManyArgs>(args?: SelectSubset<T, messagesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$messagesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Messages.
     * @param {messagesCreateArgs} args - Arguments to create a Messages.
     * @example
     * // Create one Messages
     * const Messages = await prisma.messages.create({
     *   data: {
     *     // ... data to create a Messages
     *   }
     * })
     * 
     */
    create<T extends messagesCreateArgs>(args: SelectSubset<T, messagesCreateArgs<ExtArgs>>): Prisma__messagesClient<$Result.GetResult<Prisma.$messagesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Messages.
     * @param {messagesCreateManyArgs} args - Arguments to create many Messages.
     * @example
     * // Create many Messages
     * const messages = await prisma.messages.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends messagesCreateManyArgs>(args?: SelectSubset<T, messagesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Messages.
     * @param {messagesDeleteArgs} args - Arguments to delete one Messages.
     * @example
     * // Delete one Messages
     * const Messages = await prisma.messages.delete({
     *   where: {
     *     // ... filter to delete one Messages
     *   }
     * })
     * 
     */
    delete<T extends messagesDeleteArgs>(args: SelectSubset<T, messagesDeleteArgs<ExtArgs>>): Prisma__messagesClient<$Result.GetResult<Prisma.$messagesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Messages.
     * @param {messagesUpdateArgs} args - Arguments to update one Messages.
     * @example
     * // Update one Messages
     * const messages = await prisma.messages.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends messagesUpdateArgs>(args: SelectSubset<T, messagesUpdateArgs<ExtArgs>>): Prisma__messagesClient<$Result.GetResult<Prisma.$messagesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Messages.
     * @param {messagesDeleteManyArgs} args - Arguments to filter Messages to delete.
     * @example
     * // Delete a few Messages
     * const { count } = await prisma.messages.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends messagesDeleteManyArgs>(args?: SelectSubset<T, messagesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Messages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {messagesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Messages
     * const messages = await prisma.messages.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends messagesUpdateManyArgs>(args: SelectSubset<T, messagesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Messages.
     * @param {messagesUpsertArgs} args - Arguments to update or create a Messages.
     * @example
     * // Update or create a Messages
     * const messages = await prisma.messages.upsert({
     *   create: {
     *     // ... data to create a Messages
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Messages we want to update
     *   }
     * })
     */
    upsert<T extends messagesUpsertArgs>(args: SelectSubset<T, messagesUpsertArgs<ExtArgs>>): Prisma__messagesClient<$Result.GetResult<Prisma.$messagesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Messages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {messagesCountArgs} args - Arguments to filter Messages to count.
     * @example
     * // Count the number of Messages
     * const count = await prisma.messages.count({
     *   where: {
     *     // ... the filter for the Messages we want to count
     *   }
     * })
    **/
    count<T extends messagesCountArgs>(
      args?: Subset<T, messagesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MessagesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Messages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MessagesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MessagesAggregateArgs>(args: Subset<T, MessagesAggregateArgs>): Prisma.PrismaPromise<GetMessagesAggregateType<T>>

    /**
     * Group by Messages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {messagesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends messagesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: messagesGroupByArgs['orderBy'] }
        : { orderBy?: messagesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, messagesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMessagesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the messages model
   */
  readonly fields: messagesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for messages.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__messagesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    conversation<T extends conversationsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, conversationsDefaultArgs<ExtArgs>>): Prisma__conversationsClient<$Result.GetResult<Prisma.$conversationsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the messages model
   */
  interface messagesFieldRefs {
    readonly id: FieldRef<"messages", 'Int'>
    readonly chat_id: FieldRef<"messages", 'String'>
    readonly sender: FieldRef<"messages", 'String'>
    readonly message: FieldRef<"messages", 'String'>
    readonly created_at: FieldRef<"messages", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * messages findUnique
   */
  export type messagesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the messages
     */
    select?: messagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the messages
     */
    omit?: messagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: messagesInclude<ExtArgs> | null
    /**
     * Filter, which messages to fetch.
     */
    where: messagesWhereUniqueInput
  }

  /**
   * messages findUniqueOrThrow
   */
  export type messagesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the messages
     */
    select?: messagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the messages
     */
    omit?: messagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: messagesInclude<ExtArgs> | null
    /**
     * Filter, which messages to fetch.
     */
    where: messagesWhereUniqueInput
  }

  /**
   * messages findFirst
   */
  export type messagesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the messages
     */
    select?: messagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the messages
     */
    omit?: messagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: messagesInclude<ExtArgs> | null
    /**
     * Filter, which messages to fetch.
     */
    where?: messagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of messages to fetch.
     */
    orderBy?: messagesOrderByWithRelationInput | messagesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for messages.
     */
    cursor?: messagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` messages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` messages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of messages.
     */
    distinct?: MessagesScalarFieldEnum | MessagesScalarFieldEnum[]
  }

  /**
   * messages findFirstOrThrow
   */
  export type messagesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the messages
     */
    select?: messagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the messages
     */
    omit?: messagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: messagesInclude<ExtArgs> | null
    /**
     * Filter, which messages to fetch.
     */
    where?: messagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of messages to fetch.
     */
    orderBy?: messagesOrderByWithRelationInput | messagesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for messages.
     */
    cursor?: messagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` messages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` messages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of messages.
     */
    distinct?: MessagesScalarFieldEnum | MessagesScalarFieldEnum[]
  }

  /**
   * messages findMany
   */
  export type messagesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the messages
     */
    select?: messagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the messages
     */
    omit?: messagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: messagesInclude<ExtArgs> | null
    /**
     * Filter, which messages to fetch.
     */
    where?: messagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of messages to fetch.
     */
    orderBy?: messagesOrderByWithRelationInput | messagesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing messages.
     */
    cursor?: messagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` messages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` messages.
     */
    skip?: number
    distinct?: MessagesScalarFieldEnum | MessagesScalarFieldEnum[]
  }

  /**
   * messages create
   */
  export type messagesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the messages
     */
    select?: messagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the messages
     */
    omit?: messagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: messagesInclude<ExtArgs> | null
    /**
     * The data needed to create a messages.
     */
    data: XOR<messagesCreateInput, messagesUncheckedCreateInput>
  }

  /**
   * messages createMany
   */
  export type messagesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many messages.
     */
    data: messagesCreateManyInput | messagesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * messages update
   */
  export type messagesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the messages
     */
    select?: messagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the messages
     */
    omit?: messagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: messagesInclude<ExtArgs> | null
    /**
     * The data needed to update a messages.
     */
    data: XOR<messagesUpdateInput, messagesUncheckedUpdateInput>
    /**
     * Choose, which messages to update.
     */
    where: messagesWhereUniqueInput
  }

  /**
   * messages updateMany
   */
  export type messagesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update messages.
     */
    data: XOR<messagesUpdateManyMutationInput, messagesUncheckedUpdateManyInput>
    /**
     * Filter which messages to update
     */
    where?: messagesWhereInput
    /**
     * Limit how many messages to update.
     */
    limit?: number
  }

  /**
   * messages upsert
   */
  export type messagesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the messages
     */
    select?: messagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the messages
     */
    omit?: messagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: messagesInclude<ExtArgs> | null
    /**
     * The filter to search for the messages to update in case it exists.
     */
    where: messagesWhereUniqueInput
    /**
     * In case the messages found by the `where` argument doesn't exist, create a new messages with this data.
     */
    create: XOR<messagesCreateInput, messagesUncheckedCreateInput>
    /**
     * In case the messages was found with the provided `where` argument, update it with this data.
     */
    update: XOR<messagesUpdateInput, messagesUncheckedUpdateInput>
  }

  /**
   * messages delete
   */
  export type messagesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the messages
     */
    select?: messagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the messages
     */
    omit?: messagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: messagesInclude<ExtArgs> | null
    /**
     * Filter which messages to delete.
     */
    where: messagesWhereUniqueInput
  }

  /**
   * messages deleteMany
   */
  export type messagesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which messages to delete
     */
    where?: messagesWhereInput
    /**
     * Limit how many messages to delete.
     */
    limit?: number
  }

  /**
   * messages without action
   */
  export type messagesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the messages
     */
    select?: messagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the messages
     */
    omit?: messagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: messagesInclude<ExtArgs> | null
  }


  /**
   * Model reset_password_token
   */

  export type AggregateReset_password_token = {
    _count: Reset_password_tokenCountAggregateOutputType | null
    _avg: Reset_password_tokenAvgAggregateOutputType | null
    _sum: Reset_password_tokenSumAggregateOutputType | null
    _min: Reset_password_tokenMinAggregateOutputType | null
    _max: Reset_password_tokenMaxAggregateOutputType | null
  }

  export type Reset_password_tokenAvgAggregateOutputType = {
    id: number | null
  }

  export type Reset_password_tokenSumAggregateOutputType = {
    id: number | null
  }

  export type Reset_password_tokenMinAggregateOutputType = {
    id: number | null
    user_id: string | null
    token: string | null
    expires_at: Date | null
    created_at: Date | null
  }

  export type Reset_password_tokenMaxAggregateOutputType = {
    id: number | null
    user_id: string | null
    token: string | null
    expires_at: Date | null
    created_at: Date | null
  }

  export type Reset_password_tokenCountAggregateOutputType = {
    id: number
    user_id: number
    token: number
    expires_at: number
    created_at: number
    _all: number
  }


  export type Reset_password_tokenAvgAggregateInputType = {
    id?: true
  }

  export type Reset_password_tokenSumAggregateInputType = {
    id?: true
  }

  export type Reset_password_tokenMinAggregateInputType = {
    id?: true
    user_id?: true
    token?: true
    expires_at?: true
    created_at?: true
  }

  export type Reset_password_tokenMaxAggregateInputType = {
    id?: true
    user_id?: true
    token?: true
    expires_at?: true
    created_at?: true
  }

  export type Reset_password_tokenCountAggregateInputType = {
    id?: true
    user_id?: true
    token?: true
    expires_at?: true
    created_at?: true
    _all?: true
  }

  export type Reset_password_tokenAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which reset_password_token to aggregate.
     */
    where?: reset_password_tokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of reset_password_tokens to fetch.
     */
    orderBy?: reset_password_tokenOrderByWithRelationInput | reset_password_tokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: reset_password_tokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` reset_password_tokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` reset_password_tokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned reset_password_tokens
    **/
    _count?: true | Reset_password_tokenCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Reset_password_tokenAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Reset_password_tokenSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Reset_password_tokenMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Reset_password_tokenMaxAggregateInputType
  }

  export type GetReset_password_tokenAggregateType<T extends Reset_password_tokenAggregateArgs> = {
        [P in keyof T & keyof AggregateReset_password_token]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateReset_password_token[P]>
      : GetScalarType<T[P], AggregateReset_password_token[P]>
  }




  export type reset_password_tokenGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: reset_password_tokenWhereInput
    orderBy?: reset_password_tokenOrderByWithAggregationInput | reset_password_tokenOrderByWithAggregationInput[]
    by: Reset_password_tokenScalarFieldEnum[] | Reset_password_tokenScalarFieldEnum
    having?: reset_password_tokenScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Reset_password_tokenCountAggregateInputType | true
    _avg?: Reset_password_tokenAvgAggregateInputType
    _sum?: Reset_password_tokenSumAggregateInputType
    _min?: Reset_password_tokenMinAggregateInputType
    _max?: Reset_password_tokenMaxAggregateInputType
  }

  export type Reset_password_tokenGroupByOutputType = {
    id: number
    user_id: string
    token: string
    expires_at: Date
    created_at: Date
    _count: Reset_password_tokenCountAggregateOutputType | null
    _avg: Reset_password_tokenAvgAggregateOutputType | null
    _sum: Reset_password_tokenSumAggregateOutputType | null
    _min: Reset_password_tokenMinAggregateOutputType | null
    _max: Reset_password_tokenMaxAggregateOutputType | null
  }

  type GetReset_password_tokenGroupByPayload<T extends reset_password_tokenGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Reset_password_tokenGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Reset_password_tokenGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Reset_password_tokenGroupByOutputType[P]>
            : GetScalarType<T[P], Reset_password_tokenGroupByOutputType[P]>
        }
      >
    >


  export type reset_password_tokenSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    token?: boolean
    expires_at?: boolean
    created_at?: boolean
    user?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["reset_password_token"]>



  export type reset_password_tokenSelectScalar = {
    id?: boolean
    user_id?: boolean
    token?: boolean
    expires_at?: boolean
    created_at?: boolean
  }

  export type reset_password_tokenOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "user_id" | "token" | "expires_at" | "created_at", ExtArgs["result"]["reset_password_token"]>
  export type reset_password_tokenInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | usersDefaultArgs<ExtArgs>
  }

  export type $reset_password_tokenPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "reset_password_token"
    objects: {
      user: Prisma.$usersPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      user_id: string
      token: string
      expires_at: Date
      created_at: Date
    }, ExtArgs["result"]["reset_password_token"]>
    composites: {}
  }

  type reset_password_tokenGetPayload<S extends boolean | null | undefined | reset_password_tokenDefaultArgs> = $Result.GetResult<Prisma.$reset_password_tokenPayload, S>

  type reset_password_tokenCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<reset_password_tokenFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Reset_password_tokenCountAggregateInputType | true
    }

  export interface reset_password_tokenDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['reset_password_token'], meta: { name: 'reset_password_token' } }
    /**
     * Find zero or one Reset_password_token that matches the filter.
     * @param {reset_password_tokenFindUniqueArgs} args - Arguments to find a Reset_password_token
     * @example
     * // Get one Reset_password_token
     * const reset_password_token = await prisma.reset_password_token.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends reset_password_tokenFindUniqueArgs>(args: SelectSubset<T, reset_password_tokenFindUniqueArgs<ExtArgs>>): Prisma__reset_password_tokenClient<$Result.GetResult<Prisma.$reset_password_tokenPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Reset_password_token that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {reset_password_tokenFindUniqueOrThrowArgs} args - Arguments to find a Reset_password_token
     * @example
     * // Get one Reset_password_token
     * const reset_password_token = await prisma.reset_password_token.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends reset_password_tokenFindUniqueOrThrowArgs>(args: SelectSubset<T, reset_password_tokenFindUniqueOrThrowArgs<ExtArgs>>): Prisma__reset_password_tokenClient<$Result.GetResult<Prisma.$reset_password_tokenPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Reset_password_token that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reset_password_tokenFindFirstArgs} args - Arguments to find a Reset_password_token
     * @example
     * // Get one Reset_password_token
     * const reset_password_token = await prisma.reset_password_token.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends reset_password_tokenFindFirstArgs>(args?: SelectSubset<T, reset_password_tokenFindFirstArgs<ExtArgs>>): Prisma__reset_password_tokenClient<$Result.GetResult<Prisma.$reset_password_tokenPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Reset_password_token that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reset_password_tokenFindFirstOrThrowArgs} args - Arguments to find a Reset_password_token
     * @example
     * // Get one Reset_password_token
     * const reset_password_token = await prisma.reset_password_token.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends reset_password_tokenFindFirstOrThrowArgs>(args?: SelectSubset<T, reset_password_tokenFindFirstOrThrowArgs<ExtArgs>>): Prisma__reset_password_tokenClient<$Result.GetResult<Prisma.$reset_password_tokenPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Reset_password_tokens that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reset_password_tokenFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Reset_password_tokens
     * const reset_password_tokens = await prisma.reset_password_token.findMany()
     * 
     * // Get first 10 Reset_password_tokens
     * const reset_password_tokens = await prisma.reset_password_token.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const reset_password_tokenWithIdOnly = await prisma.reset_password_token.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends reset_password_tokenFindManyArgs>(args?: SelectSubset<T, reset_password_tokenFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$reset_password_tokenPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Reset_password_token.
     * @param {reset_password_tokenCreateArgs} args - Arguments to create a Reset_password_token.
     * @example
     * // Create one Reset_password_token
     * const Reset_password_token = await prisma.reset_password_token.create({
     *   data: {
     *     // ... data to create a Reset_password_token
     *   }
     * })
     * 
     */
    create<T extends reset_password_tokenCreateArgs>(args: SelectSubset<T, reset_password_tokenCreateArgs<ExtArgs>>): Prisma__reset_password_tokenClient<$Result.GetResult<Prisma.$reset_password_tokenPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Reset_password_tokens.
     * @param {reset_password_tokenCreateManyArgs} args - Arguments to create many Reset_password_tokens.
     * @example
     * // Create many Reset_password_tokens
     * const reset_password_token = await prisma.reset_password_token.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends reset_password_tokenCreateManyArgs>(args?: SelectSubset<T, reset_password_tokenCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Reset_password_token.
     * @param {reset_password_tokenDeleteArgs} args - Arguments to delete one Reset_password_token.
     * @example
     * // Delete one Reset_password_token
     * const Reset_password_token = await prisma.reset_password_token.delete({
     *   where: {
     *     // ... filter to delete one Reset_password_token
     *   }
     * })
     * 
     */
    delete<T extends reset_password_tokenDeleteArgs>(args: SelectSubset<T, reset_password_tokenDeleteArgs<ExtArgs>>): Prisma__reset_password_tokenClient<$Result.GetResult<Prisma.$reset_password_tokenPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Reset_password_token.
     * @param {reset_password_tokenUpdateArgs} args - Arguments to update one Reset_password_token.
     * @example
     * // Update one Reset_password_token
     * const reset_password_token = await prisma.reset_password_token.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends reset_password_tokenUpdateArgs>(args: SelectSubset<T, reset_password_tokenUpdateArgs<ExtArgs>>): Prisma__reset_password_tokenClient<$Result.GetResult<Prisma.$reset_password_tokenPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Reset_password_tokens.
     * @param {reset_password_tokenDeleteManyArgs} args - Arguments to filter Reset_password_tokens to delete.
     * @example
     * // Delete a few Reset_password_tokens
     * const { count } = await prisma.reset_password_token.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends reset_password_tokenDeleteManyArgs>(args?: SelectSubset<T, reset_password_tokenDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Reset_password_tokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reset_password_tokenUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Reset_password_tokens
     * const reset_password_token = await prisma.reset_password_token.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends reset_password_tokenUpdateManyArgs>(args: SelectSubset<T, reset_password_tokenUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Reset_password_token.
     * @param {reset_password_tokenUpsertArgs} args - Arguments to update or create a Reset_password_token.
     * @example
     * // Update or create a Reset_password_token
     * const reset_password_token = await prisma.reset_password_token.upsert({
     *   create: {
     *     // ... data to create a Reset_password_token
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Reset_password_token we want to update
     *   }
     * })
     */
    upsert<T extends reset_password_tokenUpsertArgs>(args: SelectSubset<T, reset_password_tokenUpsertArgs<ExtArgs>>): Prisma__reset_password_tokenClient<$Result.GetResult<Prisma.$reset_password_tokenPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Reset_password_tokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reset_password_tokenCountArgs} args - Arguments to filter Reset_password_tokens to count.
     * @example
     * // Count the number of Reset_password_tokens
     * const count = await prisma.reset_password_token.count({
     *   where: {
     *     // ... the filter for the Reset_password_tokens we want to count
     *   }
     * })
    **/
    count<T extends reset_password_tokenCountArgs>(
      args?: Subset<T, reset_password_tokenCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Reset_password_tokenCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Reset_password_token.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Reset_password_tokenAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Reset_password_tokenAggregateArgs>(args: Subset<T, Reset_password_tokenAggregateArgs>): Prisma.PrismaPromise<GetReset_password_tokenAggregateType<T>>

    /**
     * Group by Reset_password_token.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reset_password_tokenGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends reset_password_tokenGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: reset_password_tokenGroupByArgs['orderBy'] }
        : { orderBy?: reset_password_tokenGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, reset_password_tokenGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetReset_password_tokenGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the reset_password_token model
   */
  readonly fields: reset_password_tokenFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for reset_password_token.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__reset_password_tokenClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usersDefaultArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the reset_password_token model
   */
  interface reset_password_tokenFieldRefs {
    readonly id: FieldRef<"reset_password_token", 'Int'>
    readonly user_id: FieldRef<"reset_password_token", 'String'>
    readonly token: FieldRef<"reset_password_token", 'String'>
    readonly expires_at: FieldRef<"reset_password_token", 'DateTime'>
    readonly created_at: FieldRef<"reset_password_token", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * reset_password_token findUnique
   */
  export type reset_password_tokenFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reset_password_token
     */
    select?: reset_password_tokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reset_password_token
     */
    omit?: reset_password_tokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reset_password_tokenInclude<ExtArgs> | null
    /**
     * Filter, which reset_password_token to fetch.
     */
    where: reset_password_tokenWhereUniqueInput
  }

  /**
   * reset_password_token findUniqueOrThrow
   */
  export type reset_password_tokenFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reset_password_token
     */
    select?: reset_password_tokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reset_password_token
     */
    omit?: reset_password_tokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reset_password_tokenInclude<ExtArgs> | null
    /**
     * Filter, which reset_password_token to fetch.
     */
    where: reset_password_tokenWhereUniqueInput
  }

  /**
   * reset_password_token findFirst
   */
  export type reset_password_tokenFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reset_password_token
     */
    select?: reset_password_tokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reset_password_token
     */
    omit?: reset_password_tokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reset_password_tokenInclude<ExtArgs> | null
    /**
     * Filter, which reset_password_token to fetch.
     */
    where?: reset_password_tokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of reset_password_tokens to fetch.
     */
    orderBy?: reset_password_tokenOrderByWithRelationInput | reset_password_tokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for reset_password_tokens.
     */
    cursor?: reset_password_tokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` reset_password_tokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` reset_password_tokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of reset_password_tokens.
     */
    distinct?: Reset_password_tokenScalarFieldEnum | Reset_password_tokenScalarFieldEnum[]
  }

  /**
   * reset_password_token findFirstOrThrow
   */
  export type reset_password_tokenFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reset_password_token
     */
    select?: reset_password_tokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reset_password_token
     */
    omit?: reset_password_tokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reset_password_tokenInclude<ExtArgs> | null
    /**
     * Filter, which reset_password_token to fetch.
     */
    where?: reset_password_tokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of reset_password_tokens to fetch.
     */
    orderBy?: reset_password_tokenOrderByWithRelationInput | reset_password_tokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for reset_password_tokens.
     */
    cursor?: reset_password_tokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` reset_password_tokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` reset_password_tokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of reset_password_tokens.
     */
    distinct?: Reset_password_tokenScalarFieldEnum | Reset_password_tokenScalarFieldEnum[]
  }

  /**
   * reset_password_token findMany
   */
  export type reset_password_tokenFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reset_password_token
     */
    select?: reset_password_tokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reset_password_token
     */
    omit?: reset_password_tokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reset_password_tokenInclude<ExtArgs> | null
    /**
     * Filter, which reset_password_tokens to fetch.
     */
    where?: reset_password_tokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of reset_password_tokens to fetch.
     */
    orderBy?: reset_password_tokenOrderByWithRelationInput | reset_password_tokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing reset_password_tokens.
     */
    cursor?: reset_password_tokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` reset_password_tokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` reset_password_tokens.
     */
    skip?: number
    distinct?: Reset_password_tokenScalarFieldEnum | Reset_password_tokenScalarFieldEnum[]
  }

  /**
   * reset_password_token create
   */
  export type reset_password_tokenCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reset_password_token
     */
    select?: reset_password_tokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reset_password_token
     */
    omit?: reset_password_tokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reset_password_tokenInclude<ExtArgs> | null
    /**
     * The data needed to create a reset_password_token.
     */
    data: XOR<reset_password_tokenCreateInput, reset_password_tokenUncheckedCreateInput>
  }

  /**
   * reset_password_token createMany
   */
  export type reset_password_tokenCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many reset_password_tokens.
     */
    data: reset_password_tokenCreateManyInput | reset_password_tokenCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * reset_password_token update
   */
  export type reset_password_tokenUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reset_password_token
     */
    select?: reset_password_tokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reset_password_token
     */
    omit?: reset_password_tokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reset_password_tokenInclude<ExtArgs> | null
    /**
     * The data needed to update a reset_password_token.
     */
    data: XOR<reset_password_tokenUpdateInput, reset_password_tokenUncheckedUpdateInput>
    /**
     * Choose, which reset_password_token to update.
     */
    where: reset_password_tokenWhereUniqueInput
  }

  /**
   * reset_password_token updateMany
   */
  export type reset_password_tokenUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update reset_password_tokens.
     */
    data: XOR<reset_password_tokenUpdateManyMutationInput, reset_password_tokenUncheckedUpdateManyInput>
    /**
     * Filter which reset_password_tokens to update
     */
    where?: reset_password_tokenWhereInput
    /**
     * Limit how many reset_password_tokens to update.
     */
    limit?: number
  }

  /**
   * reset_password_token upsert
   */
  export type reset_password_tokenUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reset_password_token
     */
    select?: reset_password_tokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reset_password_token
     */
    omit?: reset_password_tokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reset_password_tokenInclude<ExtArgs> | null
    /**
     * The filter to search for the reset_password_token to update in case it exists.
     */
    where: reset_password_tokenWhereUniqueInput
    /**
     * In case the reset_password_token found by the `where` argument doesn't exist, create a new reset_password_token with this data.
     */
    create: XOR<reset_password_tokenCreateInput, reset_password_tokenUncheckedCreateInput>
    /**
     * In case the reset_password_token was found with the provided `where` argument, update it with this data.
     */
    update: XOR<reset_password_tokenUpdateInput, reset_password_tokenUncheckedUpdateInput>
  }

  /**
   * reset_password_token delete
   */
  export type reset_password_tokenDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reset_password_token
     */
    select?: reset_password_tokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reset_password_token
     */
    omit?: reset_password_tokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reset_password_tokenInclude<ExtArgs> | null
    /**
     * Filter which reset_password_token to delete.
     */
    where: reset_password_tokenWhereUniqueInput
  }

  /**
   * reset_password_token deleteMany
   */
  export type reset_password_tokenDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which reset_password_tokens to delete
     */
    where?: reset_password_tokenWhereInput
    /**
     * Limit how many reset_password_tokens to delete.
     */
    limit?: number
  }

  /**
   * reset_password_token without action
   */
  export type reset_password_tokenDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reset_password_token
     */
    select?: reset_password_tokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reset_password_token
     */
    omit?: reset_password_tokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reset_password_tokenInclude<ExtArgs> | null
  }


  /**
   * Model seller_hidden_users
   */

  export type AggregateSeller_hidden_users = {
    _count: Seller_hidden_usersCountAggregateOutputType | null
    _avg: Seller_hidden_usersAvgAggregateOutputType | null
    _sum: Seller_hidden_usersSumAggregateOutputType | null
    _min: Seller_hidden_usersMinAggregateOutputType | null
    _max: Seller_hidden_usersMaxAggregateOutputType | null
  }

  export type Seller_hidden_usersAvgAggregateOutputType = {
    id: number | null
    seller_id: number | null
    user_id: number | null
  }

  export type Seller_hidden_usersSumAggregateOutputType = {
    id: number | null
    seller_id: number | null
    user_id: number | null
  }

  export type Seller_hidden_usersMinAggregateOutputType = {
    id: number | null
    seller_id: number | null
    user_id: number | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Seller_hidden_usersMaxAggregateOutputType = {
    id: number | null
    seller_id: number | null
    user_id: number | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Seller_hidden_usersCountAggregateOutputType = {
    id: number
    seller_id: number
    user_id: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type Seller_hidden_usersAvgAggregateInputType = {
    id?: true
    seller_id?: true
    user_id?: true
  }

  export type Seller_hidden_usersSumAggregateInputType = {
    id?: true
    seller_id?: true
    user_id?: true
  }

  export type Seller_hidden_usersMinAggregateInputType = {
    id?: true
    seller_id?: true
    user_id?: true
    created_at?: true
    updated_at?: true
  }

  export type Seller_hidden_usersMaxAggregateInputType = {
    id?: true
    seller_id?: true
    user_id?: true
    created_at?: true
    updated_at?: true
  }

  export type Seller_hidden_usersCountAggregateInputType = {
    id?: true
    seller_id?: true
    user_id?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type Seller_hidden_usersAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which seller_hidden_users to aggregate.
     */
    where?: seller_hidden_usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of seller_hidden_users to fetch.
     */
    orderBy?: seller_hidden_usersOrderByWithRelationInput | seller_hidden_usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: seller_hidden_usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` seller_hidden_users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` seller_hidden_users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned seller_hidden_users
    **/
    _count?: true | Seller_hidden_usersCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Seller_hidden_usersAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Seller_hidden_usersSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Seller_hidden_usersMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Seller_hidden_usersMaxAggregateInputType
  }

  export type GetSeller_hidden_usersAggregateType<T extends Seller_hidden_usersAggregateArgs> = {
        [P in keyof T & keyof AggregateSeller_hidden_users]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSeller_hidden_users[P]>
      : GetScalarType<T[P], AggregateSeller_hidden_users[P]>
  }




  export type seller_hidden_usersGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: seller_hidden_usersWhereInput
    orderBy?: seller_hidden_usersOrderByWithAggregationInput | seller_hidden_usersOrderByWithAggregationInput[]
    by: Seller_hidden_usersScalarFieldEnum[] | Seller_hidden_usersScalarFieldEnum
    having?: seller_hidden_usersScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Seller_hidden_usersCountAggregateInputType | true
    _avg?: Seller_hidden_usersAvgAggregateInputType
    _sum?: Seller_hidden_usersSumAggregateInputType
    _min?: Seller_hidden_usersMinAggregateInputType
    _max?: Seller_hidden_usersMaxAggregateInputType
  }

  export type Seller_hidden_usersGroupByOutputType = {
    id: number
    seller_id: number
    user_id: number
    created_at: Date
    updated_at: Date
    _count: Seller_hidden_usersCountAggregateOutputType | null
    _avg: Seller_hidden_usersAvgAggregateOutputType | null
    _sum: Seller_hidden_usersSumAggregateOutputType | null
    _min: Seller_hidden_usersMinAggregateOutputType | null
    _max: Seller_hidden_usersMaxAggregateOutputType | null
  }

  type GetSeller_hidden_usersGroupByPayload<T extends seller_hidden_usersGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Seller_hidden_usersGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Seller_hidden_usersGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Seller_hidden_usersGroupByOutputType[P]>
            : GetScalarType<T[P], Seller_hidden_usersGroupByOutputType[P]>
        }
      >
    >


  export type seller_hidden_usersSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    seller_id?: boolean
    user_id?: boolean
    created_at?: boolean
    updated_at?: boolean
    seller?: boolean | usersDefaultArgs<ExtArgs>
    user?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["seller_hidden_users"]>



  export type seller_hidden_usersSelectScalar = {
    id?: boolean
    seller_id?: boolean
    user_id?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type seller_hidden_usersOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "seller_id" | "user_id" | "created_at" | "updated_at", ExtArgs["result"]["seller_hidden_users"]>
  export type seller_hidden_usersInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    seller?: boolean | usersDefaultArgs<ExtArgs>
    user?: boolean | usersDefaultArgs<ExtArgs>
  }

  export type $seller_hidden_usersPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "seller_hidden_users"
    objects: {
      seller: Prisma.$usersPayload<ExtArgs>
      user: Prisma.$usersPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      seller_id: number
      user_id: number
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["seller_hidden_users"]>
    composites: {}
  }

  type seller_hidden_usersGetPayload<S extends boolean | null | undefined | seller_hidden_usersDefaultArgs> = $Result.GetResult<Prisma.$seller_hidden_usersPayload, S>

  type seller_hidden_usersCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<seller_hidden_usersFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Seller_hidden_usersCountAggregateInputType | true
    }

  export interface seller_hidden_usersDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['seller_hidden_users'], meta: { name: 'seller_hidden_users' } }
    /**
     * Find zero or one Seller_hidden_users that matches the filter.
     * @param {seller_hidden_usersFindUniqueArgs} args - Arguments to find a Seller_hidden_users
     * @example
     * // Get one Seller_hidden_users
     * const seller_hidden_users = await prisma.seller_hidden_users.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends seller_hidden_usersFindUniqueArgs>(args: SelectSubset<T, seller_hidden_usersFindUniqueArgs<ExtArgs>>): Prisma__seller_hidden_usersClient<$Result.GetResult<Prisma.$seller_hidden_usersPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Seller_hidden_users that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {seller_hidden_usersFindUniqueOrThrowArgs} args - Arguments to find a Seller_hidden_users
     * @example
     * // Get one Seller_hidden_users
     * const seller_hidden_users = await prisma.seller_hidden_users.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends seller_hidden_usersFindUniqueOrThrowArgs>(args: SelectSubset<T, seller_hidden_usersFindUniqueOrThrowArgs<ExtArgs>>): Prisma__seller_hidden_usersClient<$Result.GetResult<Prisma.$seller_hidden_usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Seller_hidden_users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {seller_hidden_usersFindFirstArgs} args - Arguments to find a Seller_hidden_users
     * @example
     * // Get one Seller_hidden_users
     * const seller_hidden_users = await prisma.seller_hidden_users.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends seller_hidden_usersFindFirstArgs>(args?: SelectSubset<T, seller_hidden_usersFindFirstArgs<ExtArgs>>): Prisma__seller_hidden_usersClient<$Result.GetResult<Prisma.$seller_hidden_usersPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Seller_hidden_users that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {seller_hidden_usersFindFirstOrThrowArgs} args - Arguments to find a Seller_hidden_users
     * @example
     * // Get one Seller_hidden_users
     * const seller_hidden_users = await prisma.seller_hidden_users.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends seller_hidden_usersFindFirstOrThrowArgs>(args?: SelectSubset<T, seller_hidden_usersFindFirstOrThrowArgs<ExtArgs>>): Prisma__seller_hidden_usersClient<$Result.GetResult<Prisma.$seller_hidden_usersPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Seller_hidden_users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {seller_hidden_usersFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Seller_hidden_users
     * const seller_hidden_users = await prisma.seller_hidden_users.findMany()
     * 
     * // Get first 10 Seller_hidden_users
     * const seller_hidden_users = await prisma.seller_hidden_users.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const seller_hidden_usersWithIdOnly = await prisma.seller_hidden_users.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends seller_hidden_usersFindManyArgs>(args?: SelectSubset<T, seller_hidden_usersFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$seller_hidden_usersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Seller_hidden_users.
     * @param {seller_hidden_usersCreateArgs} args - Arguments to create a Seller_hidden_users.
     * @example
     * // Create one Seller_hidden_users
     * const Seller_hidden_users = await prisma.seller_hidden_users.create({
     *   data: {
     *     // ... data to create a Seller_hidden_users
     *   }
     * })
     * 
     */
    create<T extends seller_hidden_usersCreateArgs>(args: SelectSubset<T, seller_hidden_usersCreateArgs<ExtArgs>>): Prisma__seller_hidden_usersClient<$Result.GetResult<Prisma.$seller_hidden_usersPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Seller_hidden_users.
     * @param {seller_hidden_usersCreateManyArgs} args - Arguments to create many Seller_hidden_users.
     * @example
     * // Create many Seller_hidden_users
     * const seller_hidden_users = await prisma.seller_hidden_users.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends seller_hidden_usersCreateManyArgs>(args?: SelectSubset<T, seller_hidden_usersCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Seller_hidden_users.
     * @param {seller_hidden_usersDeleteArgs} args - Arguments to delete one Seller_hidden_users.
     * @example
     * // Delete one Seller_hidden_users
     * const Seller_hidden_users = await prisma.seller_hidden_users.delete({
     *   where: {
     *     // ... filter to delete one Seller_hidden_users
     *   }
     * })
     * 
     */
    delete<T extends seller_hidden_usersDeleteArgs>(args: SelectSubset<T, seller_hidden_usersDeleteArgs<ExtArgs>>): Prisma__seller_hidden_usersClient<$Result.GetResult<Prisma.$seller_hidden_usersPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Seller_hidden_users.
     * @param {seller_hidden_usersUpdateArgs} args - Arguments to update one Seller_hidden_users.
     * @example
     * // Update one Seller_hidden_users
     * const seller_hidden_users = await prisma.seller_hidden_users.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends seller_hidden_usersUpdateArgs>(args: SelectSubset<T, seller_hidden_usersUpdateArgs<ExtArgs>>): Prisma__seller_hidden_usersClient<$Result.GetResult<Prisma.$seller_hidden_usersPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Seller_hidden_users.
     * @param {seller_hidden_usersDeleteManyArgs} args - Arguments to filter Seller_hidden_users to delete.
     * @example
     * // Delete a few Seller_hidden_users
     * const { count } = await prisma.seller_hidden_users.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends seller_hidden_usersDeleteManyArgs>(args?: SelectSubset<T, seller_hidden_usersDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Seller_hidden_users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {seller_hidden_usersUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Seller_hidden_users
     * const seller_hidden_users = await prisma.seller_hidden_users.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends seller_hidden_usersUpdateManyArgs>(args: SelectSubset<T, seller_hidden_usersUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Seller_hidden_users.
     * @param {seller_hidden_usersUpsertArgs} args - Arguments to update or create a Seller_hidden_users.
     * @example
     * // Update or create a Seller_hidden_users
     * const seller_hidden_users = await prisma.seller_hidden_users.upsert({
     *   create: {
     *     // ... data to create a Seller_hidden_users
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Seller_hidden_users we want to update
     *   }
     * })
     */
    upsert<T extends seller_hidden_usersUpsertArgs>(args: SelectSubset<T, seller_hidden_usersUpsertArgs<ExtArgs>>): Prisma__seller_hidden_usersClient<$Result.GetResult<Prisma.$seller_hidden_usersPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Seller_hidden_users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {seller_hidden_usersCountArgs} args - Arguments to filter Seller_hidden_users to count.
     * @example
     * // Count the number of Seller_hidden_users
     * const count = await prisma.seller_hidden_users.count({
     *   where: {
     *     // ... the filter for the Seller_hidden_users we want to count
     *   }
     * })
    **/
    count<T extends seller_hidden_usersCountArgs>(
      args?: Subset<T, seller_hidden_usersCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Seller_hidden_usersCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Seller_hidden_users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Seller_hidden_usersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Seller_hidden_usersAggregateArgs>(args: Subset<T, Seller_hidden_usersAggregateArgs>): Prisma.PrismaPromise<GetSeller_hidden_usersAggregateType<T>>

    /**
     * Group by Seller_hidden_users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {seller_hidden_usersGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends seller_hidden_usersGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: seller_hidden_usersGroupByArgs['orderBy'] }
        : { orderBy?: seller_hidden_usersGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, seller_hidden_usersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSeller_hidden_usersGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the seller_hidden_users model
   */
  readonly fields: seller_hidden_usersFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for seller_hidden_users.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__seller_hidden_usersClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    seller<T extends usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usersDefaultArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    user<T extends usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usersDefaultArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the seller_hidden_users model
   */
  interface seller_hidden_usersFieldRefs {
    readonly id: FieldRef<"seller_hidden_users", 'Int'>
    readonly seller_id: FieldRef<"seller_hidden_users", 'Int'>
    readonly user_id: FieldRef<"seller_hidden_users", 'Int'>
    readonly created_at: FieldRef<"seller_hidden_users", 'DateTime'>
    readonly updated_at: FieldRef<"seller_hidden_users", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * seller_hidden_users findUnique
   */
  export type seller_hidden_usersFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the seller_hidden_users
     */
    select?: seller_hidden_usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the seller_hidden_users
     */
    omit?: seller_hidden_usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: seller_hidden_usersInclude<ExtArgs> | null
    /**
     * Filter, which seller_hidden_users to fetch.
     */
    where: seller_hidden_usersWhereUniqueInput
  }

  /**
   * seller_hidden_users findUniqueOrThrow
   */
  export type seller_hidden_usersFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the seller_hidden_users
     */
    select?: seller_hidden_usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the seller_hidden_users
     */
    omit?: seller_hidden_usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: seller_hidden_usersInclude<ExtArgs> | null
    /**
     * Filter, which seller_hidden_users to fetch.
     */
    where: seller_hidden_usersWhereUniqueInput
  }

  /**
   * seller_hidden_users findFirst
   */
  export type seller_hidden_usersFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the seller_hidden_users
     */
    select?: seller_hidden_usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the seller_hidden_users
     */
    omit?: seller_hidden_usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: seller_hidden_usersInclude<ExtArgs> | null
    /**
     * Filter, which seller_hidden_users to fetch.
     */
    where?: seller_hidden_usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of seller_hidden_users to fetch.
     */
    orderBy?: seller_hidden_usersOrderByWithRelationInput | seller_hidden_usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for seller_hidden_users.
     */
    cursor?: seller_hidden_usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` seller_hidden_users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` seller_hidden_users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of seller_hidden_users.
     */
    distinct?: Seller_hidden_usersScalarFieldEnum | Seller_hidden_usersScalarFieldEnum[]
  }

  /**
   * seller_hidden_users findFirstOrThrow
   */
  export type seller_hidden_usersFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the seller_hidden_users
     */
    select?: seller_hidden_usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the seller_hidden_users
     */
    omit?: seller_hidden_usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: seller_hidden_usersInclude<ExtArgs> | null
    /**
     * Filter, which seller_hidden_users to fetch.
     */
    where?: seller_hidden_usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of seller_hidden_users to fetch.
     */
    orderBy?: seller_hidden_usersOrderByWithRelationInput | seller_hidden_usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for seller_hidden_users.
     */
    cursor?: seller_hidden_usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` seller_hidden_users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` seller_hidden_users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of seller_hidden_users.
     */
    distinct?: Seller_hidden_usersScalarFieldEnum | Seller_hidden_usersScalarFieldEnum[]
  }

  /**
   * seller_hidden_users findMany
   */
  export type seller_hidden_usersFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the seller_hidden_users
     */
    select?: seller_hidden_usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the seller_hidden_users
     */
    omit?: seller_hidden_usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: seller_hidden_usersInclude<ExtArgs> | null
    /**
     * Filter, which seller_hidden_users to fetch.
     */
    where?: seller_hidden_usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of seller_hidden_users to fetch.
     */
    orderBy?: seller_hidden_usersOrderByWithRelationInput | seller_hidden_usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing seller_hidden_users.
     */
    cursor?: seller_hidden_usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` seller_hidden_users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` seller_hidden_users.
     */
    skip?: number
    distinct?: Seller_hidden_usersScalarFieldEnum | Seller_hidden_usersScalarFieldEnum[]
  }

  /**
   * seller_hidden_users create
   */
  export type seller_hidden_usersCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the seller_hidden_users
     */
    select?: seller_hidden_usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the seller_hidden_users
     */
    omit?: seller_hidden_usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: seller_hidden_usersInclude<ExtArgs> | null
    /**
     * The data needed to create a seller_hidden_users.
     */
    data: XOR<seller_hidden_usersCreateInput, seller_hidden_usersUncheckedCreateInput>
  }

  /**
   * seller_hidden_users createMany
   */
  export type seller_hidden_usersCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many seller_hidden_users.
     */
    data: seller_hidden_usersCreateManyInput | seller_hidden_usersCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * seller_hidden_users update
   */
  export type seller_hidden_usersUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the seller_hidden_users
     */
    select?: seller_hidden_usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the seller_hidden_users
     */
    omit?: seller_hidden_usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: seller_hidden_usersInclude<ExtArgs> | null
    /**
     * The data needed to update a seller_hidden_users.
     */
    data: XOR<seller_hidden_usersUpdateInput, seller_hidden_usersUncheckedUpdateInput>
    /**
     * Choose, which seller_hidden_users to update.
     */
    where: seller_hidden_usersWhereUniqueInput
  }

  /**
   * seller_hidden_users updateMany
   */
  export type seller_hidden_usersUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update seller_hidden_users.
     */
    data: XOR<seller_hidden_usersUpdateManyMutationInput, seller_hidden_usersUncheckedUpdateManyInput>
    /**
     * Filter which seller_hidden_users to update
     */
    where?: seller_hidden_usersWhereInput
    /**
     * Limit how many seller_hidden_users to update.
     */
    limit?: number
  }

  /**
   * seller_hidden_users upsert
   */
  export type seller_hidden_usersUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the seller_hidden_users
     */
    select?: seller_hidden_usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the seller_hidden_users
     */
    omit?: seller_hidden_usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: seller_hidden_usersInclude<ExtArgs> | null
    /**
     * The filter to search for the seller_hidden_users to update in case it exists.
     */
    where: seller_hidden_usersWhereUniqueInput
    /**
     * In case the seller_hidden_users found by the `where` argument doesn't exist, create a new seller_hidden_users with this data.
     */
    create: XOR<seller_hidden_usersCreateInput, seller_hidden_usersUncheckedCreateInput>
    /**
     * In case the seller_hidden_users was found with the provided `where` argument, update it with this data.
     */
    update: XOR<seller_hidden_usersUpdateInput, seller_hidden_usersUncheckedUpdateInput>
  }

  /**
   * seller_hidden_users delete
   */
  export type seller_hidden_usersDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the seller_hidden_users
     */
    select?: seller_hidden_usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the seller_hidden_users
     */
    omit?: seller_hidden_usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: seller_hidden_usersInclude<ExtArgs> | null
    /**
     * Filter which seller_hidden_users to delete.
     */
    where: seller_hidden_usersWhereUniqueInput
  }

  /**
   * seller_hidden_users deleteMany
   */
  export type seller_hidden_usersDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which seller_hidden_users to delete
     */
    where?: seller_hidden_usersWhereInput
    /**
     * Limit how many seller_hidden_users to delete.
     */
    limit?: number
  }

  /**
   * seller_hidden_users without action
   */
  export type seller_hidden_usersDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the seller_hidden_users
     */
    select?: seller_hidden_usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the seller_hidden_users
     */
    omit?: seller_hidden_usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: seller_hidden_usersInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const UsersScalarFieldEnum: {
    id: 'id',
    uuid: 'uuid',
    username: 'username',
    email: 'email',
    full_name: 'full_name',
    password: 'password',
    phone_number: 'phone_number',
    avatar: 'avatar',
    gender: 'gender',
    day_of_birth: 'day_of_birth',
    email_verified_at: 'email_verified_at',
    last_login: 'last_login',
    role_id: 'role_id',
    is_public: 'is_public',
    is_activated: 'is_activated',
    is_deleted: 'is_deleted',
    two_factor_enabled: 'two_factor_enabled',
    provider: 'provider',
    provider_id: 'provider_id',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type UsersScalarFieldEnum = (typeof UsersScalarFieldEnum)[keyof typeof UsersScalarFieldEnum]


  export const RolesScalarFieldEnum: {
    id: 'id',
    name: 'name',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type RolesScalarFieldEnum = (typeof RolesScalarFieldEnum)[keyof typeof RolesScalarFieldEnum]


  export const PermissionsScalarFieldEnum: {
    id: 'id',
    name: 'name',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type PermissionsScalarFieldEnum = (typeof PermissionsScalarFieldEnum)[keyof typeof PermissionsScalarFieldEnum]


  export const Role_permissionsScalarFieldEnum: {
    id: 'id',
    role_id: 'role_id',
    permission_id: 'permission_id',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type Role_permissionsScalarFieldEnum = (typeof Role_permissionsScalarFieldEnum)[keyof typeof Role_permissionsScalarFieldEnum]


  export const ShopsScalarFieldEnum: {
    id: 'id',
    uuid: 'uuid',
    seller_id: 'seller_id',
    name: 'name',
    slug: 'slug',
    description: 'description',
    logo: 'logo',
    address_id: 'address_id',
    rating: 'rating',
    is_active: 'is_active',
    is_deleted: 'is_deleted',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type ShopsScalarFieldEnum = (typeof ShopsScalarFieldEnum)[keyof typeof ShopsScalarFieldEnum]


  export const AddressesScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    full_name: 'full_name',
    phone_number: 'phone_number',
    address: 'address',
    province_id: 'province_id',
    province_name: 'province_name',
    district_id: 'district_id',
    district_name: 'district_name',
    ward_code: 'ward_code',
    ward_name: 'ward_name',
    region_id: 'region_id',
    type_address: 'type_address',
    is_default: 'is_default',
    is_deleted: 'is_deleted',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type AddressesScalarFieldEnum = (typeof AddressesScalarFieldEnum)[keyof typeof AddressesScalarFieldEnum]


  export const ProductsScalarFieldEnum: {
    id: 'id',
    uuid: 'uuid',
    name: 'name',
    slug: 'slug',
    description: 'description',
    old_price: 'old_price',
    new_price: 'new_price',
    discount_percentage: 'discount_percentage',
    stock: 'stock',
    sold: 'sold',
    weight: 'weight',
    category_id: 'category_id',
    shop_id: 'shop_id',
    is_deleted: 'is_deleted',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type ProductsScalarFieldEnum = (typeof ProductsScalarFieldEnum)[keyof typeof ProductsScalarFieldEnum]


  export const CategoriesScalarFieldEnum: {
    id: 'id',
    uuid: 'uuid',
    name: 'name',
    icon: 'icon',
    slug: 'slug',
    parent_id: 'parent_id',
    is_deleted: 'is_deleted',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type CategoriesScalarFieldEnum = (typeof CategoriesScalarFieldEnum)[keyof typeof CategoriesScalarFieldEnum]


  export const Category_breadcrumbsScalarFieldEnum: {
    id: 'id',
    category_id: 'category_id',
    name: 'name',
    path: 'path',
    level: 'level',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type Category_breadcrumbsScalarFieldEnum = (typeof Category_breadcrumbsScalarFieldEnum)[keyof typeof Category_breadcrumbsScalarFieldEnum]


  export const Product_imagesScalarFieldEnum: {
    id: 'id',
    product_id: 'product_id',
    url: 'url',
    is_primary: 'is_primary',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type Product_imagesScalarFieldEnum = (typeof Product_imagesScalarFieldEnum)[keyof typeof Product_imagesScalarFieldEnum]


  export const Product_specificationsScalarFieldEnum: {
    id: 'id',
    product_id: 'product_id',
    key: 'key',
    value: 'value',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type Product_specificationsScalarFieldEnum = (typeof Product_specificationsScalarFieldEnum)[keyof typeof Product_specificationsScalarFieldEnum]


  export const Product_attributesScalarFieldEnum: {
    id: 'id',
    product_id: 'product_id',
    specification_id: 'specification_id',
    name: 'name',
    value: 'value',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type Product_attributesScalarFieldEnum = (typeof Product_attributesScalarFieldEnum)[keyof typeof Product_attributesScalarFieldEnum]


  export const OrdersScalarFieldEnum: {
    id: 'id',
    uuid: 'uuid',
    user_id: 'user_id',
    address_id: 'address_id',
    total_amount: 'total_amount',
    status: 'status',
    is_deleted: 'is_deleted',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type OrdersScalarFieldEnum = (typeof OrdersScalarFieldEnum)[keyof typeof OrdersScalarFieldEnum]


  export const Order_itemsScalarFieldEnum: {
    id: 'id',
    order_id: 'order_id',
    product_id: 'product_id',
    quantity: 'quantity',
    unit_price: 'unit_price',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type Order_itemsScalarFieldEnum = (typeof Order_itemsScalarFieldEnum)[keyof typeof Order_itemsScalarFieldEnum]


  export const Cart_itemsScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    product_id: 'product_id',
    quantity: 'quantity',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type Cart_itemsScalarFieldEnum = (typeof Cart_itemsScalarFieldEnum)[keyof typeof Cart_itemsScalarFieldEnum]


  export const ReviewsScalarFieldEnum: {
    id: 'id',
    uuid: 'uuid',
    user_id: 'user_id',
    product_id: 'product_id',
    rating: 'rating',
    comment: 'comment',
    is_deleted: 'is_deleted',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type ReviewsScalarFieldEnum = (typeof ReviewsScalarFieldEnum)[keyof typeof ReviewsScalarFieldEnum]


  export const PaymentsScalarFieldEnum: {
    id: 'id',
    uuid: 'uuid',
    order_id: 'order_id',
    user_id: 'user_id',
    amount: 'amount',
    provider: 'provider',
    transaction_id: 'transaction_id',
    status: 'status',
    items: 'items',
    is_deleted: 'is_deleted',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type PaymentsScalarFieldEnum = (typeof PaymentsScalarFieldEnum)[keyof typeof PaymentsScalarFieldEnum]


  export const Email_blacklistScalarFieldEnum: {
    id: 'id',
    email: 'email',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type Email_blacklistScalarFieldEnum = (typeof Email_blacklistScalarFieldEnum)[keyof typeof Email_blacklistScalarFieldEnum]


  export const ConversationsScalarFieldEnum: {
    id: 'id',
    chat_id: 'chat_id',
    title: 'title',
    started_at: 'started_at',
    user_id: 'user_id'
  };

  export type ConversationsScalarFieldEnum = (typeof ConversationsScalarFieldEnum)[keyof typeof ConversationsScalarFieldEnum]


  export const MessagesScalarFieldEnum: {
    id: 'id',
    chat_id: 'chat_id',
    sender: 'sender',
    message: 'message',
    created_at: 'created_at'
  };

  export type MessagesScalarFieldEnum = (typeof MessagesScalarFieldEnum)[keyof typeof MessagesScalarFieldEnum]


  export const Reset_password_tokenScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    token: 'token',
    expires_at: 'expires_at',
    created_at: 'created_at'
  };

  export type Reset_password_tokenScalarFieldEnum = (typeof Reset_password_tokenScalarFieldEnum)[keyof typeof Reset_password_tokenScalarFieldEnum]


  export const Seller_hidden_usersScalarFieldEnum: {
    id: 'id',
    seller_id: 'seller_id',
    user_id: 'user_id',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type Seller_hidden_usersScalarFieldEnum = (typeof Seller_hidden_usersScalarFieldEnum)[keyof typeof Seller_hidden_usersScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullableJsonNullValueInput: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull
  };

  export type NullableJsonNullValueInput = (typeof NullableJsonNullValueInput)[keyof typeof NullableJsonNullValueInput]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const usersOrderByRelevanceFieldEnum: {
    uuid: 'uuid',
    username: 'username',
    email: 'email',
    full_name: 'full_name',
    password: 'password',
    phone_number: 'phone_number',
    avatar: 'avatar',
    day_of_birth: 'day_of_birth',
    provider: 'provider',
    provider_id: 'provider_id'
  };

  export type usersOrderByRelevanceFieldEnum = (typeof usersOrderByRelevanceFieldEnum)[keyof typeof usersOrderByRelevanceFieldEnum]


  export const shopsOrderByRelevanceFieldEnum: {
    uuid: 'uuid',
    name: 'name',
    slug: 'slug',
    description: 'description',
    logo: 'logo'
  };

  export type shopsOrderByRelevanceFieldEnum = (typeof shopsOrderByRelevanceFieldEnum)[keyof typeof shopsOrderByRelevanceFieldEnum]


  export const addressesOrderByRelevanceFieldEnum: {
    full_name: 'full_name',
    phone_number: 'phone_number',
    address: 'address',
    province_name: 'province_name',
    district_name: 'district_name',
    ward_code: 'ward_code',
    ward_name: 'ward_name'
  };

  export type addressesOrderByRelevanceFieldEnum = (typeof addressesOrderByRelevanceFieldEnum)[keyof typeof addressesOrderByRelevanceFieldEnum]


  export const productsOrderByRelevanceFieldEnum: {
    uuid: 'uuid',
    name: 'name',
    slug: 'slug',
    description: 'description'
  };

  export type productsOrderByRelevanceFieldEnum = (typeof productsOrderByRelevanceFieldEnum)[keyof typeof productsOrderByRelevanceFieldEnum]


  export const categoriesOrderByRelevanceFieldEnum: {
    uuid: 'uuid',
    name: 'name',
    icon: 'icon',
    slug: 'slug'
  };

  export type categoriesOrderByRelevanceFieldEnum = (typeof categoriesOrderByRelevanceFieldEnum)[keyof typeof categoriesOrderByRelevanceFieldEnum]


  export const category_breadcrumbsOrderByRelevanceFieldEnum: {
    name: 'name',
    path: 'path'
  };

  export type category_breadcrumbsOrderByRelevanceFieldEnum = (typeof category_breadcrumbsOrderByRelevanceFieldEnum)[keyof typeof category_breadcrumbsOrderByRelevanceFieldEnum]


  export const product_imagesOrderByRelevanceFieldEnum: {
    url: 'url'
  };

  export type product_imagesOrderByRelevanceFieldEnum = (typeof product_imagesOrderByRelevanceFieldEnum)[keyof typeof product_imagesOrderByRelevanceFieldEnum]


  export const product_specificationsOrderByRelevanceFieldEnum: {
    key: 'key',
    value: 'value'
  };

  export type product_specificationsOrderByRelevanceFieldEnum = (typeof product_specificationsOrderByRelevanceFieldEnum)[keyof typeof product_specificationsOrderByRelevanceFieldEnum]


  export const product_attributesOrderByRelevanceFieldEnum: {
    name: 'name',
    value: 'value'
  };

  export type product_attributesOrderByRelevanceFieldEnum = (typeof product_attributesOrderByRelevanceFieldEnum)[keyof typeof product_attributesOrderByRelevanceFieldEnum]


  export const ordersOrderByRelevanceFieldEnum: {
    uuid: 'uuid'
  };

  export type ordersOrderByRelevanceFieldEnum = (typeof ordersOrderByRelevanceFieldEnum)[keyof typeof ordersOrderByRelevanceFieldEnum]


  export const reviewsOrderByRelevanceFieldEnum: {
    uuid: 'uuid',
    comment: 'comment'
  };

  export type reviewsOrderByRelevanceFieldEnum = (typeof reviewsOrderByRelevanceFieldEnum)[keyof typeof reviewsOrderByRelevanceFieldEnum]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const paymentsOrderByRelevanceFieldEnum: {
    uuid: 'uuid',
    provider: 'provider',
    transaction_id: 'transaction_id'
  };

  export type paymentsOrderByRelevanceFieldEnum = (typeof paymentsOrderByRelevanceFieldEnum)[keyof typeof paymentsOrderByRelevanceFieldEnum]


  export const email_blacklistOrderByRelevanceFieldEnum: {
    email: 'email'
  };

  export type email_blacklistOrderByRelevanceFieldEnum = (typeof email_blacklistOrderByRelevanceFieldEnum)[keyof typeof email_blacklistOrderByRelevanceFieldEnum]


  export const conversationsOrderByRelevanceFieldEnum: {
    chat_id: 'chat_id',
    title: 'title'
  };

  export type conversationsOrderByRelevanceFieldEnum = (typeof conversationsOrderByRelevanceFieldEnum)[keyof typeof conversationsOrderByRelevanceFieldEnum]


  export const messagesOrderByRelevanceFieldEnum: {
    chat_id: 'chat_id',
    sender: 'sender',
    message: 'message'
  };

  export type messagesOrderByRelevanceFieldEnum = (typeof messagesOrderByRelevanceFieldEnum)[keyof typeof messagesOrderByRelevanceFieldEnum]


  export const reset_password_tokenOrderByRelevanceFieldEnum: {
    user_id: 'user_id',
    token: 'token'
  };

  export type reset_password_tokenOrderByRelevanceFieldEnum = (typeof reset_password_tokenOrderByRelevanceFieldEnum)[keyof typeof reset_password_tokenOrderByRelevanceFieldEnum]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'RoleEnum'
   */
  export type EnumRoleEnumFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'RoleEnum'>
    


  /**
   * Reference to a field of type 'PermissionEnum'
   */
  export type EnumPermissionEnumFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PermissionEnum'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'AddressTypeEnum'
   */
  export type EnumAddressTypeEnumFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'AddressTypeEnum'>
    


  /**
   * Reference to a field of type 'OrderStatusEnum'
   */
  export type EnumOrderStatusEnumFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'OrderStatusEnum'>
    


  /**
   * Reference to a field of type 'PaymentStatusEnum'
   */
  export type EnumPaymentStatusEnumFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PaymentStatusEnum'>
    


  /**
   * Reference to a field of type 'Json'
   */
  export type JsonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Json'>
    


  /**
   * Reference to a field of type 'QueryMode'
   */
  export type EnumQueryModeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'QueryMode'>
    
  /**
   * Deep Input Types
   */


  export type usersWhereInput = {
    AND?: usersWhereInput | usersWhereInput[]
    OR?: usersWhereInput[]
    NOT?: usersWhereInput | usersWhereInput[]
    id?: IntFilter<"users"> | number
    uuid?: StringFilter<"users"> | string
    username?: StringFilter<"users"> | string
    email?: StringFilter<"users"> | string
    full_name?: StringNullableFilter<"users"> | string | null
    password?: StringNullableFilter<"users"> | string | null
    phone_number?: StringNullableFilter<"users"> | string | null
    avatar?: StringNullableFilter<"users"> | string | null
    gender?: BoolNullableFilter<"users"> | boolean | null
    day_of_birth?: StringNullableFilter<"users"> | string | null
    email_verified_at?: DateTimeNullableFilter<"users"> | Date | string | null
    last_login?: DateTimeNullableFilter<"users"> | Date | string | null
    role_id?: IntFilter<"users"> | number
    is_public?: BoolFilter<"users"> | boolean
    is_activated?: BoolFilter<"users"> | boolean
    is_deleted?: BoolFilter<"users"> | boolean
    two_factor_enabled?: BoolFilter<"users"> | boolean
    provider?: StringFilter<"users"> | string
    provider_id?: StringNullableFilter<"users"> | string | null
    created_at?: DateTimeFilter<"users"> | Date | string
    updated_at?: DateTimeFilter<"users"> | Date | string
    role?: XOR<RolesScalarRelationFilter, rolesWhereInput>
    addresses?: AddressesListRelationFilter
    orders?: OrdersListRelationFilter
    cart_items?: Cart_itemsListRelationFilter
    reviews?: ReviewsListRelationFilter
    payments?: PaymentsListRelationFilter
    conversations?: ConversationsListRelationFilter
    reset_password_token?: Reset_password_tokenListRelationFilter
    shops?: ShopsListRelationFilter
    hidden_by_sellers?: Seller_hidden_usersListRelationFilter
    hidden_users?: Seller_hidden_usersListRelationFilter
  }

  export type usersOrderByWithRelationInput = {
    id?: SortOrder
    uuid?: SortOrder
    username?: SortOrder
    email?: SortOrder
    full_name?: SortOrderInput | SortOrder
    password?: SortOrderInput | SortOrder
    phone_number?: SortOrderInput | SortOrder
    avatar?: SortOrderInput | SortOrder
    gender?: SortOrderInput | SortOrder
    day_of_birth?: SortOrderInput | SortOrder
    email_verified_at?: SortOrderInput | SortOrder
    last_login?: SortOrderInput | SortOrder
    role_id?: SortOrder
    is_public?: SortOrder
    is_activated?: SortOrder
    is_deleted?: SortOrder
    two_factor_enabled?: SortOrder
    provider?: SortOrder
    provider_id?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    role?: rolesOrderByWithRelationInput
    addresses?: addressesOrderByRelationAggregateInput
    orders?: ordersOrderByRelationAggregateInput
    cart_items?: cart_itemsOrderByRelationAggregateInput
    reviews?: reviewsOrderByRelationAggregateInput
    payments?: paymentsOrderByRelationAggregateInput
    conversations?: conversationsOrderByRelationAggregateInput
    reset_password_token?: reset_password_tokenOrderByRelationAggregateInput
    shops?: shopsOrderByRelationAggregateInput
    hidden_by_sellers?: seller_hidden_usersOrderByRelationAggregateInput
    hidden_users?: seller_hidden_usersOrderByRelationAggregateInput
    _relevance?: usersOrderByRelevanceInput
  }

  export type usersWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    uuid?: string
    username?: string
    email?: string
    email_provider?: usersEmailProviderCompoundUniqueInput
    AND?: usersWhereInput | usersWhereInput[]
    OR?: usersWhereInput[]
    NOT?: usersWhereInput | usersWhereInput[]
    full_name?: StringNullableFilter<"users"> | string | null
    password?: StringNullableFilter<"users"> | string | null
    phone_number?: StringNullableFilter<"users"> | string | null
    avatar?: StringNullableFilter<"users"> | string | null
    gender?: BoolNullableFilter<"users"> | boolean | null
    day_of_birth?: StringNullableFilter<"users"> | string | null
    email_verified_at?: DateTimeNullableFilter<"users"> | Date | string | null
    last_login?: DateTimeNullableFilter<"users"> | Date | string | null
    role_id?: IntFilter<"users"> | number
    is_public?: BoolFilter<"users"> | boolean
    is_activated?: BoolFilter<"users"> | boolean
    is_deleted?: BoolFilter<"users"> | boolean
    two_factor_enabled?: BoolFilter<"users"> | boolean
    provider?: StringFilter<"users"> | string
    provider_id?: StringNullableFilter<"users"> | string | null
    created_at?: DateTimeFilter<"users"> | Date | string
    updated_at?: DateTimeFilter<"users"> | Date | string
    role?: XOR<RolesScalarRelationFilter, rolesWhereInput>
    addresses?: AddressesListRelationFilter
    orders?: OrdersListRelationFilter
    cart_items?: Cart_itemsListRelationFilter
    reviews?: ReviewsListRelationFilter
    payments?: PaymentsListRelationFilter
    conversations?: ConversationsListRelationFilter
    reset_password_token?: Reset_password_tokenListRelationFilter
    shops?: ShopsListRelationFilter
    hidden_by_sellers?: Seller_hidden_usersListRelationFilter
    hidden_users?: Seller_hidden_usersListRelationFilter
  }, "id" | "uuid" | "username" | "email" | "email_provider">

  export type usersOrderByWithAggregationInput = {
    id?: SortOrder
    uuid?: SortOrder
    username?: SortOrder
    email?: SortOrder
    full_name?: SortOrderInput | SortOrder
    password?: SortOrderInput | SortOrder
    phone_number?: SortOrderInput | SortOrder
    avatar?: SortOrderInput | SortOrder
    gender?: SortOrderInput | SortOrder
    day_of_birth?: SortOrderInput | SortOrder
    email_verified_at?: SortOrderInput | SortOrder
    last_login?: SortOrderInput | SortOrder
    role_id?: SortOrder
    is_public?: SortOrder
    is_activated?: SortOrder
    is_deleted?: SortOrder
    two_factor_enabled?: SortOrder
    provider?: SortOrder
    provider_id?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: usersCountOrderByAggregateInput
    _avg?: usersAvgOrderByAggregateInput
    _max?: usersMaxOrderByAggregateInput
    _min?: usersMinOrderByAggregateInput
    _sum?: usersSumOrderByAggregateInput
  }

  export type usersScalarWhereWithAggregatesInput = {
    AND?: usersScalarWhereWithAggregatesInput | usersScalarWhereWithAggregatesInput[]
    OR?: usersScalarWhereWithAggregatesInput[]
    NOT?: usersScalarWhereWithAggregatesInput | usersScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"users"> | number
    uuid?: StringWithAggregatesFilter<"users"> | string
    username?: StringWithAggregatesFilter<"users"> | string
    email?: StringWithAggregatesFilter<"users"> | string
    full_name?: StringNullableWithAggregatesFilter<"users"> | string | null
    password?: StringNullableWithAggregatesFilter<"users"> | string | null
    phone_number?: StringNullableWithAggregatesFilter<"users"> | string | null
    avatar?: StringNullableWithAggregatesFilter<"users"> | string | null
    gender?: BoolNullableWithAggregatesFilter<"users"> | boolean | null
    day_of_birth?: StringNullableWithAggregatesFilter<"users"> | string | null
    email_verified_at?: DateTimeNullableWithAggregatesFilter<"users"> | Date | string | null
    last_login?: DateTimeNullableWithAggregatesFilter<"users"> | Date | string | null
    role_id?: IntWithAggregatesFilter<"users"> | number
    is_public?: BoolWithAggregatesFilter<"users"> | boolean
    is_activated?: BoolWithAggregatesFilter<"users"> | boolean
    is_deleted?: BoolWithAggregatesFilter<"users"> | boolean
    two_factor_enabled?: BoolWithAggregatesFilter<"users"> | boolean
    provider?: StringWithAggregatesFilter<"users"> | string
    provider_id?: StringNullableWithAggregatesFilter<"users"> | string | null
    created_at?: DateTimeWithAggregatesFilter<"users"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"users"> | Date | string
  }

  export type rolesWhereInput = {
    AND?: rolesWhereInput | rolesWhereInput[]
    OR?: rolesWhereInput[]
    NOT?: rolesWhereInput | rolesWhereInput[]
    id?: IntFilter<"roles"> | number
    name?: EnumRoleEnumFilter<"roles"> | $Enums.RoleEnum
    created_at?: DateTimeFilter<"roles"> | Date | string
    updated_at?: DateTimeFilter<"roles"> | Date | string
    users?: UsersListRelationFilter
    role_permissions?: Role_permissionsListRelationFilter
  }

  export type rolesOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    users?: usersOrderByRelationAggregateInput
    role_permissions?: role_permissionsOrderByRelationAggregateInput
  }

  export type rolesWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    name?: $Enums.RoleEnum
    AND?: rolesWhereInput | rolesWhereInput[]
    OR?: rolesWhereInput[]
    NOT?: rolesWhereInput | rolesWhereInput[]
    created_at?: DateTimeFilter<"roles"> | Date | string
    updated_at?: DateTimeFilter<"roles"> | Date | string
    users?: UsersListRelationFilter
    role_permissions?: Role_permissionsListRelationFilter
  }, "id" | "name">

  export type rolesOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: rolesCountOrderByAggregateInput
    _avg?: rolesAvgOrderByAggregateInput
    _max?: rolesMaxOrderByAggregateInput
    _min?: rolesMinOrderByAggregateInput
    _sum?: rolesSumOrderByAggregateInput
  }

  export type rolesScalarWhereWithAggregatesInput = {
    AND?: rolesScalarWhereWithAggregatesInput | rolesScalarWhereWithAggregatesInput[]
    OR?: rolesScalarWhereWithAggregatesInput[]
    NOT?: rolesScalarWhereWithAggregatesInput | rolesScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"roles"> | number
    name?: EnumRoleEnumWithAggregatesFilter<"roles"> | $Enums.RoleEnum
    created_at?: DateTimeWithAggregatesFilter<"roles"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"roles"> | Date | string
  }

  export type permissionsWhereInput = {
    AND?: permissionsWhereInput | permissionsWhereInput[]
    OR?: permissionsWhereInput[]
    NOT?: permissionsWhereInput | permissionsWhereInput[]
    id?: IntFilter<"permissions"> | number
    name?: EnumPermissionEnumFilter<"permissions"> | $Enums.PermissionEnum
    created_at?: DateTimeFilter<"permissions"> | Date | string
    updated_at?: DateTimeFilter<"permissions"> | Date | string
    role_permissions?: Role_permissionsListRelationFilter
  }

  export type permissionsOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    role_permissions?: role_permissionsOrderByRelationAggregateInput
  }

  export type permissionsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    name?: $Enums.PermissionEnum
    AND?: permissionsWhereInput | permissionsWhereInput[]
    OR?: permissionsWhereInput[]
    NOT?: permissionsWhereInput | permissionsWhereInput[]
    created_at?: DateTimeFilter<"permissions"> | Date | string
    updated_at?: DateTimeFilter<"permissions"> | Date | string
    role_permissions?: Role_permissionsListRelationFilter
  }, "id" | "name">

  export type permissionsOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: permissionsCountOrderByAggregateInput
    _avg?: permissionsAvgOrderByAggregateInput
    _max?: permissionsMaxOrderByAggregateInput
    _min?: permissionsMinOrderByAggregateInput
    _sum?: permissionsSumOrderByAggregateInput
  }

  export type permissionsScalarWhereWithAggregatesInput = {
    AND?: permissionsScalarWhereWithAggregatesInput | permissionsScalarWhereWithAggregatesInput[]
    OR?: permissionsScalarWhereWithAggregatesInput[]
    NOT?: permissionsScalarWhereWithAggregatesInput | permissionsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"permissions"> | number
    name?: EnumPermissionEnumWithAggregatesFilter<"permissions"> | $Enums.PermissionEnum
    created_at?: DateTimeWithAggregatesFilter<"permissions"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"permissions"> | Date | string
  }

  export type role_permissionsWhereInput = {
    AND?: role_permissionsWhereInput | role_permissionsWhereInput[]
    OR?: role_permissionsWhereInput[]
    NOT?: role_permissionsWhereInput | role_permissionsWhereInput[]
    id?: IntFilter<"role_permissions"> | number
    role_id?: IntFilter<"role_permissions"> | number
    permission_id?: IntFilter<"role_permissions"> | number
    created_at?: DateTimeFilter<"role_permissions"> | Date | string
    updated_at?: DateTimeFilter<"role_permissions"> | Date | string
    role?: XOR<RolesScalarRelationFilter, rolesWhereInput>
    permission?: XOR<PermissionsScalarRelationFilter, permissionsWhereInput>
  }

  export type role_permissionsOrderByWithRelationInput = {
    id?: SortOrder
    role_id?: SortOrder
    permission_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    role?: rolesOrderByWithRelationInput
    permission?: permissionsOrderByWithRelationInput
  }

  export type role_permissionsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    role_id_permission_id?: role_permissionsRole_idPermission_idCompoundUniqueInput
    AND?: role_permissionsWhereInput | role_permissionsWhereInput[]
    OR?: role_permissionsWhereInput[]
    NOT?: role_permissionsWhereInput | role_permissionsWhereInput[]
    role_id?: IntFilter<"role_permissions"> | number
    permission_id?: IntFilter<"role_permissions"> | number
    created_at?: DateTimeFilter<"role_permissions"> | Date | string
    updated_at?: DateTimeFilter<"role_permissions"> | Date | string
    role?: XOR<RolesScalarRelationFilter, rolesWhereInput>
    permission?: XOR<PermissionsScalarRelationFilter, permissionsWhereInput>
  }, "id" | "role_id_permission_id">

  export type role_permissionsOrderByWithAggregationInput = {
    id?: SortOrder
    role_id?: SortOrder
    permission_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: role_permissionsCountOrderByAggregateInput
    _avg?: role_permissionsAvgOrderByAggregateInput
    _max?: role_permissionsMaxOrderByAggregateInput
    _min?: role_permissionsMinOrderByAggregateInput
    _sum?: role_permissionsSumOrderByAggregateInput
  }

  export type role_permissionsScalarWhereWithAggregatesInput = {
    AND?: role_permissionsScalarWhereWithAggregatesInput | role_permissionsScalarWhereWithAggregatesInput[]
    OR?: role_permissionsScalarWhereWithAggregatesInput[]
    NOT?: role_permissionsScalarWhereWithAggregatesInput | role_permissionsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"role_permissions"> | number
    role_id?: IntWithAggregatesFilter<"role_permissions"> | number
    permission_id?: IntWithAggregatesFilter<"role_permissions"> | number
    created_at?: DateTimeWithAggregatesFilter<"role_permissions"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"role_permissions"> | Date | string
  }

  export type shopsWhereInput = {
    AND?: shopsWhereInput | shopsWhereInput[]
    OR?: shopsWhereInput[]
    NOT?: shopsWhereInput | shopsWhereInput[]
    id?: IntFilter<"shops"> | number
    uuid?: StringFilter<"shops"> | string
    seller_id?: IntFilter<"shops"> | number
    name?: StringFilter<"shops"> | string
    slug?: StringFilter<"shops"> | string
    description?: StringNullableFilter<"shops"> | string | null
    logo?: StringNullableFilter<"shops"> | string | null
    address_id?: IntNullableFilter<"shops"> | number | null
    rating?: FloatNullableFilter<"shops"> | number | null
    is_active?: BoolFilter<"shops"> | boolean
    is_deleted?: BoolFilter<"shops"> | boolean
    created_at?: DateTimeFilter<"shops"> | Date | string
    updated_at?: DateTimeFilter<"shops"> | Date | string
    seller?: XOR<UsersScalarRelationFilter, usersWhereInput>
    address?: XOR<AddressesNullableScalarRelationFilter, addressesWhereInput> | null
    products?: ProductsListRelationFilter
  }

  export type shopsOrderByWithRelationInput = {
    id?: SortOrder
    uuid?: SortOrder
    seller_id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    description?: SortOrderInput | SortOrder
    logo?: SortOrderInput | SortOrder
    address_id?: SortOrderInput | SortOrder
    rating?: SortOrderInput | SortOrder
    is_active?: SortOrder
    is_deleted?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    seller?: usersOrderByWithRelationInput
    address?: addressesOrderByWithRelationInput
    products?: productsOrderByRelationAggregateInput
    _relevance?: shopsOrderByRelevanceInput
  }

  export type shopsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    uuid?: string
    slug?: string
    AND?: shopsWhereInput | shopsWhereInput[]
    OR?: shopsWhereInput[]
    NOT?: shopsWhereInput | shopsWhereInput[]
    seller_id?: IntFilter<"shops"> | number
    name?: StringFilter<"shops"> | string
    description?: StringNullableFilter<"shops"> | string | null
    logo?: StringNullableFilter<"shops"> | string | null
    address_id?: IntNullableFilter<"shops"> | number | null
    rating?: FloatNullableFilter<"shops"> | number | null
    is_active?: BoolFilter<"shops"> | boolean
    is_deleted?: BoolFilter<"shops"> | boolean
    created_at?: DateTimeFilter<"shops"> | Date | string
    updated_at?: DateTimeFilter<"shops"> | Date | string
    seller?: XOR<UsersScalarRelationFilter, usersWhereInput>
    address?: XOR<AddressesNullableScalarRelationFilter, addressesWhereInput> | null
    products?: ProductsListRelationFilter
  }, "id" | "uuid" | "slug">

  export type shopsOrderByWithAggregationInput = {
    id?: SortOrder
    uuid?: SortOrder
    seller_id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    description?: SortOrderInput | SortOrder
    logo?: SortOrderInput | SortOrder
    address_id?: SortOrderInput | SortOrder
    rating?: SortOrderInput | SortOrder
    is_active?: SortOrder
    is_deleted?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: shopsCountOrderByAggregateInput
    _avg?: shopsAvgOrderByAggregateInput
    _max?: shopsMaxOrderByAggregateInput
    _min?: shopsMinOrderByAggregateInput
    _sum?: shopsSumOrderByAggregateInput
  }

  export type shopsScalarWhereWithAggregatesInput = {
    AND?: shopsScalarWhereWithAggregatesInput | shopsScalarWhereWithAggregatesInput[]
    OR?: shopsScalarWhereWithAggregatesInput[]
    NOT?: shopsScalarWhereWithAggregatesInput | shopsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"shops"> | number
    uuid?: StringWithAggregatesFilter<"shops"> | string
    seller_id?: IntWithAggregatesFilter<"shops"> | number
    name?: StringWithAggregatesFilter<"shops"> | string
    slug?: StringWithAggregatesFilter<"shops"> | string
    description?: StringNullableWithAggregatesFilter<"shops"> | string | null
    logo?: StringNullableWithAggregatesFilter<"shops"> | string | null
    address_id?: IntNullableWithAggregatesFilter<"shops"> | number | null
    rating?: FloatNullableWithAggregatesFilter<"shops"> | number | null
    is_active?: BoolWithAggregatesFilter<"shops"> | boolean
    is_deleted?: BoolWithAggregatesFilter<"shops"> | boolean
    created_at?: DateTimeWithAggregatesFilter<"shops"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"shops"> | Date | string
  }

  export type addressesWhereInput = {
    AND?: addressesWhereInput | addressesWhereInput[]
    OR?: addressesWhereInput[]
    NOT?: addressesWhereInput | addressesWhereInput[]
    id?: IntFilter<"addresses"> | number
    user_id?: IntFilter<"addresses"> | number
    full_name?: StringFilter<"addresses"> | string
    phone_number?: StringFilter<"addresses"> | string
    address?: StringFilter<"addresses"> | string
    province_id?: IntNullableFilter<"addresses"> | number | null
    province_name?: StringNullableFilter<"addresses"> | string | null
    district_id?: IntNullableFilter<"addresses"> | number | null
    district_name?: StringNullableFilter<"addresses"> | string | null
    ward_code?: StringNullableFilter<"addresses"> | string | null
    ward_name?: StringNullableFilter<"addresses"> | string | null
    region_id?: IntNullableFilter<"addresses"> | number | null
    type_address?: EnumAddressTypeEnumNullableFilter<"addresses"> | $Enums.AddressTypeEnum | null
    is_default?: BoolFilter<"addresses"> | boolean
    is_deleted?: BoolFilter<"addresses"> | boolean
    created_at?: DateTimeFilter<"addresses"> | Date | string
    updated_at?: DateTimeFilter<"addresses"> | Date | string
    user?: XOR<UsersScalarRelationFilter, usersWhereInput>
    orders?: OrdersListRelationFilter
    shops?: ShopsListRelationFilter
  }

  export type addressesOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrder
    full_name?: SortOrder
    phone_number?: SortOrder
    address?: SortOrder
    province_id?: SortOrderInput | SortOrder
    province_name?: SortOrderInput | SortOrder
    district_id?: SortOrderInput | SortOrder
    district_name?: SortOrderInput | SortOrder
    ward_code?: SortOrderInput | SortOrder
    ward_name?: SortOrderInput | SortOrder
    region_id?: SortOrderInput | SortOrder
    type_address?: SortOrderInput | SortOrder
    is_default?: SortOrder
    is_deleted?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    user?: usersOrderByWithRelationInput
    orders?: ordersOrderByRelationAggregateInput
    shops?: shopsOrderByRelationAggregateInput
    _relevance?: addressesOrderByRelevanceInput
  }

  export type addressesWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: addressesWhereInput | addressesWhereInput[]
    OR?: addressesWhereInput[]
    NOT?: addressesWhereInput | addressesWhereInput[]
    user_id?: IntFilter<"addresses"> | number
    full_name?: StringFilter<"addresses"> | string
    phone_number?: StringFilter<"addresses"> | string
    address?: StringFilter<"addresses"> | string
    province_id?: IntNullableFilter<"addresses"> | number | null
    province_name?: StringNullableFilter<"addresses"> | string | null
    district_id?: IntNullableFilter<"addresses"> | number | null
    district_name?: StringNullableFilter<"addresses"> | string | null
    ward_code?: StringNullableFilter<"addresses"> | string | null
    ward_name?: StringNullableFilter<"addresses"> | string | null
    region_id?: IntNullableFilter<"addresses"> | number | null
    type_address?: EnumAddressTypeEnumNullableFilter<"addresses"> | $Enums.AddressTypeEnum | null
    is_default?: BoolFilter<"addresses"> | boolean
    is_deleted?: BoolFilter<"addresses"> | boolean
    created_at?: DateTimeFilter<"addresses"> | Date | string
    updated_at?: DateTimeFilter<"addresses"> | Date | string
    user?: XOR<UsersScalarRelationFilter, usersWhereInput>
    orders?: OrdersListRelationFilter
    shops?: ShopsListRelationFilter
  }, "id">

  export type addressesOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrder
    full_name?: SortOrder
    phone_number?: SortOrder
    address?: SortOrder
    province_id?: SortOrderInput | SortOrder
    province_name?: SortOrderInput | SortOrder
    district_id?: SortOrderInput | SortOrder
    district_name?: SortOrderInput | SortOrder
    ward_code?: SortOrderInput | SortOrder
    ward_name?: SortOrderInput | SortOrder
    region_id?: SortOrderInput | SortOrder
    type_address?: SortOrderInput | SortOrder
    is_default?: SortOrder
    is_deleted?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: addressesCountOrderByAggregateInput
    _avg?: addressesAvgOrderByAggregateInput
    _max?: addressesMaxOrderByAggregateInput
    _min?: addressesMinOrderByAggregateInput
    _sum?: addressesSumOrderByAggregateInput
  }

  export type addressesScalarWhereWithAggregatesInput = {
    AND?: addressesScalarWhereWithAggregatesInput | addressesScalarWhereWithAggregatesInput[]
    OR?: addressesScalarWhereWithAggregatesInput[]
    NOT?: addressesScalarWhereWithAggregatesInput | addressesScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"addresses"> | number
    user_id?: IntWithAggregatesFilter<"addresses"> | number
    full_name?: StringWithAggregatesFilter<"addresses"> | string
    phone_number?: StringWithAggregatesFilter<"addresses"> | string
    address?: StringWithAggregatesFilter<"addresses"> | string
    province_id?: IntNullableWithAggregatesFilter<"addresses"> | number | null
    province_name?: StringNullableWithAggregatesFilter<"addresses"> | string | null
    district_id?: IntNullableWithAggregatesFilter<"addresses"> | number | null
    district_name?: StringNullableWithAggregatesFilter<"addresses"> | string | null
    ward_code?: StringNullableWithAggregatesFilter<"addresses"> | string | null
    ward_name?: StringNullableWithAggregatesFilter<"addresses"> | string | null
    region_id?: IntNullableWithAggregatesFilter<"addresses"> | number | null
    type_address?: EnumAddressTypeEnumNullableWithAggregatesFilter<"addresses"> | $Enums.AddressTypeEnum | null
    is_default?: BoolWithAggregatesFilter<"addresses"> | boolean
    is_deleted?: BoolWithAggregatesFilter<"addresses"> | boolean
    created_at?: DateTimeWithAggregatesFilter<"addresses"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"addresses"> | Date | string
  }

  export type productsWhereInput = {
    AND?: productsWhereInput | productsWhereInput[]
    OR?: productsWhereInput[]
    NOT?: productsWhereInput | productsWhereInput[]
    id?: IntFilter<"products"> | number
    uuid?: StringFilter<"products"> | string
    name?: StringFilter<"products"> | string
    slug?: StringFilter<"products"> | string
    description?: StringNullableFilter<"products"> | string | null
    old_price?: FloatNullableFilter<"products"> | number | null
    new_price?: FloatFilter<"products"> | number
    discount_percentage?: FloatNullableFilter<"products"> | number | null
    stock?: IntFilter<"products"> | number
    sold?: IntFilter<"products"> | number
    weight?: FloatNullableFilter<"products"> | number | null
    category_id?: IntNullableFilter<"products"> | number | null
    shop_id?: IntNullableFilter<"products"> | number | null
    is_deleted?: BoolFilter<"products"> | boolean
    created_at?: DateTimeFilter<"products"> | Date | string
    updated_at?: DateTimeFilter<"products"> | Date | string
    category?: XOR<CategoriesNullableScalarRelationFilter, categoriesWhereInput> | null
    shop?: XOR<ShopsNullableScalarRelationFilter, shopsWhereInput> | null
    cart_items?: Cart_itemsListRelationFilter
    order_items?: Order_itemsListRelationFilter
    reviews?: ReviewsListRelationFilter
    product_images?: Product_imagesListRelationFilter
    product_specifications?: Product_specificationsListRelationFilter
    product_attributes?: Product_attributesListRelationFilter
  }

  export type productsOrderByWithRelationInput = {
    id?: SortOrder
    uuid?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    description?: SortOrderInput | SortOrder
    old_price?: SortOrderInput | SortOrder
    new_price?: SortOrder
    discount_percentage?: SortOrderInput | SortOrder
    stock?: SortOrder
    sold?: SortOrder
    weight?: SortOrderInput | SortOrder
    category_id?: SortOrderInput | SortOrder
    shop_id?: SortOrderInput | SortOrder
    is_deleted?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    category?: categoriesOrderByWithRelationInput
    shop?: shopsOrderByWithRelationInput
    cart_items?: cart_itemsOrderByRelationAggregateInput
    order_items?: order_itemsOrderByRelationAggregateInput
    reviews?: reviewsOrderByRelationAggregateInput
    product_images?: product_imagesOrderByRelationAggregateInput
    product_specifications?: product_specificationsOrderByRelationAggregateInput
    product_attributes?: product_attributesOrderByRelationAggregateInput
    _relevance?: productsOrderByRelevanceInput
  }

  export type productsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    uuid?: string
    AND?: productsWhereInput | productsWhereInput[]
    OR?: productsWhereInput[]
    NOT?: productsWhereInput | productsWhereInput[]
    name?: StringFilter<"products"> | string
    slug?: StringFilter<"products"> | string
    description?: StringNullableFilter<"products"> | string | null
    old_price?: FloatNullableFilter<"products"> | number | null
    new_price?: FloatFilter<"products"> | number
    discount_percentage?: FloatNullableFilter<"products"> | number | null
    stock?: IntFilter<"products"> | number
    sold?: IntFilter<"products"> | number
    weight?: FloatNullableFilter<"products"> | number | null
    category_id?: IntNullableFilter<"products"> | number | null
    shop_id?: IntNullableFilter<"products"> | number | null
    is_deleted?: BoolFilter<"products"> | boolean
    created_at?: DateTimeFilter<"products"> | Date | string
    updated_at?: DateTimeFilter<"products"> | Date | string
    category?: XOR<CategoriesNullableScalarRelationFilter, categoriesWhereInput> | null
    shop?: XOR<ShopsNullableScalarRelationFilter, shopsWhereInput> | null
    cart_items?: Cart_itemsListRelationFilter
    order_items?: Order_itemsListRelationFilter
    reviews?: ReviewsListRelationFilter
    product_images?: Product_imagesListRelationFilter
    product_specifications?: Product_specificationsListRelationFilter
    product_attributes?: Product_attributesListRelationFilter
  }, "id" | "uuid">

  export type productsOrderByWithAggregationInput = {
    id?: SortOrder
    uuid?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    description?: SortOrderInput | SortOrder
    old_price?: SortOrderInput | SortOrder
    new_price?: SortOrder
    discount_percentage?: SortOrderInput | SortOrder
    stock?: SortOrder
    sold?: SortOrder
    weight?: SortOrderInput | SortOrder
    category_id?: SortOrderInput | SortOrder
    shop_id?: SortOrderInput | SortOrder
    is_deleted?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: productsCountOrderByAggregateInput
    _avg?: productsAvgOrderByAggregateInput
    _max?: productsMaxOrderByAggregateInput
    _min?: productsMinOrderByAggregateInput
    _sum?: productsSumOrderByAggregateInput
  }

  export type productsScalarWhereWithAggregatesInput = {
    AND?: productsScalarWhereWithAggregatesInput | productsScalarWhereWithAggregatesInput[]
    OR?: productsScalarWhereWithAggregatesInput[]
    NOT?: productsScalarWhereWithAggregatesInput | productsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"products"> | number
    uuid?: StringWithAggregatesFilter<"products"> | string
    name?: StringWithAggregatesFilter<"products"> | string
    slug?: StringWithAggregatesFilter<"products"> | string
    description?: StringNullableWithAggregatesFilter<"products"> | string | null
    old_price?: FloatNullableWithAggregatesFilter<"products"> | number | null
    new_price?: FloatWithAggregatesFilter<"products"> | number
    discount_percentage?: FloatNullableWithAggregatesFilter<"products"> | number | null
    stock?: IntWithAggregatesFilter<"products"> | number
    sold?: IntWithAggregatesFilter<"products"> | number
    weight?: FloatNullableWithAggregatesFilter<"products"> | number | null
    category_id?: IntNullableWithAggregatesFilter<"products"> | number | null
    shop_id?: IntNullableWithAggregatesFilter<"products"> | number | null
    is_deleted?: BoolWithAggregatesFilter<"products"> | boolean
    created_at?: DateTimeWithAggregatesFilter<"products"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"products"> | Date | string
  }

  export type categoriesWhereInput = {
    AND?: categoriesWhereInput | categoriesWhereInput[]
    OR?: categoriesWhereInput[]
    NOT?: categoriesWhereInput | categoriesWhereInput[]
    id?: IntFilter<"categories"> | number
    uuid?: StringFilter<"categories"> | string
    name?: StringFilter<"categories"> | string
    icon?: StringNullableFilter<"categories"> | string | null
    slug?: StringFilter<"categories"> | string
    parent_id?: IntNullableFilter<"categories"> | number | null
    is_deleted?: BoolFilter<"categories"> | boolean
    created_at?: DateTimeFilter<"categories"> | Date | string
    updated_at?: DateTimeFilter<"categories"> | Date | string
    parent?: XOR<CategoriesNullableScalarRelationFilter, categoriesWhereInput> | null
    children?: CategoriesListRelationFilter
    products?: ProductsListRelationFilter
    category_breadcrumbs?: Category_breadcrumbsListRelationFilter
  }

  export type categoriesOrderByWithRelationInput = {
    id?: SortOrder
    uuid?: SortOrder
    name?: SortOrder
    icon?: SortOrderInput | SortOrder
    slug?: SortOrder
    parent_id?: SortOrderInput | SortOrder
    is_deleted?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    parent?: categoriesOrderByWithRelationInput
    children?: categoriesOrderByRelationAggregateInput
    products?: productsOrderByRelationAggregateInput
    category_breadcrumbs?: category_breadcrumbsOrderByRelationAggregateInput
    _relevance?: categoriesOrderByRelevanceInput
  }

  export type categoriesWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    uuid?: string
    name?: string
    slug?: string
    AND?: categoriesWhereInput | categoriesWhereInput[]
    OR?: categoriesWhereInput[]
    NOT?: categoriesWhereInput | categoriesWhereInput[]
    icon?: StringNullableFilter<"categories"> | string | null
    parent_id?: IntNullableFilter<"categories"> | number | null
    is_deleted?: BoolFilter<"categories"> | boolean
    created_at?: DateTimeFilter<"categories"> | Date | string
    updated_at?: DateTimeFilter<"categories"> | Date | string
    parent?: XOR<CategoriesNullableScalarRelationFilter, categoriesWhereInput> | null
    children?: CategoriesListRelationFilter
    products?: ProductsListRelationFilter
    category_breadcrumbs?: Category_breadcrumbsListRelationFilter
  }, "id" | "uuid" | "name" | "slug">

  export type categoriesOrderByWithAggregationInput = {
    id?: SortOrder
    uuid?: SortOrder
    name?: SortOrder
    icon?: SortOrderInput | SortOrder
    slug?: SortOrder
    parent_id?: SortOrderInput | SortOrder
    is_deleted?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: categoriesCountOrderByAggregateInput
    _avg?: categoriesAvgOrderByAggregateInput
    _max?: categoriesMaxOrderByAggregateInput
    _min?: categoriesMinOrderByAggregateInput
    _sum?: categoriesSumOrderByAggregateInput
  }

  export type categoriesScalarWhereWithAggregatesInput = {
    AND?: categoriesScalarWhereWithAggregatesInput | categoriesScalarWhereWithAggregatesInput[]
    OR?: categoriesScalarWhereWithAggregatesInput[]
    NOT?: categoriesScalarWhereWithAggregatesInput | categoriesScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"categories"> | number
    uuid?: StringWithAggregatesFilter<"categories"> | string
    name?: StringWithAggregatesFilter<"categories"> | string
    icon?: StringNullableWithAggregatesFilter<"categories"> | string | null
    slug?: StringWithAggregatesFilter<"categories"> | string
    parent_id?: IntNullableWithAggregatesFilter<"categories"> | number | null
    is_deleted?: BoolWithAggregatesFilter<"categories"> | boolean
    created_at?: DateTimeWithAggregatesFilter<"categories"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"categories"> | Date | string
  }

  export type category_breadcrumbsWhereInput = {
    AND?: category_breadcrumbsWhereInput | category_breadcrumbsWhereInput[]
    OR?: category_breadcrumbsWhereInput[]
    NOT?: category_breadcrumbsWhereInput | category_breadcrumbsWhereInput[]
    id?: IntFilter<"category_breadcrumbs"> | number
    category_id?: IntFilter<"category_breadcrumbs"> | number
    name?: StringFilter<"category_breadcrumbs"> | string
    path?: StringFilter<"category_breadcrumbs"> | string
    level?: IntFilter<"category_breadcrumbs"> | number
    created_at?: DateTimeFilter<"category_breadcrumbs"> | Date | string
    updated_at?: DateTimeFilter<"category_breadcrumbs"> | Date | string
    category?: XOR<CategoriesScalarRelationFilter, categoriesWhereInput>
  }

  export type category_breadcrumbsOrderByWithRelationInput = {
    id?: SortOrder
    category_id?: SortOrder
    name?: SortOrder
    path?: SortOrder
    level?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    category?: categoriesOrderByWithRelationInput
    _relevance?: category_breadcrumbsOrderByRelevanceInput
  }

  export type category_breadcrumbsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: category_breadcrumbsWhereInput | category_breadcrumbsWhereInput[]
    OR?: category_breadcrumbsWhereInput[]
    NOT?: category_breadcrumbsWhereInput | category_breadcrumbsWhereInput[]
    category_id?: IntFilter<"category_breadcrumbs"> | number
    name?: StringFilter<"category_breadcrumbs"> | string
    path?: StringFilter<"category_breadcrumbs"> | string
    level?: IntFilter<"category_breadcrumbs"> | number
    created_at?: DateTimeFilter<"category_breadcrumbs"> | Date | string
    updated_at?: DateTimeFilter<"category_breadcrumbs"> | Date | string
    category?: XOR<CategoriesScalarRelationFilter, categoriesWhereInput>
  }, "id">

  export type category_breadcrumbsOrderByWithAggregationInput = {
    id?: SortOrder
    category_id?: SortOrder
    name?: SortOrder
    path?: SortOrder
    level?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: category_breadcrumbsCountOrderByAggregateInput
    _avg?: category_breadcrumbsAvgOrderByAggregateInput
    _max?: category_breadcrumbsMaxOrderByAggregateInput
    _min?: category_breadcrumbsMinOrderByAggregateInput
    _sum?: category_breadcrumbsSumOrderByAggregateInput
  }

  export type category_breadcrumbsScalarWhereWithAggregatesInput = {
    AND?: category_breadcrumbsScalarWhereWithAggregatesInput | category_breadcrumbsScalarWhereWithAggregatesInput[]
    OR?: category_breadcrumbsScalarWhereWithAggregatesInput[]
    NOT?: category_breadcrumbsScalarWhereWithAggregatesInput | category_breadcrumbsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"category_breadcrumbs"> | number
    category_id?: IntWithAggregatesFilter<"category_breadcrumbs"> | number
    name?: StringWithAggregatesFilter<"category_breadcrumbs"> | string
    path?: StringWithAggregatesFilter<"category_breadcrumbs"> | string
    level?: IntWithAggregatesFilter<"category_breadcrumbs"> | number
    created_at?: DateTimeWithAggregatesFilter<"category_breadcrumbs"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"category_breadcrumbs"> | Date | string
  }

  export type product_imagesWhereInput = {
    AND?: product_imagesWhereInput | product_imagesWhereInput[]
    OR?: product_imagesWhereInput[]
    NOT?: product_imagesWhereInput | product_imagesWhereInput[]
    id?: IntFilter<"product_images"> | number
    product_id?: IntFilter<"product_images"> | number
    url?: StringFilter<"product_images"> | string
    is_primary?: BoolFilter<"product_images"> | boolean
    created_at?: DateTimeFilter<"product_images"> | Date | string
    updated_at?: DateTimeFilter<"product_images"> | Date | string
    product?: XOR<ProductsScalarRelationFilter, productsWhereInput>
  }

  export type product_imagesOrderByWithRelationInput = {
    id?: SortOrder
    product_id?: SortOrder
    url?: SortOrder
    is_primary?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    product?: productsOrderByWithRelationInput
    _relevance?: product_imagesOrderByRelevanceInput
  }

  export type product_imagesWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: product_imagesWhereInput | product_imagesWhereInput[]
    OR?: product_imagesWhereInput[]
    NOT?: product_imagesWhereInput | product_imagesWhereInput[]
    product_id?: IntFilter<"product_images"> | number
    url?: StringFilter<"product_images"> | string
    is_primary?: BoolFilter<"product_images"> | boolean
    created_at?: DateTimeFilter<"product_images"> | Date | string
    updated_at?: DateTimeFilter<"product_images"> | Date | string
    product?: XOR<ProductsScalarRelationFilter, productsWhereInput>
  }, "id">

  export type product_imagesOrderByWithAggregationInput = {
    id?: SortOrder
    product_id?: SortOrder
    url?: SortOrder
    is_primary?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: product_imagesCountOrderByAggregateInput
    _avg?: product_imagesAvgOrderByAggregateInput
    _max?: product_imagesMaxOrderByAggregateInput
    _min?: product_imagesMinOrderByAggregateInput
    _sum?: product_imagesSumOrderByAggregateInput
  }

  export type product_imagesScalarWhereWithAggregatesInput = {
    AND?: product_imagesScalarWhereWithAggregatesInput | product_imagesScalarWhereWithAggregatesInput[]
    OR?: product_imagesScalarWhereWithAggregatesInput[]
    NOT?: product_imagesScalarWhereWithAggregatesInput | product_imagesScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"product_images"> | number
    product_id?: IntWithAggregatesFilter<"product_images"> | number
    url?: StringWithAggregatesFilter<"product_images"> | string
    is_primary?: BoolWithAggregatesFilter<"product_images"> | boolean
    created_at?: DateTimeWithAggregatesFilter<"product_images"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"product_images"> | Date | string
  }

  export type product_specificationsWhereInput = {
    AND?: product_specificationsWhereInput | product_specificationsWhereInput[]
    OR?: product_specificationsWhereInput[]
    NOT?: product_specificationsWhereInput | product_specificationsWhereInput[]
    id?: IntFilter<"product_specifications"> | number
    product_id?: IntFilter<"product_specifications"> | number
    key?: StringFilter<"product_specifications"> | string
    value?: StringFilter<"product_specifications"> | string
    created_at?: DateTimeFilter<"product_specifications"> | Date | string
    updated_at?: DateTimeFilter<"product_specifications"> | Date | string
    product?: XOR<ProductsScalarRelationFilter, productsWhereInput>
    product_attributes?: Product_attributesListRelationFilter
  }

  export type product_specificationsOrderByWithRelationInput = {
    id?: SortOrder
    product_id?: SortOrder
    key?: SortOrder
    value?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    product?: productsOrderByWithRelationInput
    product_attributes?: product_attributesOrderByRelationAggregateInput
    _relevance?: product_specificationsOrderByRelevanceInput
  }

  export type product_specificationsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: product_specificationsWhereInput | product_specificationsWhereInput[]
    OR?: product_specificationsWhereInput[]
    NOT?: product_specificationsWhereInput | product_specificationsWhereInput[]
    product_id?: IntFilter<"product_specifications"> | number
    key?: StringFilter<"product_specifications"> | string
    value?: StringFilter<"product_specifications"> | string
    created_at?: DateTimeFilter<"product_specifications"> | Date | string
    updated_at?: DateTimeFilter<"product_specifications"> | Date | string
    product?: XOR<ProductsScalarRelationFilter, productsWhereInput>
    product_attributes?: Product_attributesListRelationFilter
  }, "id">

  export type product_specificationsOrderByWithAggregationInput = {
    id?: SortOrder
    product_id?: SortOrder
    key?: SortOrder
    value?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: product_specificationsCountOrderByAggregateInput
    _avg?: product_specificationsAvgOrderByAggregateInput
    _max?: product_specificationsMaxOrderByAggregateInput
    _min?: product_specificationsMinOrderByAggregateInput
    _sum?: product_specificationsSumOrderByAggregateInput
  }

  export type product_specificationsScalarWhereWithAggregatesInput = {
    AND?: product_specificationsScalarWhereWithAggregatesInput | product_specificationsScalarWhereWithAggregatesInput[]
    OR?: product_specificationsScalarWhereWithAggregatesInput[]
    NOT?: product_specificationsScalarWhereWithAggregatesInput | product_specificationsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"product_specifications"> | number
    product_id?: IntWithAggregatesFilter<"product_specifications"> | number
    key?: StringWithAggregatesFilter<"product_specifications"> | string
    value?: StringWithAggregatesFilter<"product_specifications"> | string
    created_at?: DateTimeWithAggregatesFilter<"product_specifications"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"product_specifications"> | Date | string
  }

  export type product_attributesWhereInput = {
    AND?: product_attributesWhereInput | product_attributesWhereInput[]
    OR?: product_attributesWhereInput[]
    NOT?: product_attributesWhereInput | product_attributesWhereInput[]
    id?: IntFilter<"product_attributes"> | number
    product_id?: IntFilter<"product_attributes"> | number
    specification_id?: IntFilter<"product_attributes"> | number
    name?: StringFilter<"product_attributes"> | string
    value?: StringFilter<"product_attributes"> | string
    created_at?: DateTimeFilter<"product_attributes"> | Date | string
    updated_at?: DateTimeFilter<"product_attributes"> | Date | string
    product?: XOR<ProductsScalarRelationFilter, productsWhereInput>
    specification?: XOR<Product_specificationsScalarRelationFilter, product_specificationsWhereInput>
  }

  export type product_attributesOrderByWithRelationInput = {
    id?: SortOrder
    product_id?: SortOrder
    specification_id?: SortOrder
    name?: SortOrder
    value?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    product?: productsOrderByWithRelationInput
    specification?: product_specificationsOrderByWithRelationInput
    _relevance?: product_attributesOrderByRelevanceInput
  }

  export type product_attributesWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: product_attributesWhereInput | product_attributesWhereInput[]
    OR?: product_attributesWhereInput[]
    NOT?: product_attributesWhereInput | product_attributesWhereInput[]
    product_id?: IntFilter<"product_attributes"> | number
    specification_id?: IntFilter<"product_attributes"> | number
    name?: StringFilter<"product_attributes"> | string
    value?: StringFilter<"product_attributes"> | string
    created_at?: DateTimeFilter<"product_attributes"> | Date | string
    updated_at?: DateTimeFilter<"product_attributes"> | Date | string
    product?: XOR<ProductsScalarRelationFilter, productsWhereInput>
    specification?: XOR<Product_specificationsScalarRelationFilter, product_specificationsWhereInput>
  }, "id">

  export type product_attributesOrderByWithAggregationInput = {
    id?: SortOrder
    product_id?: SortOrder
    specification_id?: SortOrder
    name?: SortOrder
    value?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: product_attributesCountOrderByAggregateInput
    _avg?: product_attributesAvgOrderByAggregateInput
    _max?: product_attributesMaxOrderByAggregateInput
    _min?: product_attributesMinOrderByAggregateInput
    _sum?: product_attributesSumOrderByAggregateInput
  }

  export type product_attributesScalarWhereWithAggregatesInput = {
    AND?: product_attributesScalarWhereWithAggregatesInput | product_attributesScalarWhereWithAggregatesInput[]
    OR?: product_attributesScalarWhereWithAggregatesInput[]
    NOT?: product_attributesScalarWhereWithAggregatesInput | product_attributesScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"product_attributes"> | number
    product_id?: IntWithAggregatesFilter<"product_attributes"> | number
    specification_id?: IntWithAggregatesFilter<"product_attributes"> | number
    name?: StringWithAggregatesFilter<"product_attributes"> | string
    value?: StringWithAggregatesFilter<"product_attributes"> | string
    created_at?: DateTimeWithAggregatesFilter<"product_attributes"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"product_attributes"> | Date | string
  }

  export type ordersWhereInput = {
    AND?: ordersWhereInput | ordersWhereInput[]
    OR?: ordersWhereInput[]
    NOT?: ordersWhereInput | ordersWhereInput[]
    id?: IntFilter<"orders"> | number
    uuid?: StringFilter<"orders"> | string
    user_id?: IntFilter<"orders"> | number
    address_id?: IntFilter<"orders"> | number
    total_amount?: FloatFilter<"orders"> | number
    status?: EnumOrderStatusEnumFilter<"orders"> | $Enums.OrderStatusEnum
    is_deleted?: BoolFilter<"orders"> | boolean
    created_at?: DateTimeFilter<"orders"> | Date | string
    updated_at?: DateTimeFilter<"orders"> | Date | string
    user?: XOR<UsersScalarRelationFilter, usersWhereInput>
    address?: XOR<AddressesScalarRelationFilter, addressesWhereInput>
    order_items?: Order_itemsListRelationFilter
    payments?: PaymentsListRelationFilter
  }

  export type ordersOrderByWithRelationInput = {
    id?: SortOrder
    uuid?: SortOrder
    user_id?: SortOrder
    address_id?: SortOrder
    total_amount?: SortOrder
    status?: SortOrder
    is_deleted?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    user?: usersOrderByWithRelationInput
    address?: addressesOrderByWithRelationInput
    order_items?: order_itemsOrderByRelationAggregateInput
    payments?: paymentsOrderByRelationAggregateInput
    _relevance?: ordersOrderByRelevanceInput
  }

  export type ordersWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    uuid?: string
    AND?: ordersWhereInput | ordersWhereInput[]
    OR?: ordersWhereInput[]
    NOT?: ordersWhereInput | ordersWhereInput[]
    user_id?: IntFilter<"orders"> | number
    address_id?: IntFilter<"orders"> | number
    total_amount?: FloatFilter<"orders"> | number
    status?: EnumOrderStatusEnumFilter<"orders"> | $Enums.OrderStatusEnum
    is_deleted?: BoolFilter<"orders"> | boolean
    created_at?: DateTimeFilter<"orders"> | Date | string
    updated_at?: DateTimeFilter<"orders"> | Date | string
    user?: XOR<UsersScalarRelationFilter, usersWhereInput>
    address?: XOR<AddressesScalarRelationFilter, addressesWhereInput>
    order_items?: Order_itemsListRelationFilter
    payments?: PaymentsListRelationFilter
  }, "id" | "uuid">

  export type ordersOrderByWithAggregationInput = {
    id?: SortOrder
    uuid?: SortOrder
    user_id?: SortOrder
    address_id?: SortOrder
    total_amount?: SortOrder
    status?: SortOrder
    is_deleted?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: ordersCountOrderByAggregateInput
    _avg?: ordersAvgOrderByAggregateInput
    _max?: ordersMaxOrderByAggregateInput
    _min?: ordersMinOrderByAggregateInput
    _sum?: ordersSumOrderByAggregateInput
  }

  export type ordersScalarWhereWithAggregatesInput = {
    AND?: ordersScalarWhereWithAggregatesInput | ordersScalarWhereWithAggregatesInput[]
    OR?: ordersScalarWhereWithAggregatesInput[]
    NOT?: ordersScalarWhereWithAggregatesInput | ordersScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"orders"> | number
    uuid?: StringWithAggregatesFilter<"orders"> | string
    user_id?: IntWithAggregatesFilter<"orders"> | number
    address_id?: IntWithAggregatesFilter<"orders"> | number
    total_amount?: FloatWithAggregatesFilter<"orders"> | number
    status?: EnumOrderStatusEnumWithAggregatesFilter<"orders"> | $Enums.OrderStatusEnum
    is_deleted?: BoolWithAggregatesFilter<"orders"> | boolean
    created_at?: DateTimeWithAggregatesFilter<"orders"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"orders"> | Date | string
  }

  export type order_itemsWhereInput = {
    AND?: order_itemsWhereInput | order_itemsWhereInput[]
    OR?: order_itemsWhereInput[]
    NOT?: order_itemsWhereInput | order_itemsWhereInput[]
    id?: IntFilter<"order_items"> | number
    order_id?: IntFilter<"order_items"> | number
    product_id?: IntFilter<"order_items"> | number
    quantity?: IntFilter<"order_items"> | number
    unit_price?: FloatFilter<"order_items"> | number
    created_at?: DateTimeFilter<"order_items"> | Date | string
    updated_at?: DateTimeFilter<"order_items"> | Date | string
    order?: XOR<OrdersScalarRelationFilter, ordersWhereInput>
    product?: XOR<ProductsScalarRelationFilter, productsWhereInput>
  }

  export type order_itemsOrderByWithRelationInput = {
    id?: SortOrder
    order_id?: SortOrder
    product_id?: SortOrder
    quantity?: SortOrder
    unit_price?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    order?: ordersOrderByWithRelationInput
    product?: productsOrderByWithRelationInput
  }

  export type order_itemsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: order_itemsWhereInput | order_itemsWhereInput[]
    OR?: order_itemsWhereInput[]
    NOT?: order_itemsWhereInput | order_itemsWhereInput[]
    order_id?: IntFilter<"order_items"> | number
    product_id?: IntFilter<"order_items"> | number
    quantity?: IntFilter<"order_items"> | number
    unit_price?: FloatFilter<"order_items"> | number
    created_at?: DateTimeFilter<"order_items"> | Date | string
    updated_at?: DateTimeFilter<"order_items"> | Date | string
    order?: XOR<OrdersScalarRelationFilter, ordersWhereInput>
    product?: XOR<ProductsScalarRelationFilter, productsWhereInput>
  }, "id">

  export type order_itemsOrderByWithAggregationInput = {
    id?: SortOrder
    order_id?: SortOrder
    product_id?: SortOrder
    quantity?: SortOrder
    unit_price?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: order_itemsCountOrderByAggregateInput
    _avg?: order_itemsAvgOrderByAggregateInput
    _max?: order_itemsMaxOrderByAggregateInput
    _min?: order_itemsMinOrderByAggregateInput
    _sum?: order_itemsSumOrderByAggregateInput
  }

  export type order_itemsScalarWhereWithAggregatesInput = {
    AND?: order_itemsScalarWhereWithAggregatesInput | order_itemsScalarWhereWithAggregatesInput[]
    OR?: order_itemsScalarWhereWithAggregatesInput[]
    NOT?: order_itemsScalarWhereWithAggregatesInput | order_itemsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"order_items"> | number
    order_id?: IntWithAggregatesFilter<"order_items"> | number
    product_id?: IntWithAggregatesFilter<"order_items"> | number
    quantity?: IntWithAggregatesFilter<"order_items"> | number
    unit_price?: FloatWithAggregatesFilter<"order_items"> | number
    created_at?: DateTimeWithAggregatesFilter<"order_items"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"order_items"> | Date | string
  }

  export type cart_itemsWhereInput = {
    AND?: cart_itemsWhereInput | cart_itemsWhereInput[]
    OR?: cart_itemsWhereInput[]
    NOT?: cart_itemsWhereInput | cart_itemsWhereInput[]
    id?: IntFilter<"cart_items"> | number
    user_id?: IntFilter<"cart_items"> | number
    product_id?: IntFilter<"cart_items"> | number
    quantity?: IntFilter<"cart_items"> | number
    created_at?: DateTimeFilter<"cart_items"> | Date | string
    updated_at?: DateTimeFilter<"cart_items"> | Date | string
    user?: XOR<UsersScalarRelationFilter, usersWhereInput>
    product?: XOR<ProductsScalarRelationFilter, productsWhereInput>
  }

  export type cart_itemsOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrder
    product_id?: SortOrder
    quantity?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    user?: usersOrderByWithRelationInput
    product?: productsOrderByWithRelationInput
  }

  export type cart_itemsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: cart_itemsWhereInput | cart_itemsWhereInput[]
    OR?: cart_itemsWhereInput[]
    NOT?: cart_itemsWhereInput | cart_itemsWhereInput[]
    user_id?: IntFilter<"cart_items"> | number
    product_id?: IntFilter<"cart_items"> | number
    quantity?: IntFilter<"cart_items"> | number
    created_at?: DateTimeFilter<"cart_items"> | Date | string
    updated_at?: DateTimeFilter<"cart_items"> | Date | string
    user?: XOR<UsersScalarRelationFilter, usersWhereInput>
    product?: XOR<ProductsScalarRelationFilter, productsWhereInput>
  }, "id">

  export type cart_itemsOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrder
    product_id?: SortOrder
    quantity?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: cart_itemsCountOrderByAggregateInput
    _avg?: cart_itemsAvgOrderByAggregateInput
    _max?: cart_itemsMaxOrderByAggregateInput
    _min?: cart_itemsMinOrderByAggregateInput
    _sum?: cart_itemsSumOrderByAggregateInput
  }

  export type cart_itemsScalarWhereWithAggregatesInput = {
    AND?: cart_itemsScalarWhereWithAggregatesInput | cart_itemsScalarWhereWithAggregatesInput[]
    OR?: cart_itemsScalarWhereWithAggregatesInput[]
    NOT?: cart_itemsScalarWhereWithAggregatesInput | cart_itemsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"cart_items"> | number
    user_id?: IntWithAggregatesFilter<"cart_items"> | number
    product_id?: IntWithAggregatesFilter<"cart_items"> | number
    quantity?: IntWithAggregatesFilter<"cart_items"> | number
    created_at?: DateTimeWithAggregatesFilter<"cart_items"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"cart_items"> | Date | string
  }

  export type reviewsWhereInput = {
    AND?: reviewsWhereInput | reviewsWhereInput[]
    OR?: reviewsWhereInput[]
    NOT?: reviewsWhereInput | reviewsWhereInput[]
    id?: IntFilter<"reviews"> | number
    uuid?: StringFilter<"reviews"> | string
    user_id?: IntFilter<"reviews"> | number
    product_id?: IntFilter<"reviews"> | number
    rating?: IntFilter<"reviews"> | number
    comment?: StringNullableFilter<"reviews"> | string | null
    is_deleted?: BoolFilter<"reviews"> | boolean
    created_at?: DateTimeFilter<"reviews"> | Date | string
    updated_at?: DateTimeFilter<"reviews"> | Date | string
    user?: XOR<UsersScalarRelationFilter, usersWhereInput>
    product?: XOR<ProductsScalarRelationFilter, productsWhereInput>
  }

  export type reviewsOrderByWithRelationInput = {
    id?: SortOrder
    uuid?: SortOrder
    user_id?: SortOrder
    product_id?: SortOrder
    rating?: SortOrder
    comment?: SortOrderInput | SortOrder
    is_deleted?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    user?: usersOrderByWithRelationInput
    product?: productsOrderByWithRelationInput
    _relevance?: reviewsOrderByRelevanceInput
  }

  export type reviewsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    uuid?: string
    AND?: reviewsWhereInput | reviewsWhereInput[]
    OR?: reviewsWhereInput[]
    NOT?: reviewsWhereInput | reviewsWhereInput[]
    user_id?: IntFilter<"reviews"> | number
    product_id?: IntFilter<"reviews"> | number
    rating?: IntFilter<"reviews"> | number
    comment?: StringNullableFilter<"reviews"> | string | null
    is_deleted?: BoolFilter<"reviews"> | boolean
    created_at?: DateTimeFilter<"reviews"> | Date | string
    updated_at?: DateTimeFilter<"reviews"> | Date | string
    user?: XOR<UsersScalarRelationFilter, usersWhereInput>
    product?: XOR<ProductsScalarRelationFilter, productsWhereInput>
  }, "id" | "uuid">

  export type reviewsOrderByWithAggregationInput = {
    id?: SortOrder
    uuid?: SortOrder
    user_id?: SortOrder
    product_id?: SortOrder
    rating?: SortOrder
    comment?: SortOrderInput | SortOrder
    is_deleted?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: reviewsCountOrderByAggregateInput
    _avg?: reviewsAvgOrderByAggregateInput
    _max?: reviewsMaxOrderByAggregateInput
    _min?: reviewsMinOrderByAggregateInput
    _sum?: reviewsSumOrderByAggregateInput
  }

  export type reviewsScalarWhereWithAggregatesInput = {
    AND?: reviewsScalarWhereWithAggregatesInput | reviewsScalarWhereWithAggregatesInput[]
    OR?: reviewsScalarWhereWithAggregatesInput[]
    NOT?: reviewsScalarWhereWithAggregatesInput | reviewsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"reviews"> | number
    uuid?: StringWithAggregatesFilter<"reviews"> | string
    user_id?: IntWithAggregatesFilter<"reviews"> | number
    product_id?: IntWithAggregatesFilter<"reviews"> | number
    rating?: IntWithAggregatesFilter<"reviews"> | number
    comment?: StringNullableWithAggregatesFilter<"reviews"> | string | null
    is_deleted?: BoolWithAggregatesFilter<"reviews"> | boolean
    created_at?: DateTimeWithAggregatesFilter<"reviews"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"reviews"> | Date | string
  }

  export type paymentsWhereInput = {
    AND?: paymentsWhereInput | paymentsWhereInput[]
    OR?: paymentsWhereInput[]
    NOT?: paymentsWhereInput | paymentsWhereInput[]
    id?: IntFilter<"payments"> | number
    uuid?: StringFilter<"payments"> | string
    order_id?: IntNullableFilter<"payments"> | number | null
    user_id?: IntFilter<"payments"> | number
    amount?: FloatFilter<"payments"> | number
    provider?: StringFilter<"payments"> | string
    transaction_id?: StringNullableFilter<"payments"> | string | null
    status?: EnumPaymentStatusEnumFilter<"payments"> | $Enums.PaymentStatusEnum
    items?: JsonNullableFilter<"payments">
    is_deleted?: BoolFilter<"payments"> | boolean
    created_at?: DateTimeFilter<"payments"> | Date | string
    updated_at?: DateTimeFilter<"payments"> | Date | string
    order?: XOR<OrdersNullableScalarRelationFilter, ordersWhereInput> | null
    user?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }

  export type paymentsOrderByWithRelationInput = {
    id?: SortOrder
    uuid?: SortOrder
    order_id?: SortOrderInput | SortOrder
    user_id?: SortOrder
    amount?: SortOrder
    provider?: SortOrder
    transaction_id?: SortOrderInput | SortOrder
    status?: SortOrder
    items?: SortOrderInput | SortOrder
    is_deleted?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    order?: ordersOrderByWithRelationInput
    user?: usersOrderByWithRelationInput
    _relevance?: paymentsOrderByRelevanceInput
  }

  export type paymentsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    uuid?: string
    AND?: paymentsWhereInput | paymentsWhereInput[]
    OR?: paymentsWhereInput[]
    NOT?: paymentsWhereInput | paymentsWhereInput[]
    order_id?: IntNullableFilter<"payments"> | number | null
    user_id?: IntFilter<"payments"> | number
    amount?: FloatFilter<"payments"> | number
    provider?: StringFilter<"payments"> | string
    transaction_id?: StringNullableFilter<"payments"> | string | null
    status?: EnumPaymentStatusEnumFilter<"payments"> | $Enums.PaymentStatusEnum
    items?: JsonNullableFilter<"payments">
    is_deleted?: BoolFilter<"payments"> | boolean
    created_at?: DateTimeFilter<"payments"> | Date | string
    updated_at?: DateTimeFilter<"payments"> | Date | string
    order?: XOR<OrdersNullableScalarRelationFilter, ordersWhereInput> | null
    user?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }, "id" | "uuid">

  export type paymentsOrderByWithAggregationInput = {
    id?: SortOrder
    uuid?: SortOrder
    order_id?: SortOrderInput | SortOrder
    user_id?: SortOrder
    amount?: SortOrder
    provider?: SortOrder
    transaction_id?: SortOrderInput | SortOrder
    status?: SortOrder
    items?: SortOrderInput | SortOrder
    is_deleted?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: paymentsCountOrderByAggregateInput
    _avg?: paymentsAvgOrderByAggregateInput
    _max?: paymentsMaxOrderByAggregateInput
    _min?: paymentsMinOrderByAggregateInput
    _sum?: paymentsSumOrderByAggregateInput
  }

  export type paymentsScalarWhereWithAggregatesInput = {
    AND?: paymentsScalarWhereWithAggregatesInput | paymentsScalarWhereWithAggregatesInput[]
    OR?: paymentsScalarWhereWithAggregatesInput[]
    NOT?: paymentsScalarWhereWithAggregatesInput | paymentsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"payments"> | number
    uuid?: StringWithAggregatesFilter<"payments"> | string
    order_id?: IntNullableWithAggregatesFilter<"payments"> | number | null
    user_id?: IntWithAggregatesFilter<"payments"> | number
    amount?: FloatWithAggregatesFilter<"payments"> | number
    provider?: StringWithAggregatesFilter<"payments"> | string
    transaction_id?: StringNullableWithAggregatesFilter<"payments"> | string | null
    status?: EnumPaymentStatusEnumWithAggregatesFilter<"payments"> | $Enums.PaymentStatusEnum
    items?: JsonNullableWithAggregatesFilter<"payments">
    is_deleted?: BoolWithAggregatesFilter<"payments"> | boolean
    created_at?: DateTimeWithAggregatesFilter<"payments"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"payments"> | Date | string
  }

  export type email_blacklistWhereInput = {
    AND?: email_blacklistWhereInput | email_blacklistWhereInput[]
    OR?: email_blacklistWhereInput[]
    NOT?: email_blacklistWhereInput | email_blacklistWhereInput[]
    id?: IntFilter<"email_blacklist"> | number
    email?: StringFilter<"email_blacklist"> | string
    created_at?: DateTimeFilter<"email_blacklist"> | Date | string
    updated_at?: DateTimeFilter<"email_blacklist"> | Date | string
  }

  export type email_blacklistOrderByWithRelationInput = {
    id?: SortOrder
    email?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _relevance?: email_blacklistOrderByRelevanceInput
  }

  export type email_blacklistWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    email?: string
    AND?: email_blacklistWhereInput | email_blacklistWhereInput[]
    OR?: email_blacklistWhereInput[]
    NOT?: email_blacklistWhereInput | email_blacklistWhereInput[]
    created_at?: DateTimeFilter<"email_blacklist"> | Date | string
    updated_at?: DateTimeFilter<"email_blacklist"> | Date | string
  }, "id" | "email">

  export type email_blacklistOrderByWithAggregationInput = {
    id?: SortOrder
    email?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: email_blacklistCountOrderByAggregateInput
    _avg?: email_blacklistAvgOrderByAggregateInput
    _max?: email_blacklistMaxOrderByAggregateInput
    _min?: email_blacklistMinOrderByAggregateInput
    _sum?: email_blacklistSumOrderByAggregateInput
  }

  export type email_blacklistScalarWhereWithAggregatesInput = {
    AND?: email_blacklistScalarWhereWithAggregatesInput | email_blacklistScalarWhereWithAggregatesInput[]
    OR?: email_blacklistScalarWhereWithAggregatesInput[]
    NOT?: email_blacklistScalarWhereWithAggregatesInput | email_blacklistScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"email_blacklist"> | number
    email?: StringWithAggregatesFilter<"email_blacklist"> | string
    created_at?: DateTimeWithAggregatesFilter<"email_blacklist"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"email_blacklist"> | Date | string
  }

  export type conversationsWhereInput = {
    AND?: conversationsWhereInput | conversationsWhereInput[]
    OR?: conversationsWhereInput[]
    NOT?: conversationsWhereInput | conversationsWhereInput[]
    id?: IntFilter<"conversations"> | number
    chat_id?: StringFilter<"conversations"> | string
    title?: StringNullableFilter<"conversations"> | string | null
    started_at?: DateTimeFilter<"conversations"> | Date | string
    user_id?: IntFilter<"conversations"> | number
    user?: XOR<UsersScalarRelationFilter, usersWhereInput>
    messages?: MessagesListRelationFilter
  }

  export type conversationsOrderByWithRelationInput = {
    id?: SortOrder
    chat_id?: SortOrder
    title?: SortOrderInput | SortOrder
    started_at?: SortOrder
    user_id?: SortOrder
    user?: usersOrderByWithRelationInput
    messages?: messagesOrderByRelationAggregateInput
    _relevance?: conversationsOrderByRelevanceInput
  }

  export type conversationsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    chat_id?: string
    AND?: conversationsWhereInput | conversationsWhereInput[]
    OR?: conversationsWhereInput[]
    NOT?: conversationsWhereInput | conversationsWhereInput[]
    title?: StringNullableFilter<"conversations"> | string | null
    started_at?: DateTimeFilter<"conversations"> | Date | string
    user_id?: IntFilter<"conversations"> | number
    user?: XOR<UsersScalarRelationFilter, usersWhereInput>
    messages?: MessagesListRelationFilter
  }, "id" | "chat_id">

  export type conversationsOrderByWithAggregationInput = {
    id?: SortOrder
    chat_id?: SortOrder
    title?: SortOrderInput | SortOrder
    started_at?: SortOrder
    user_id?: SortOrder
    _count?: conversationsCountOrderByAggregateInput
    _avg?: conversationsAvgOrderByAggregateInput
    _max?: conversationsMaxOrderByAggregateInput
    _min?: conversationsMinOrderByAggregateInput
    _sum?: conversationsSumOrderByAggregateInput
  }

  export type conversationsScalarWhereWithAggregatesInput = {
    AND?: conversationsScalarWhereWithAggregatesInput | conversationsScalarWhereWithAggregatesInput[]
    OR?: conversationsScalarWhereWithAggregatesInput[]
    NOT?: conversationsScalarWhereWithAggregatesInput | conversationsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"conversations"> | number
    chat_id?: StringWithAggregatesFilter<"conversations"> | string
    title?: StringNullableWithAggregatesFilter<"conversations"> | string | null
    started_at?: DateTimeWithAggregatesFilter<"conversations"> | Date | string
    user_id?: IntWithAggregatesFilter<"conversations"> | number
  }

  export type messagesWhereInput = {
    AND?: messagesWhereInput | messagesWhereInput[]
    OR?: messagesWhereInput[]
    NOT?: messagesWhereInput | messagesWhereInput[]
    id?: IntFilter<"messages"> | number
    chat_id?: StringFilter<"messages"> | string
    sender?: StringFilter<"messages"> | string
    message?: StringFilter<"messages"> | string
    created_at?: DateTimeFilter<"messages"> | Date | string
    conversation?: XOR<ConversationsScalarRelationFilter, conversationsWhereInput>
  }

  export type messagesOrderByWithRelationInput = {
    id?: SortOrder
    chat_id?: SortOrder
    sender?: SortOrder
    message?: SortOrder
    created_at?: SortOrder
    conversation?: conversationsOrderByWithRelationInput
    _relevance?: messagesOrderByRelevanceInput
  }

  export type messagesWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: messagesWhereInput | messagesWhereInput[]
    OR?: messagesWhereInput[]
    NOT?: messagesWhereInput | messagesWhereInput[]
    chat_id?: StringFilter<"messages"> | string
    sender?: StringFilter<"messages"> | string
    message?: StringFilter<"messages"> | string
    created_at?: DateTimeFilter<"messages"> | Date | string
    conversation?: XOR<ConversationsScalarRelationFilter, conversationsWhereInput>
  }, "id">

  export type messagesOrderByWithAggregationInput = {
    id?: SortOrder
    chat_id?: SortOrder
    sender?: SortOrder
    message?: SortOrder
    created_at?: SortOrder
    _count?: messagesCountOrderByAggregateInput
    _avg?: messagesAvgOrderByAggregateInput
    _max?: messagesMaxOrderByAggregateInput
    _min?: messagesMinOrderByAggregateInput
    _sum?: messagesSumOrderByAggregateInput
  }

  export type messagesScalarWhereWithAggregatesInput = {
    AND?: messagesScalarWhereWithAggregatesInput | messagesScalarWhereWithAggregatesInput[]
    OR?: messagesScalarWhereWithAggregatesInput[]
    NOT?: messagesScalarWhereWithAggregatesInput | messagesScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"messages"> | number
    chat_id?: StringWithAggregatesFilter<"messages"> | string
    sender?: StringWithAggregatesFilter<"messages"> | string
    message?: StringWithAggregatesFilter<"messages"> | string
    created_at?: DateTimeWithAggregatesFilter<"messages"> | Date | string
  }

  export type reset_password_tokenWhereInput = {
    AND?: reset_password_tokenWhereInput | reset_password_tokenWhereInput[]
    OR?: reset_password_tokenWhereInput[]
    NOT?: reset_password_tokenWhereInput | reset_password_tokenWhereInput[]
    id?: IntFilter<"reset_password_token"> | number
    user_id?: StringFilter<"reset_password_token"> | string
    token?: StringFilter<"reset_password_token"> | string
    expires_at?: DateTimeFilter<"reset_password_token"> | Date | string
    created_at?: DateTimeFilter<"reset_password_token"> | Date | string
    user?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }

  export type reset_password_tokenOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrder
    token?: SortOrder
    expires_at?: SortOrder
    created_at?: SortOrder
    user?: usersOrderByWithRelationInput
    _relevance?: reset_password_tokenOrderByRelevanceInput
  }

  export type reset_password_tokenWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: reset_password_tokenWhereInput | reset_password_tokenWhereInput[]
    OR?: reset_password_tokenWhereInput[]
    NOT?: reset_password_tokenWhereInput | reset_password_tokenWhereInput[]
    user_id?: StringFilter<"reset_password_token"> | string
    token?: StringFilter<"reset_password_token"> | string
    expires_at?: DateTimeFilter<"reset_password_token"> | Date | string
    created_at?: DateTimeFilter<"reset_password_token"> | Date | string
    user?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }, "id">

  export type reset_password_tokenOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrder
    token?: SortOrder
    expires_at?: SortOrder
    created_at?: SortOrder
    _count?: reset_password_tokenCountOrderByAggregateInput
    _avg?: reset_password_tokenAvgOrderByAggregateInput
    _max?: reset_password_tokenMaxOrderByAggregateInput
    _min?: reset_password_tokenMinOrderByAggregateInput
    _sum?: reset_password_tokenSumOrderByAggregateInput
  }

  export type reset_password_tokenScalarWhereWithAggregatesInput = {
    AND?: reset_password_tokenScalarWhereWithAggregatesInput | reset_password_tokenScalarWhereWithAggregatesInput[]
    OR?: reset_password_tokenScalarWhereWithAggregatesInput[]
    NOT?: reset_password_tokenScalarWhereWithAggregatesInput | reset_password_tokenScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"reset_password_token"> | number
    user_id?: StringWithAggregatesFilter<"reset_password_token"> | string
    token?: StringWithAggregatesFilter<"reset_password_token"> | string
    expires_at?: DateTimeWithAggregatesFilter<"reset_password_token"> | Date | string
    created_at?: DateTimeWithAggregatesFilter<"reset_password_token"> | Date | string
  }

  export type seller_hidden_usersWhereInput = {
    AND?: seller_hidden_usersWhereInput | seller_hidden_usersWhereInput[]
    OR?: seller_hidden_usersWhereInput[]
    NOT?: seller_hidden_usersWhereInput | seller_hidden_usersWhereInput[]
    id?: IntFilter<"seller_hidden_users"> | number
    seller_id?: IntFilter<"seller_hidden_users"> | number
    user_id?: IntFilter<"seller_hidden_users"> | number
    created_at?: DateTimeFilter<"seller_hidden_users"> | Date | string
    updated_at?: DateTimeFilter<"seller_hidden_users"> | Date | string
    seller?: XOR<UsersScalarRelationFilter, usersWhereInput>
    user?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }

  export type seller_hidden_usersOrderByWithRelationInput = {
    id?: SortOrder
    seller_id?: SortOrder
    user_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    seller?: usersOrderByWithRelationInput
    user?: usersOrderByWithRelationInput
  }

  export type seller_hidden_usersWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    seller_id_user_id?: seller_hidden_usersSeller_idUser_idCompoundUniqueInput
    AND?: seller_hidden_usersWhereInput | seller_hidden_usersWhereInput[]
    OR?: seller_hidden_usersWhereInput[]
    NOT?: seller_hidden_usersWhereInput | seller_hidden_usersWhereInput[]
    seller_id?: IntFilter<"seller_hidden_users"> | number
    user_id?: IntFilter<"seller_hidden_users"> | number
    created_at?: DateTimeFilter<"seller_hidden_users"> | Date | string
    updated_at?: DateTimeFilter<"seller_hidden_users"> | Date | string
    seller?: XOR<UsersScalarRelationFilter, usersWhereInput>
    user?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }, "id" | "seller_id_user_id">

  export type seller_hidden_usersOrderByWithAggregationInput = {
    id?: SortOrder
    seller_id?: SortOrder
    user_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: seller_hidden_usersCountOrderByAggregateInput
    _avg?: seller_hidden_usersAvgOrderByAggregateInput
    _max?: seller_hidden_usersMaxOrderByAggregateInput
    _min?: seller_hidden_usersMinOrderByAggregateInput
    _sum?: seller_hidden_usersSumOrderByAggregateInput
  }

  export type seller_hidden_usersScalarWhereWithAggregatesInput = {
    AND?: seller_hidden_usersScalarWhereWithAggregatesInput | seller_hidden_usersScalarWhereWithAggregatesInput[]
    OR?: seller_hidden_usersScalarWhereWithAggregatesInput[]
    NOT?: seller_hidden_usersScalarWhereWithAggregatesInput | seller_hidden_usersScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"seller_hidden_users"> | number
    seller_id?: IntWithAggregatesFilter<"seller_hidden_users"> | number
    user_id?: IntWithAggregatesFilter<"seller_hidden_users"> | number
    created_at?: DateTimeWithAggregatesFilter<"seller_hidden_users"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"seller_hidden_users"> | Date | string
  }

  export type usersCreateInput = {
    uuid: string
    username: string
    email: string
    full_name?: string | null
    password?: string | null
    phone_number?: string | null
    avatar?: string | null
    gender?: boolean | null
    day_of_birth?: string | null
    email_verified_at?: Date | string | null
    last_login?: Date | string | null
    is_public?: boolean
    is_activated?: boolean
    is_deleted?: boolean
    two_factor_enabled?: boolean
    provider?: string
    provider_id?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    role: rolesCreateNestedOneWithoutUsersInput
    addresses?: addressesCreateNestedManyWithoutUserInput
    orders?: ordersCreateNestedManyWithoutUserInput
    cart_items?: cart_itemsCreateNestedManyWithoutUserInput
    reviews?: reviewsCreateNestedManyWithoutUserInput
    payments?: paymentsCreateNestedManyWithoutUserInput
    conversations?: conversationsCreateNestedManyWithoutUserInput
    reset_password_token?: reset_password_tokenCreateNestedManyWithoutUserInput
    shops?: shopsCreateNestedManyWithoutSellerInput
    hidden_by_sellers?: seller_hidden_usersCreateNestedManyWithoutSellerInput
    hidden_users?: seller_hidden_usersCreateNestedManyWithoutUserInput
  }

  export type usersUncheckedCreateInput = {
    id?: number
    uuid: string
    username: string
    email: string
    full_name?: string | null
    password?: string | null
    phone_number?: string | null
    avatar?: string | null
    gender?: boolean | null
    day_of_birth?: string | null
    email_verified_at?: Date | string | null
    last_login?: Date | string | null
    role_id: number
    is_public?: boolean
    is_activated?: boolean
    is_deleted?: boolean
    two_factor_enabled?: boolean
    provider?: string
    provider_id?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    addresses?: addressesUncheckedCreateNestedManyWithoutUserInput
    orders?: ordersUncheckedCreateNestedManyWithoutUserInput
    cart_items?: cart_itemsUncheckedCreateNestedManyWithoutUserInput
    reviews?: reviewsUncheckedCreateNestedManyWithoutUserInput
    payments?: paymentsUncheckedCreateNestedManyWithoutUserInput
    conversations?: conversationsUncheckedCreateNestedManyWithoutUserInput
    reset_password_token?: reset_password_tokenUncheckedCreateNestedManyWithoutUserInput
    shops?: shopsUncheckedCreateNestedManyWithoutSellerInput
    hidden_by_sellers?: seller_hidden_usersUncheckedCreateNestedManyWithoutSellerInput
    hidden_users?: seller_hidden_usersUncheckedCreateNestedManyWithoutUserInput
  }

  export type usersUpdateInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    full_name?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableBoolFieldUpdateOperationsInput | boolean | null
    day_of_birth?: NullableStringFieldUpdateOperationsInput | string | null
    email_verified_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_public?: BoolFieldUpdateOperationsInput | boolean
    is_activated?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    two_factor_enabled?: BoolFieldUpdateOperationsInput | boolean
    provider?: StringFieldUpdateOperationsInput | string
    provider_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: rolesUpdateOneRequiredWithoutUsersNestedInput
    addresses?: addressesUpdateManyWithoutUserNestedInput
    orders?: ordersUpdateManyWithoutUserNestedInput
    cart_items?: cart_itemsUpdateManyWithoutUserNestedInput
    reviews?: reviewsUpdateManyWithoutUserNestedInput
    payments?: paymentsUpdateManyWithoutUserNestedInput
    conversations?: conversationsUpdateManyWithoutUserNestedInput
    reset_password_token?: reset_password_tokenUpdateManyWithoutUserNestedInput
    shops?: shopsUpdateManyWithoutSellerNestedInput
    hidden_by_sellers?: seller_hidden_usersUpdateManyWithoutSellerNestedInput
    hidden_users?: seller_hidden_usersUpdateManyWithoutUserNestedInput
  }

  export type usersUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    uuid?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    full_name?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableBoolFieldUpdateOperationsInput | boolean | null
    day_of_birth?: NullableStringFieldUpdateOperationsInput | string | null
    email_verified_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    role_id?: IntFieldUpdateOperationsInput | number
    is_public?: BoolFieldUpdateOperationsInput | boolean
    is_activated?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    two_factor_enabled?: BoolFieldUpdateOperationsInput | boolean
    provider?: StringFieldUpdateOperationsInput | string
    provider_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    addresses?: addressesUncheckedUpdateManyWithoutUserNestedInput
    orders?: ordersUncheckedUpdateManyWithoutUserNestedInput
    cart_items?: cart_itemsUncheckedUpdateManyWithoutUserNestedInput
    reviews?: reviewsUncheckedUpdateManyWithoutUserNestedInput
    payments?: paymentsUncheckedUpdateManyWithoutUserNestedInput
    conversations?: conversationsUncheckedUpdateManyWithoutUserNestedInput
    reset_password_token?: reset_password_tokenUncheckedUpdateManyWithoutUserNestedInput
    shops?: shopsUncheckedUpdateManyWithoutSellerNestedInput
    hidden_by_sellers?: seller_hidden_usersUncheckedUpdateManyWithoutSellerNestedInput
    hidden_users?: seller_hidden_usersUncheckedUpdateManyWithoutUserNestedInput
  }

  export type usersCreateManyInput = {
    id?: number
    uuid: string
    username: string
    email: string
    full_name?: string | null
    password?: string | null
    phone_number?: string | null
    avatar?: string | null
    gender?: boolean | null
    day_of_birth?: string | null
    email_verified_at?: Date | string | null
    last_login?: Date | string | null
    role_id: number
    is_public?: boolean
    is_activated?: boolean
    is_deleted?: boolean
    two_factor_enabled?: boolean
    provider?: string
    provider_id?: string | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type usersUpdateManyMutationInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    full_name?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableBoolFieldUpdateOperationsInput | boolean | null
    day_of_birth?: NullableStringFieldUpdateOperationsInput | string | null
    email_verified_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_public?: BoolFieldUpdateOperationsInput | boolean
    is_activated?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    two_factor_enabled?: BoolFieldUpdateOperationsInput | boolean
    provider?: StringFieldUpdateOperationsInput | string
    provider_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type usersUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    uuid?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    full_name?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableBoolFieldUpdateOperationsInput | boolean | null
    day_of_birth?: NullableStringFieldUpdateOperationsInput | string | null
    email_verified_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    role_id?: IntFieldUpdateOperationsInput | number
    is_public?: BoolFieldUpdateOperationsInput | boolean
    is_activated?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    two_factor_enabled?: BoolFieldUpdateOperationsInput | boolean
    provider?: StringFieldUpdateOperationsInput | string
    provider_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type rolesCreateInput = {
    name: $Enums.RoleEnum
    created_at?: Date | string
    updated_at?: Date | string
    users?: usersCreateNestedManyWithoutRoleInput
    role_permissions?: role_permissionsCreateNestedManyWithoutRoleInput
  }

  export type rolesUncheckedCreateInput = {
    id?: number
    name: $Enums.RoleEnum
    created_at?: Date | string
    updated_at?: Date | string
    users?: usersUncheckedCreateNestedManyWithoutRoleInput
    role_permissions?: role_permissionsUncheckedCreateNestedManyWithoutRoleInput
  }

  export type rolesUpdateInput = {
    name?: EnumRoleEnumFieldUpdateOperationsInput | $Enums.RoleEnum
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: usersUpdateManyWithoutRoleNestedInput
    role_permissions?: role_permissionsUpdateManyWithoutRoleNestedInput
  }

  export type rolesUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: EnumRoleEnumFieldUpdateOperationsInput | $Enums.RoleEnum
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: usersUncheckedUpdateManyWithoutRoleNestedInput
    role_permissions?: role_permissionsUncheckedUpdateManyWithoutRoleNestedInput
  }

  export type rolesCreateManyInput = {
    id?: number
    name: $Enums.RoleEnum
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type rolesUpdateManyMutationInput = {
    name?: EnumRoleEnumFieldUpdateOperationsInput | $Enums.RoleEnum
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type rolesUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: EnumRoleEnumFieldUpdateOperationsInput | $Enums.RoleEnum
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type permissionsCreateInput = {
    name: $Enums.PermissionEnum
    created_at?: Date | string
    updated_at?: Date | string
    role_permissions?: role_permissionsCreateNestedManyWithoutPermissionInput
  }

  export type permissionsUncheckedCreateInput = {
    id?: number
    name: $Enums.PermissionEnum
    created_at?: Date | string
    updated_at?: Date | string
    role_permissions?: role_permissionsUncheckedCreateNestedManyWithoutPermissionInput
  }

  export type permissionsUpdateInput = {
    name?: EnumPermissionEnumFieldUpdateOperationsInput | $Enums.PermissionEnum
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    role_permissions?: role_permissionsUpdateManyWithoutPermissionNestedInput
  }

  export type permissionsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: EnumPermissionEnumFieldUpdateOperationsInput | $Enums.PermissionEnum
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    role_permissions?: role_permissionsUncheckedUpdateManyWithoutPermissionNestedInput
  }

  export type permissionsCreateManyInput = {
    id?: number
    name: $Enums.PermissionEnum
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type permissionsUpdateManyMutationInput = {
    name?: EnumPermissionEnumFieldUpdateOperationsInput | $Enums.PermissionEnum
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type permissionsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: EnumPermissionEnumFieldUpdateOperationsInput | $Enums.PermissionEnum
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type role_permissionsCreateInput = {
    created_at?: Date | string
    updated_at?: Date | string
    role: rolesCreateNestedOneWithoutRole_permissionsInput
    permission: permissionsCreateNestedOneWithoutRole_permissionsInput
  }

  export type role_permissionsUncheckedCreateInput = {
    id?: number
    role_id: number
    permission_id: number
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type role_permissionsUpdateInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: rolesUpdateOneRequiredWithoutRole_permissionsNestedInput
    permission?: permissionsUpdateOneRequiredWithoutRole_permissionsNestedInput
  }

  export type role_permissionsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    role_id?: IntFieldUpdateOperationsInput | number
    permission_id?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type role_permissionsCreateManyInput = {
    id?: number
    role_id: number
    permission_id: number
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type role_permissionsUpdateManyMutationInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type role_permissionsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    role_id?: IntFieldUpdateOperationsInput | number
    permission_id?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type shopsCreateInput = {
    uuid: string
    name: string
    slug: string
    description?: string | null
    logo?: string | null
    rating?: number | null
    is_active?: boolean
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    seller: usersCreateNestedOneWithoutShopsInput
    address?: addressesCreateNestedOneWithoutShopsInput
    products?: productsCreateNestedManyWithoutShopInput
  }

  export type shopsUncheckedCreateInput = {
    id?: number
    uuid: string
    seller_id: number
    name: string
    slug: string
    description?: string | null
    logo?: string | null
    address_id?: number | null
    rating?: number | null
    is_active?: boolean
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    products?: productsUncheckedCreateNestedManyWithoutShopInput
  }

  export type shopsUpdateInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    rating?: NullableFloatFieldUpdateOperationsInput | number | null
    is_active?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    seller?: usersUpdateOneRequiredWithoutShopsNestedInput
    address?: addressesUpdateOneWithoutShopsNestedInput
    products?: productsUpdateManyWithoutShopNestedInput
  }

  export type shopsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    uuid?: StringFieldUpdateOperationsInput | string
    seller_id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    address_id?: NullableIntFieldUpdateOperationsInput | number | null
    rating?: NullableFloatFieldUpdateOperationsInput | number | null
    is_active?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    products?: productsUncheckedUpdateManyWithoutShopNestedInput
  }

  export type shopsCreateManyInput = {
    id?: number
    uuid: string
    seller_id: number
    name: string
    slug: string
    description?: string | null
    logo?: string | null
    address_id?: number | null
    rating?: number | null
    is_active?: boolean
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type shopsUpdateManyMutationInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    rating?: NullableFloatFieldUpdateOperationsInput | number | null
    is_active?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type shopsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    uuid?: StringFieldUpdateOperationsInput | string
    seller_id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    address_id?: NullableIntFieldUpdateOperationsInput | number | null
    rating?: NullableFloatFieldUpdateOperationsInput | number | null
    is_active?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type addressesCreateInput = {
    full_name: string
    phone_number: string
    address: string
    province_id?: number | null
    province_name?: string | null
    district_id?: number | null
    district_name?: string | null
    ward_code?: string | null
    ward_name?: string | null
    region_id?: number | null
    type_address?: $Enums.AddressTypeEnum | null
    is_default?: boolean
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    user: usersCreateNestedOneWithoutAddressesInput
    orders?: ordersCreateNestedManyWithoutAddressInput
    shops?: shopsCreateNestedManyWithoutAddressInput
  }

  export type addressesUncheckedCreateInput = {
    id?: number
    user_id: number
    full_name: string
    phone_number: string
    address: string
    province_id?: number | null
    province_name?: string | null
    district_id?: number | null
    district_name?: string | null
    ward_code?: string | null
    ward_name?: string | null
    region_id?: number | null
    type_address?: $Enums.AddressTypeEnum | null
    is_default?: boolean
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    orders?: ordersUncheckedCreateNestedManyWithoutAddressInput
    shops?: shopsUncheckedCreateNestedManyWithoutAddressInput
  }

  export type addressesUpdateInput = {
    full_name?: StringFieldUpdateOperationsInput | string
    phone_number?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    province_id?: NullableIntFieldUpdateOperationsInput | number | null
    province_name?: NullableStringFieldUpdateOperationsInput | string | null
    district_id?: NullableIntFieldUpdateOperationsInput | number | null
    district_name?: NullableStringFieldUpdateOperationsInput | string | null
    ward_code?: NullableStringFieldUpdateOperationsInput | string | null
    ward_name?: NullableStringFieldUpdateOperationsInput | string | null
    region_id?: NullableIntFieldUpdateOperationsInput | number | null
    type_address?: NullableEnumAddressTypeEnumFieldUpdateOperationsInput | $Enums.AddressTypeEnum | null
    is_default?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: usersUpdateOneRequiredWithoutAddressesNestedInput
    orders?: ordersUpdateManyWithoutAddressNestedInput
    shops?: shopsUpdateManyWithoutAddressNestedInput
  }

  export type addressesUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    full_name?: StringFieldUpdateOperationsInput | string
    phone_number?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    province_id?: NullableIntFieldUpdateOperationsInput | number | null
    province_name?: NullableStringFieldUpdateOperationsInput | string | null
    district_id?: NullableIntFieldUpdateOperationsInput | number | null
    district_name?: NullableStringFieldUpdateOperationsInput | string | null
    ward_code?: NullableStringFieldUpdateOperationsInput | string | null
    ward_name?: NullableStringFieldUpdateOperationsInput | string | null
    region_id?: NullableIntFieldUpdateOperationsInput | number | null
    type_address?: NullableEnumAddressTypeEnumFieldUpdateOperationsInput | $Enums.AddressTypeEnum | null
    is_default?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    orders?: ordersUncheckedUpdateManyWithoutAddressNestedInput
    shops?: shopsUncheckedUpdateManyWithoutAddressNestedInput
  }

  export type addressesCreateManyInput = {
    id?: number
    user_id: number
    full_name: string
    phone_number: string
    address: string
    province_id?: number | null
    province_name?: string | null
    district_id?: number | null
    district_name?: string | null
    ward_code?: string | null
    ward_name?: string | null
    region_id?: number | null
    type_address?: $Enums.AddressTypeEnum | null
    is_default?: boolean
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type addressesUpdateManyMutationInput = {
    full_name?: StringFieldUpdateOperationsInput | string
    phone_number?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    province_id?: NullableIntFieldUpdateOperationsInput | number | null
    province_name?: NullableStringFieldUpdateOperationsInput | string | null
    district_id?: NullableIntFieldUpdateOperationsInput | number | null
    district_name?: NullableStringFieldUpdateOperationsInput | string | null
    ward_code?: NullableStringFieldUpdateOperationsInput | string | null
    ward_name?: NullableStringFieldUpdateOperationsInput | string | null
    region_id?: NullableIntFieldUpdateOperationsInput | number | null
    type_address?: NullableEnumAddressTypeEnumFieldUpdateOperationsInput | $Enums.AddressTypeEnum | null
    is_default?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type addressesUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    full_name?: StringFieldUpdateOperationsInput | string
    phone_number?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    province_id?: NullableIntFieldUpdateOperationsInput | number | null
    province_name?: NullableStringFieldUpdateOperationsInput | string | null
    district_id?: NullableIntFieldUpdateOperationsInput | number | null
    district_name?: NullableStringFieldUpdateOperationsInput | string | null
    ward_code?: NullableStringFieldUpdateOperationsInput | string | null
    ward_name?: NullableStringFieldUpdateOperationsInput | string | null
    region_id?: NullableIntFieldUpdateOperationsInput | number | null
    type_address?: NullableEnumAddressTypeEnumFieldUpdateOperationsInput | $Enums.AddressTypeEnum | null
    is_default?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type productsCreateInput = {
    uuid: string
    name: string
    slug: string
    description?: string | null
    old_price?: number | null
    new_price: number
    discount_percentage?: number | null
    stock?: number
    sold?: number
    weight?: number | null
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    category?: categoriesCreateNestedOneWithoutProductsInput
    shop?: shopsCreateNestedOneWithoutProductsInput
    cart_items?: cart_itemsCreateNestedManyWithoutProductInput
    order_items?: order_itemsCreateNestedManyWithoutProductInput
    reviews?: reviewsCreateNestedManyWithoutProductInput
    product_images?: product_imagesCreateNestedManyWithoutProductInput
    product_specifications?: product_specificationsCreateNestedManyWithoutProductInput
    product_attributes?: product_attributesCreateNestedManyWithoutProductInput
  }

  export type productsUncheckedCreateInput = {
    id?: number
    uuid: string
    name: string
    slug: string
    description?: string | null
    old_price?: number | null
    new_price: number
    discount_percentage?: number | null
    stock?: number
    sold?: number
    weight?: number | null
    category_id?: number | null
    shop_id?: number | null
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    cart_items?: cart_itemsUncheckedCreateNestedManyWithoutProductInput
    order_items?: order_itemsUncheckedCreateNestedManyWithoutProductInput
    reviews?: reviewsUncheckedCreateNestedManyWithoutProductInput
    product_images?: product_imagesUncheckedCreateNestedManyWithoutProductInput
    product_specifications?: product_specificationsUncheckedCreateNestedManyWithoutProductInput
    product_attributes?: product_attributesUncheckedCreateNestedManyWithoutProductInput
  }

  export type productsUpdateInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    old_price?: NullableFloatFieldUpdateOperationsInput | number | null
    new_price?: FloatFieldUpdateOperationsInput | number
    discount_percentage?: NullableFloatFieldUpdateOperationsInput | number | null
    stock?: IntFieldUpdateOperationsInput | number
    sold?: IntFieldUpdateOperationsInput | number
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: categoriesUpdateOneWithoutProductsNestedInput
    shop?: shopsUpdateOneWithoutProductsNestedInput
    cart_items?: cart_itemsUpdateManyWithoutProductNestedInput
    order_items?: order_itemsUpdateManyWithoutProductNestedInput
    reviews?: reviewsUpdateManyWithoutProductNestedInput
    product_images?: product_imagesUpdateManyWithoutProductNestedInput
    product_specifications?: product_specificationsUpdateManyWithoutProductNestedInput
    product_attributes?: product_attributesUpdateManyWithoutProductNestedInput
  }

  export type productsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    uuid?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    old_price?: NullableFloatFieldUpdateOperationsInput | number | null
    new_price?: FloatFieldUpdateOperationsInput | number
    discount_percentage?: NullableFloatFieldUpdateOperationsInput | number | null
    stock?: IntFieldUpdateOperationsInput | number
    sold?: IntFieldUpdateOperationsInput | number
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    category_id?: NullableIntFieldUpdateOperationsInput | number | null
    shop_id?: NullableIntFieldUpdateOperationsInput | number | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    cart_items?: cart_itemsUncheckedUpdateManyWithoutProductNestedInput
    order_items?: order_itemsUncheckedUpdateManyWithoutProductNestedInput
    reviews?: reviewsUncheckedUpdateManyWithoutProductNestedInput
    product_images?: product_imagesUncheckedUpdateManyWithoutProductNestedInput
    product_specifications?: product_specificationsUncheckedUpdateManyWithoutProductNestedInput
    product_attributes?: product_attributesUncheckedUpdateManyWithoutProductNestedInput
  }

  export type productsCreateManyInput = {
    id?: number
    uuid: string
    name: string
    slug: string
    description?: string | null
    old_price?: number | null
    new_price: number
    discount_percentage?: number | null
    stock?: number
    sold?: number
    weight?: number | null
    category_id?: number | null
    shop_id?: number | null
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type productsUpdateManyMutationInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    old_price?: NullableFloatFieldUpdateOperationsInput | number | null
    new_price?: FloatFieldUpdateOperationsInput | number
    discount_percentage?: NullableFloatFieldUpdateOperationsInput | number | null
    stock?: IntFieldUpdateOperationsInput | number
    sold?: IntFieldUpdateOperationsInput | number
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type productsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    uuid?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    old_price?: NullableFloatFieldUpdateOperationsInput | number | null
    new_price?: FloatFieldUpdateOperationsInput | number
    discount_percentage?: NullableFloatFieldUpdateOperationsInput | number | null
    stock?: IntFieldUpdateOperationsInput | number
    sold?: IntFieldUpdateOperationsInput | number
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    category_id?: NullableIntFieldUpdateOperationsInput | number | null
    shop_id?: NullableIntFieldUpdateOperationsInput | number | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type categoriesCreateInput = {
    uuid: string
    name: string
    icon?: string | null
    slug: string
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    parent?: categoriesCreateNestedOneWithoutChildrenInput
    children?: categoriesCreateNestedManyWithoutParentInput
    products?: productsCreateNestedManyWithoutCategoryInput
    category_breadcrumbs?: category_breadcrumbsCreateNestedManyWithoutCategoryInput
  }

  export type categoriesUncheckedCreateInput = {
    id?: number
    uuid: string
    name: string
    icon?: string | null
    slug: string
    parent_id?: number | null
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    children?: categoriesUncheckedCreateNestedManyWithoutParentInput
    products?: productsUncheckedCreateNestedManyWithoutCategoryInput
    category_breadcrumbs?: category_breadcrumbsUncheckedCreateNestedManyWithoutCategoryInput
  }

  export type categoriesUpdateInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: StringFieldUpdateOperationsInput | string
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    parent?: categoriesUpdateOneWithoutChildrenNestedInput
    children?: categoriesUpdateManyWithoutParentNestedInput
    products?: productsUpdateManyWithoutCategoryNestedInput
    category_breadcrumbs?: category_breadcrumbsUpdateManyWithoutCategoryNestedInput
  }

  export type categoriesUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    uuid?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: StringFieldUpdateOperationsInput | string
    parent_id?: NullableIntFieldUpdateOperationsInput | number | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    children?: categoriesUncheckedUpdateManyWithoutParentNestedInput
    products?: productsUncheckedUpdateManyWithoutCategoryNestedInput
    category_breadcrumbs?: category_breadcrumbsUncheckedUpdateManyWithoutCategoryNestedInput
  }

  export type categoriesCreateManyInput = {
    id?: number
    uuid: string
    name: string
    icon?: string | null
    slug: string
    parent_id?: number | null
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type categoriesUpdateManyMutationInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: StringFieldUpdateOperationsInput | string
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type categoriesUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    uuid?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: StringFieldUpdateOperationsInput | string
    parent_id?: NullableIntFieldUpdateOperationsInput | number | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type category_breadcrumbsCreateInput = {
    name: string
    path: string
    level: number
    created_at?: Date | string
    updated_at?: Date | string
    category: categoriesCreateNestedOneWithoutCategory_breadcrumbsInput
  }

  export type category_breadcrumbsUncheckedCreateInput = {
    id?: number
    category_id: number
    name: string
    path: string
    level: number
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type category_breadcrumbsUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    path?: StringFieldUpdateOperationsInput | string
    level?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: categoriesUpdateOneRequiredWithoutCategory_breadcrumbsNestedInput
  }

  export type category_breadcrumbsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    category_id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    path?: StringFieldUpdateOperationsInput | string
    level?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type category_breadcrumbsCreateManyInput = {
    id?: number
    category_id: number
    name: string
    path: string
    level: number
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type category_breadcrumbsUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    path?: StringFieldUpdateOperationsInput | string
    level?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type category_breadcrumbsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    category_id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    path?: StringFieldUpdateOperationsInput | string
    level?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type product_imagesCreateInput = {
    url: string
    is_primary?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    product: productsCreateNestedOneWithoutProduct_imagesInput
  }

  export type product_imagesUncheckedCreateInput = {
    id?: number
    product_id: number
    url: string
    is_primary?: boolean
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type product_imagesUpdateInput = {
    url?: StringFieldUpdateOperationsInput | string
    is_primary?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    product?: productsUpdateOneRequiredWithoutProduct_imagesNestedInput
  }

  export type product_imagesUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    product_id?: IntFieldUpdateOperationsInput | number
    url?: StringFieldUpdateOperationsInput | string
    is_primary?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type product_imagesCreateManyInput = {
    id?: number
    product_id: number
    url: string
    is_primary?: boolean
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type product_imagesUpdateManyMutationInput = {
    url?: StringFieldUpdateOperationsInput | string
    is_primary?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type product_imagesUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    product_id?: IntFieldUpdateOperationsInput | number
    url?: StringFieldUpdateOperationsInput | string
    is_primary?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type product_specificationsCreateInput = {
    key: string
    value: string
    created_at?: Date | string
    updated_at?: Date | string
    product: productsCreateNestedOneWithoutProduct_specificationsInput
    product_attributes?: product_attributesCreateNestedManyWithoutSpecificationInput
  }

  export type product_specificationsUncheckedCreateInput = {
    id?: number
    product_id: number
    key: string
    value: string
    created_at?: Date | string
    updated_at?: Date | string
    product_attributes?: product_attributesUncheckedCreateNestedManyWithoutSpecificationInput
  }

  export type product_specificationsUpdateInput = {
    key?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    product?: productsUpdateOneRequiredWithoutProduct_specificationsNestedInput
    product_attributes?: product_attributesUpdateManyWithoutSpecificationNestedInput
  }

  export type product_specificationsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    product_id?: IntFieldUpdateOperationsInput | number
    key?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    product_attributes?: product_attributesUncheckedUpdateManyWithoutSpecificationNestedInput
  }

  export type product_specificationsCreateManyInput = {
    id?: number
    product_id: number
    key: string
    value: string
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type product_specificationsUpdateManyMutationInput = {
    key?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type product_specificationsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    product_id?: IntFieldUpdateOperationsInput | number
    key?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type product_attributesCreateInput = {
    name: string
    value: string
    created_at?: Date | string
    updated_at?: Date | string
    product: productsCreateNestedOneWithoutProduct_attributesInput
    specification: product_specificationsCreateNestedOneWithoutProduct_attributesInput
  }

  export type product_attributesUncheckedCreateInput = {
    id?: number
    product_id: number
    specification_id: number
    name: string
    value: string
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type product_attributesUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    product?: productsUpdateOneRequiredWithoutProduct_attributesNestedInput
    specification?: product_specificationsUpdateOneRequiredWithoutProduct_attributesNestedInput
  }

  export type product_attributesUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    product_id?: IntFieldUpdateOperationsInput | number
    specification_id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type product_attributesCreateManyInput = {
    id?: number
    product_id: number
    specification_id: number
    name: string
    value: string
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type product_attributesUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type product_attributesUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    product_id?: IntFieldUpdateOperationsInput | number
    specification_id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ordersCreateInput = {
    uuid: string
    total_amount: number
    status?: $Enums.OrderStatusEnum
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    user: usersCreateNestedOneWithoutOrdersInput
    address: addressesCreateNestedOneWithoutOrdersInput
    order_items?: order_itemsCreateNestedManyWithoutOrderInput
    payments?: paymentsCreateNestedManyWithoutOrderInput
  }

  export type ordersUncheckedCreateInput = {
    id?: number
    uuid: string
    user_id: number
    address_id: number
    total_amount: number
    status?: $Enums.OrderStatusEnum
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    order_items?: order_itemsUncheckedCreateNestedManyWithoutOrderInput
    payments?: paymentsUncheckedCreateNestedManyWithoutOrderInput
  }

  export type ordersUpdateInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    total_amount?: FloatFieldUpdateOperationsInput | number
    status?: EnumOrderStatusEnumFieldUpdateOperationsInput | $Enums.OrderStatusEnum
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: usersUpdateOneRequiredWithoutOrdersNestedInput
    address?: addressesUpdateOneRequiredWithoutOrdersNestedInput
    order_items?: order_itemsUpdateManyWithoutOrderNestedInput
    payments?: paymentsUpdateManyWithoutOrderNestedInput
  }

  export type ordersUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    uuid?: StringFieldUpdateOperationsInput | string
    user_id?: IntFieldUpdateOperationsInput | number
    address_id?: IntFieldUpdateOperationsInput | number
    total_amount?: FloatFieldUpdateOperationsInput | number
    status?: EnumOrderStatusEnumFieldUpdateOperationsInput | $Enums.OrderStatusEnum
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    order_items?: order_itemsUncheckedUpdateManyWithoutOrderNestedInput
    payments?: paymentsUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type ordersCreateManyInput = {
    id?: number
    uuid: string
    user_id: number
    address_id: number
    total_amount: number
    status?: $Enums.OrderStatusEnum
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type ordersUpdateManyMutationInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    total_amount?: FloatFieldUpdateOperationsInput | number
    status?: EnumOrderStatusEnumFieldUpdateOperationsInput | $Enums.OrderStatusEnum
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ordersUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    uuid?: StringFieldUpdateOperationsInput | string
    user_id?: IntFieldUpdateOperationsInput | number
    address_id?: IntFieldUpdateOperationsInput | number
    total_amount?: FloatFieldUpdateOperationsInput | number
    status?: EnumOrderStatusEnumFieldUpdateOperationsInput | $Enums.OrderStatusEnum
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type order_itemsCreateInput = {
    quantity: number
    unit_price: number
    created_at?: Date | string
    updated_at?: Date | string
    order: ordersCreateNestedOneWithoutOrder_itemsInput
    product: productsCreateNestedOneWithoutOrder_itemsInput
  }

  export type order_itemsUncheckedCreateInput = {
    id?: number
    order_id: number
    product_id: number
    quantity: number
    unit_price: number
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type order_itemsUpdateInput = {
    quantity?: IntFieldUpdateOperationsInput | number
    unit_price?: FloatFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    order?: ordersUpdateOneRequiredWithoutOrder_itemsNestedInput
    product?: productsUpdateOneRequiredWithoutOrder_itemsNestedInput
  }

  export type order_itemsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    order_id?: IntFieldUpdateOperationsInput | number
    product_id?: IntFieldUpdateOperationsInput | number
    quantity?: IntFieldUpdateOperationsInput | number
    unit_price?: FloatFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type order_itemsCreateManyInput = {
    id?: number
    order_id: number
    product_id: number
    quantity: number
    unit_price: number
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type order_itemsUpdateManyMutationInput = {
    quantity?: IntFieldUpdateOperationsInput | number
    unit_price?: FloatFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type order_itemsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    order_id?: IntFieldUpdateOperationsInput | number
    product_id?: IntFieldUpdateOperationsInput | number
    quantity?: IntFieldUpdateOperationsInput | number
    unit_price?: FloatFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type cart_itemsCreateInput = {
    quantity: number
    created_at?: Date | string
    updated_at?: Date | string
    user: usersCreateNestedOneWithoutCart_itemsInput
    product: productsCreateNestedOneWithoutCart_itemsInput
  }

  export type cart_itemsUncheckedCreateInput = {
    id?: number
    user_id: number
    product_id: number
    quantity: number
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type cart_itemsUpdateInput = {
    quantity?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: usersUpdateOneRequiredWithoutCart_itemsNestedInput
    product?: productsUpdateOneRequiredWithoutCart_itemsNestedInput
  }

  export type cart_itemsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    product_id?: IntFieldUpdateOperationsInput | number
    quantity?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type cart_itemsCreateManyInput = {
    id?: number
    user_id: number
    product_id: number
    quantity: number
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type cart_itemsUpdateManyMutationInput = {
    quantity?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type cart_itemsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    product_id?: IntFieldUpdateOperationsInput | number
    quantity?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type reviewsCreateInput = {
    uuid: string
    rating: number
    comment?: string | null
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    user: usersCreateNestedOneWithoutReviewsInput
    product: productsCreateNestedOneWithoutReviewsInput
  }

  export type reviewsUncheckedCreateInput = {
    id?: number
    uuid: string
    user_id: number
    product_id: number
    rating: number
    comment?: string | null
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type reviewsUpdateInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    rating?: IntFieldUpdateOperationsInput | number
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: usersUpdateOneRequiredWithoutReviewsNestedInput
    product?: productsUpdateOneRequiredWithoutReviewsNestedInput
  }

  export type reviewsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    uuid?: StringFieldUpdateOperationsInput | string
    user_id?: IntFieldUpdateOperationsInput | number
    product_id?: IntFieldUpdateOperationsInput | number
    rating?: IntFieldUpdateOperationsInput | number
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type reviewsCreateManyInput = {
    id?: number
    uuid: string
    user_id: number
    product_id: number
    rating: number
    comment?: string | null
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type reviewsUpdateManyMutationInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    rating?: IntFieldUpdateOperationsInput | number
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type reviewsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    uuid?: StringFieldUpdateOperationsInput | string
    user_id?: IntFieldUpdateOperationsInput | number
    product_id?: IntFieldUpdateOperationsInput | number
    rating?: IntFieldUpdateOperationsInput | number
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type paymentsCreateInput = {
    uuid: string
    amount: number
    provider: string
    transaction_id?: string | null
    status?: $Enums.PaymentStatusEnum
    items?: NullableJsonNullValueInput | InputJsonValue
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    order?: ordersCreateNestedOneWithoutPaymentsInput
    user: usersCreateNestedOneWithoutPaymentsInput
  }

  export type paymentsUncheckedCreateInput = {
    id?: number
    uuid: string
    order_id?: number | null
    user_id: number
    amount: number
    provider: string
    transaction_id?: string | null
    status?: $Enums.PaymentStatusEnum
    items?: NullableJsonNullValueInput | InputJsonValue
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type paymentsUpdateInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    provider?: StringFieldUpdateOperationsInput | string
    transaction_id?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumPaymentStatusEnumFieldUpdateOperationsInput | $Enums.PaymentStatusEnum
    items?: NullableJsonNullValueInput | InputJsonValue
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    order?: ordersUpdateOneWithoutPaymentsNestedInput
    user?: usersUpdateOneRequiredWithoutPaymentsNestedInput
  }

  export type paymentsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    uuid?: StringFieldUpdateOperationsInput | string
    order_id?: NullableIntFieldUpdateOperationsInput | number | null
    user_id?: IntFieldUpdateOperationsInput | number
    amount?: FloatFieldUpdateOperationsInput | number
    provider?: StringFieldUpdateOperationsInput | string
    transaction_id?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumPaymentStatusEnumFieldUpdateOperationsInput | $Enums.PaymentStatusEnum
    items?: NullableJsonNullValueInput | InputJsonValue
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type paymentsCreateManyInput = {
    id?: number
    uuid: string
    order_id?: number | null
    user_id: number
    amount: number
    provider: string
    transaction_id?: string | null
    status?: $Enums.PaymentStatusEnum
    items?: NullableJsonNullValueInput | InputJsonValue
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type paymentsUpdateManyMutationInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    provider?: StringFieldUpdateOperationsInput | string
    transaction_id?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumPaymentStatusEnumFieldUpdateOperationsInput | $Enums.PaymentStatusEnum
    items?: NullableJsonNullValueInput | InputJsonValue
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type paymentsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    uuid?: StringFieldUpdateOperationsInput | string
    order_id?: NullableIntFieldUpdateOperationsInput | number | null
    user_id?: IntFieldUpdateOperationsInput | number
    amount?: FloatFieldUpdateOperationsInput | number
    provider?: StringFieldUpdateOperationsInput | string
    transaction_id?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumPaymentStatusEnumFieldUpdateOperationsInput | $Enums.PaymentStatusEnum
    items?: NullableJsonNullValueInput | InputJsonValue
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type email_blacklistCreateInput = {
    email: string
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type email_blacklistUncheckedCreateInput = {
    id?: number
    email: string
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type email_blacklistUpdateInput = {
    email?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type email_blacklistUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type email_blacklistCreateManyInput = {
    id?: number
    email: string
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type email_blacklistUpdateManyMutationInput = {
    email?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type email_blacklistUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type conversationsCreateInput = {
    chat_id: string
    title?: string | null
    started_at?: Date | string
    user: usersCreateNestedOneWithoutConversationsInput
    messages?: messagesCreateNestedManyWithoutConversationInput
  }

  export type conversationsUncheckedCreateInput = {
    id?: number
    chat_id: string
    title?: string | null
    started_at?: Date | string
    user_id: number
    messages?: messagesUncheckedCreateNestedManyWithoutConversationInput
  }

  export type conversationsUpdateInput = {
    chat_id?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    started_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: usersUpdateOneRequiredWithoutConversationsNestedInput
    messages?: messagesUpdateManyWithoutConversationNestedInput
  }

  export type conversationsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    chat_id?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    started_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: IntFieldUpdateOperationsInput | number
    messages?: messagesUncheckedUpdateManyWithoutConversationNestedInput
  }

  export type conversationsCreateManyInput = {
    id?: number
    chat_id: string
    title?: string | null
    started_at?: Date | string
    user_id: number
  }

  export type conversationsUpdateManyMutationInput = {
    chat_id?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    started_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type conversationsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    chat_id?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    started_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: IntFieldUpdateOperationsInput | number
  }

  export type messagesCreateInput = {
    sender: string
    message: string
    created_at?: Date | string
    conversation: conversationsCreateNestedOneWithoutMessagesInput
  }

  export type messagesUncheckedCreateInput = {
    id?: number
    chat_id: string
    sender: string
    message: string
    created_at?: Date | string
  }

  export type messagesUpdateInput = {
    sender?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    conversation?: conversationsUpdateOneRequiredWithoutMessagesNestedInput
  }

  export type messagesUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    chat_id?: StringFieldUpdateOperationsInput | string
    sender?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type messagesCreateManyInput = {
    id?: number
    chat_id: string
    sender: string
    message: string
    created_at?: Date | string
  }

  export type messagesUpdateManyMutationInput = {
    sender?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type messagesUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    chat_id?: StringFieldUpdateOperationsInput | string
    sender?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type reset_password_tokenCreateInput = {
    token: string
    expires_at: Date | string
    created_at?: Date | string
    user: usersCreateNestedOneWithoutReset_password_tokenInput
  }

  export type reset_password_tokenUncheckedCreateInput = {
    id?: number
    user_id: string
    token: string
    expires_at: Date | string
    created_at?: Date | string
  }

  export type reset_password_tokenUpdateInput = {
    token?: StringFieldUpdateOperationsInput | string
    expires_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: usersUpdateOneRequiredWithoutReset_password_tokenNestedInput
  }

  export type reset_password_tokenUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expires_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type reset_password_tokenCreateManyInput = {
    id?: number
    user_id: string
    token: string
    expires_at: Date | string
    created_at?: Date | string
  }

  export type reset_password_tokenUpdateManyMutationInput = {
    token?: StringFieldUpdateOperationsInput | string
    expires_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type reset_password_tokenUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expires_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type seller_hidden_usersCreateInput = {
    created_at?: Date | string
    updated_at?: Date | string
    seller: usersCreateNestedOneWithoutHidden_by_sellersInput
    user: usersCreateNestedOneWithoutHidden_usersInput
  }

  export type seller_hidden_usersUncheckedCreateInput = {
    id?: number
    seller_id: number
    user_id: number
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type seller_hidden_usersUpdateInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    seller?: usersUpdateOneRequiredWithoutHidden_by_sellersNestedInput
    user?: usersUpdateOneRequiredWithoutHidden_usersNestedInput
  }

  export type seller_hidden_usersUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    seller_id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type seller_hidden_usersCreateManyInput = {
    id?: number
    seller_id: number
    user_id: number
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type seller_hidden_usersUpdateManyMutationInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type seller_hidden_usersUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    seller_id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type BoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type RolesScalarRelationFilter = {
    is?: rolesWhereInput
    isNot?: rolesWhereInput
  }

  export type AddressesListRelationFilter = {
    every?: addressesWhereInput
    some?: addressesWhereInput
    none?: addressesWhereInput
  }

  export type OrdersListRelationFilter = {
    every?: ordersWhereInput
    some?: ordersWhereInput
    none?: ordersWhereInput
  }

  export type Cart_itemsListRelationFilter = {
    every?: cart_itemsWhereInput
    some?: cart_itemsWhereInput
    none?: cart_itemsWhereInput
  }

  export type ReviewsListRelationFilter = {
    every?: reviewsWhereInput
    some?: reviewsWhereInput
    none?: reviewsWhereInput
  }

  export type PaymentsListRelationFilter = {
    every?: paymentsWhereInput
    some?: paymentsWhereInput
    none?: paymentsWhereInput
  }

  export type ConversationsListRelationFilter = {
    every?: conversationsWhereInput
    some?: conversationsWhereInput
    none?: conversationsWhereInput
  }

  export type Reset_password_tokenListRelationFilter = {
    every?: reset_password_tokenWhereInput
    some?: reset_password_tokenWhereInput
    none?: reset_password_tokenWhereInput
  }

  export type ShopsListRelationFilter = {
    every?: shopsWhereInput
    some?: shopsWhereInput
    none?: shopsWhereInput
  }

  export type Seller_hidden_usersListRelationFilter = {
    every?: seller_hidden_usersWhereInput
    some?: seller_hidden_usersWhereInput
    none?: seller_hidden_usersWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type addressesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ordersOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type cart_itemsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type reviewsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type paymentsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type conversationsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type reset_password_tokenOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type shopsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type seller_hidden_usersOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type usersOrderByRelevanceInput = {
    fields: usersOrderByRelevanceFieldEnum | usersOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type usersEmailProviderCompoundUniqueInput = {
    email: string
    provider: string
  }

  export type usersCountOrderByAggregateInput = {
    id?: SortOrder
    uuid?: SortOrder
    username?: SortOrder
    email?: SortOrder
    full_name?: SortOrder
    password?: SortOrder
    phone_number?: SortOrder
    avatar?: SortOrder
    gender?: SortOrder
    day_of_birth?: SortOrder
    email_verified_at?: SortOrder
    last_login?: SortOrder
    role_id?: SortOrder
    is_public?: SortOrder
    is_activated?: SortOrder
    is_deleted?: SortOrder
    two_factor_enabled?: SortOrder
    provider?: SortOrder
    provider_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type usersAvgOrderByAggregateInput = {
    id?: SortOrder
    role_id?: SortOrder
  }

  export type usersMaxOrderByAggregateInput = {
    id?: SortOrder
    uuid?: SortOrder
    username?: SortOrder
    email?: SortOrder
    full_name?: SortOrder
    password?: SortOrder
    phone_number?: SortOrder
    avatar?: SortOrder
    gender?: SortOrder
    day_of_birth?: SortOrder
    email_verified_at?: SortOrder
    last_login?: SortOrder
    role_id?: SortOrder
    is_public?: SortOrder
    is_activated?: SortOrder
    is_deleted?: SortOrder
    two_factor_enabled?: SortOrder
    provider?: SortOrder
    provider_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type usersMinOrderByAggregateInput = {
    id?: SortOrder
    uuid?: SortOrder
    username?: SortOrder
    email?: SortOrder
    full_name?: SortOrder
    password?: SortOrder
    phone_number?: SortOrder
    avatar?: SortOrder
    gender?: SortOrder
    day_of_birth?: SortOrder
    email_verified_at?: SortOrder
    last_login?: SortOrder
    role_id?: SortOrder
    is_public?: SortOrder
    is_activated?: SortOrder
    is_deleted?: SortOrder
    two_factor_enabled?: SortOrder
    provider?: SortOrder
    provider_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type usersSumOrderByAggregateInput = {
    id?: SortOrder
    role_id?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type BoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type EnumRoleEnumFilter<$PrismaModel = never> = {
    equals?: $Enums.RoleEnum | EnumRoleEnumFieldRefInput<$PrismaModel>
    in?: $Enums.RoleEnum[]
    notIn?: $Enums.RoleEnum[]
    not?: NestedEnumRoleEnumFilter<$PrismaModel> | $Enums.RoleEnum
  }

  export type UsersListRelationFilter = {
    every?: usersWhereInput
    some?: usersWhereInput
    none?: usersWhereInput
  }

  export type Role_permissionsListRelationFilter = {
    every?: role_permissionsWhereInput
    some?: role_permissionsWhereInput
    none?: role_permissionsWhereInput
  }

  export type usersOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type role_permissionsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type rolesCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type rolesAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type rolesMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type rolesMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type rolesSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type EnumRoleEnumWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.RoleEnum | EnumRoleEnumFieldRefInput<$PrismaModel>
    in?: $Enums.RoleEnum[]
    notIn?: $Enums.RoleEnum[]
    not?: NestedEnumRoleEnumWithAggregatesFilter<$PrismaModel> | $Enums.RoleEnum
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumRoleEnumFilter<$PrismaModel>
    _max?: NestedEnumRoleEnumFilter<$PrismaModel>
  }

  export type EnumPermissionEnumFilter<$PrismaModel = never> = {
    equals?: $Enums.PermissionEnum | EnumPermissionEnumFieldRefInput<$PrismaModel>
    in?: $Enums.PermissionEnum[]
    notIn?: $Enums.PermissionEnum[]
    not?: NestedEnumPermissionEnumFilter<$PrismaModel> | $Enums.PermissionEnum
  }

  export type permissionsCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type permissionsAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type permissionsMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type permissionsMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type permissionsSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type EnumPermissionEnumWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PermissionEnum | EnumPermissionEnumFieldRefInput<$PrismaModel>
    in?: $Enums.PermissionEnum[]
    notIn?: $Enums.PermissionEnum[]
    not?: NestedEnumPermissionEnumWithAggregatesFilter<$PrismaModel> | $Enums.PermissionEnum
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPermissionEnumFilter<$PrismaModel>
    _max?: NestedEnumPermissionEnumFilter<$PrismaModel>
  }

  export type PermissionsScalarRelationFilter = {
    is?: permissionsWhereInput
    isNot?: permissionsWhereInput
  }

  export type role_permissionsRole_idPermission_idCompoundUniqueInput = {
    role_id: number
    permission_id: number
  }

  export type role_permissionsCountOrderByAggregateInput = {
    id?: SortOrder
    role_id?: SortOrder
    permission_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type role_permissionsAvgOrderByAggregateInput = {
    id?: SortOrder
    role_id?: SortOrder
    permission_id?: SortOrder
  }

  export type role_permissionsMaxOrderByAggregateInput = {
    id?: SortOrder
    role_id?: SortOrder
    permission_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type role_permissionsMinOrderByAggregateInput = {
    id?: SortOrder
    role_id?: SortOrder
    permission_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type role_permissionsSumOrderByAggregateInput = {
    id?: SortOrder
    role_id?: SortOrder
    permission_id?: SortOrder
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type FloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type UsersScalarRelationFilter = {
    is?: usersWhereInput
    isNot?: usersWhereInput
  }

  export type AddressesNullableScalarRelationFilter = {
    is?: addressesWhereInput | null
    isNot?: addressesWhereInput | null
  }

  export type ProductsListRelationFilter = {
    every?: productsWhereInput
    some?: productsWhereInput
    none?: productsWhereInput
  }

  export type productsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type shopsOrderByRelevanceInput = {
    fields: shopsOrderByRelevanceFieldEnum | shopsOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type shopsCountOrderByAggregateInput = {
    id?: SortOrder
    uuid?: SortOrder
    seller_id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    description?: SortOrder
    logo?: SortOrder
    address_id?: SortOrder
    rating?: SortOrder
    is_active?: SortOrder
    is_deleted?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type shopsAvgOrderByAggregateInput = {
    id?: SortOrder
    seller_id?: SortOrder
    address_id?: SortOrder
    rating?: SortOrder
  }

  export type shopsMaxOrderByAggregateInput = {
    id?: SortOrder
    uuid?: SortOrder
    seller_id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    description?: SortOrder
    logo?: SortOrder
    address_id?: SortOrder
    rating?: SortOrder
    is_active?: SortOrder
    is_deleted?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type shopsMinOrderByAggregateInput = {
    id?: SortOrder
    uuid?: SortOrder
    seller_id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    description?: SortOrder
    logo?: SortOrder
    address_id?: SortOrder
    rating?: SortOrder
    is_active?: SortOrder
    is_deleted?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type shopsSumOrderByAggregateInput = {
    id?: SortOrder
    seller_id?: SortOrder
    address_id?: SortOrder
    rating?: SortOrder
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type FloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type EnumAddressTypeEnumNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.AddressTypeEnum | EnumAddressTypeEnumFieldRefInput<$PrismaModel> | null
    in?: $Enums.AddressTypeEnum[] | null
    notIn?: $Enums.AddressTypeEnum[] | null
    not?: NestedEnumAddressTypeEnumNullableFilter<$PrismaModel> | $Enums.AddressTypeEnum | null
  }

  export type addressesOrderByRelevanceInput = {
    fields: addressesOrderByRelevanceFieldEnum | addressesOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type addressesCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    full_name?: SortOrder
    phone_number?: SortOrder
    address?: SortOrder
    province_id?: SortOrder
    province_name?: SortOrder
    district_id?: SortOrder
    district_name?: SortOrder
    ward_code?: SortOrder
    ward_name?: SortOrder
    region_id?: SortOrder
    type_address?: SortOrder
    is_default?: SortOrder
    is_deleted?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type addressesAvgOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    province_id?: SortOrder
    district_id?: SortOrder
    region_id?: SortOrder
  }

  export type addressesMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    full_name?: SortOrder
    phone_number?: SortOrder
    address?: SortOrder
    province_id?: SortOrder
    province_name?: SortOrder
    district_id?: SortOrder
    district_name?: SortOrder
    ward_code?: SortOrder
    ward_name?: SortOrder
    region_id?: SortOrder
    type_address?: SortOrder
    is_default?: SortOrder
    is_deleted?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type addressesMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    full_name?: SortOrder
    phone_number?: SortOrder
    address?: SortOrder
    province_id?: SortOrder
    province_name?: SortOrder
    district_id?: SortOrder
    district_name?: SortOrder
    ward_code?: SortOrder
    ward_name?: SortOrder
    region_id?: SortOrder
    type_address?: SortOrder
    is_default?: SortOrder
    is_deleted?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type addressesSumOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    province_id?: SortOrder
    district_id?: SortOrder
    region_id?: SortOrder
  }

  export type EnumAddressTypeEnumNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.AddressTypeEnum | EnumAddressTypeEnumFieldRefInput<$PrismaModel> | null
    in?: $Enums.AddressTypeEnum[] | null
    notIn?: $Enums.AddressTypeEnum[] | null
    not?: NestedEnumAddressTypeEnumNullableWithAggregatesFilter<$PrismaModel> | $Enums.AddressTypeEnum | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumAddressTypeEnumNullableFilter<$PrismaModel>
    _max?: NestedEnumAddressTypeEnumNullableFilter<$PrismaModel>
  }

  export type FloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type CategoriesNullableScalarRelationFilter = {
    is?: categoriesWhereInput | null
    isNot?: categoriesWhereInput | null
  }

  export type ShopsNullableScalarRelationFilter = {
    is?: shopsWhereInput | null
    isNot?: shopsWhereInput | null
  }

  export type Order_itemsListRelationFilter = {
    every?: order_itemsWhereInput
    some?: order_itemsWhereInput
    none?: order_itemsWhereInput
  }

  export type Product_imagesListRelationFilter = {
    every?: product_imagesWhereInput
    some?: product_imagesWhereInput
    none?: product_imagesWhereInput
  }

  export type Product_specificationsListRelationFilter = {
    every?: product_specificationsWhereInput
    some?: product_specificationsWhereInput
    none?: product_specificationsWhereInput
  }

  export type Product_attributesListRelationFilter = {
    every?: product_attributesWhereInput
    some?: product_attributesWhereInput
    none?: product_attributesWhereInput
  }

  export type order_itemsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type product_imagesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type product_specificationsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type product_attributesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type productsOrderByRelevanceInput = {
    fields: productsOrderByRelevanceFieldEnum | productsOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type productsCountOrderByAggregateInput = {
    id?: SortOrder
    uuid?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    description?: SortOrder
    old_price?: SortOrder
    new_price?: SortOrder
    discount_percentage?: SortOrder
    stock?: SortOrder
    sold?: SortOrder
    weight?: SortOrder
    category_id?: SortOrder
    shop_id?: SortOrder
    is_deleted?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type productsAvgOrderByAggregateInput = {
    id?: SortOrder
    old_price?: SortOrder
    new_price?: SortOrder
    discount_percentage?: SortOrder
    stock?: SortOrder
    sold?: SortOrder
    weight?: SortOrder
    category_id?: SortOrder
    shop_id?: SortOrder
  }

  export type productsMaxOrderByAggregateInput = {
    id?: SortOrder
    uuid?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    description?: SortOrder
    old_price?: SortOrder
    new_price?: SortOrder
    discount_percentage?: SortOrder
    stock?: SortOrder
    sold?: SortOrder
    weight?: SortOrder
    category_id?: SortOrder
    shop_id?: SortOrder
    is_deleted?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type productsMinOrderByAggregateInput = {
    id?: SortOrder
    uuid?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    description?: SortOrder
    old_price?: SortOrder
    new_price?: SortOrder
    discount_percentage?: SortOrder
    stock?: SortOrder
    sold?: SortOrder
    weight?: SortOrder
    category_id?: SortOrder
    shop_id?: SortOrder
    is_deleted?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type productsSumOrderByAggregateInput = {
    id?: SortOrder
    old_price?: SortOrder
    new_price?: SortOrder
    discount_percentage?: SortOrder
    stock?: SortOrder
    sold?: SortOrder
    weight?: SortOrder
    category_id?: SortOrder
    shop_id?: SortOrder
  }

  export type FloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type CategoriesListRelationFilter = {
    every?: categoriesWhereInput
    some?: categoriesWhereInput
    none?: categoriesWhereInput
  }

  export type Category_breadcrumbsListRelationFilter = {
    every?: category_breadcrumbsWhereInput
    some?: category_breadcrumbsWhereInput
    none?: category_breadcrumbsWhereInput
  }

  export type categoriesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type category_breadcrumbsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type categoriesOrderByRelevanceInput = {
    fields: categoriesOrderByRelevanceFieldEnum | categoriesOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type categoriesCountOrderByAggregateInput = {
    id?: SortOrder
    uuid?: SortOrder
    name?: SortOrder
    icon?: SortOrder
    slug?: SortOrder
    parent_id?: SortOrder
    is_deleted?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type categoriesAvgOrderByAggregateInput = {
    id?: SortOrder
    parent_id?: SortOrder
  }

  export type categoriesMaxOrderByAggregateInput = {
    id?: SortOrder
    uuid?: SortOrder
    name?: SortOrder
    icon?: SortOrder
    slug?: SortOrder
    parent_id?: SortOrder
    is_deleted?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type categoriesMinOrderByAggregateInput = {
    id?: SortOrder
    uuid?: SortOrder
    name?: SortOrder
    icon?: SortOrder
    slug?: SortOrder
    parent_id?: SortOrder
    is_deleted?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type categoriesSumOrderByAggregateInput = {
    id?: SortOrder
    parent_id?: SortOrder
  }

  export type CategoriesScalarRelationFilter = {
    is?: categoriesWhereInput
    isNot?: categoriesWhereInput
  }

  export type category_breadcrumbsOrderByRelevanceInput = {
    fields: category_breadcrumbsOrderByRelevanceFieldEnum | category_breadcrumbsOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type category_breadcrumbsCountOrderByAggregateInput = {
    id?: SortOrder
    category_id?: SortOrder
    name?: SortOrder
    path?: SortOrder
    level?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type category_breadcrumbsAvgOrderByAggregateInput = {
    id?: SortOrder
    category_id?: SortOrder
    level?: SortOrder
  }

  export type category_breadcrumbsMaxOrderByAggregateInput = {
    id?: SortOrder
    category_id?: SortOrder
    name?: SortOrder
    path?: SortOrder
    level?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type category_breadcrumbsMinOrderByAggregateInput = {
    id?: SortOrder
    category_id?: SortOrder
    name?: SortOrder
    path?: SortOrder
    level?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type category_breadcrumbsSumOrderByAggregateInput = {
    id?: SortOrder
    category_id?: SortOrder
    level?: SortOrder
  }

  export type ProductsScalarRelationFilter = {
    is?: productsWhereInput
    isNot?: productsWhereInput
  }

  export type product_imagesOrderByRelevanceInput = {
    fields: product_imagesOrderByRelevanceFieldEnum | product_imagesOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type product_imagesCountOrderByAggregateInput = {
    id?: SortOrder
    product_id?: SortOrder
    url?: SortOrder
    is_primary?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type product_imagesAvgOrderByAggregateInput = {
    id?: SortOrder
    product_id?: SortOrder
  }

  export type product_imagesMaxOrderByAggregateInput = {
    id?: SortOrder
    product_id?: SortOrder
    url?: SortOrder
    is_primary?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type product_imagesMinOrderByAggregateInput = {
    id?: SortOrder
    product_id?: SortOrder
    url?: SortOrder
    is_primary?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type product_imagesSumOrderByAggregateInput = {
    id?: SortOrder
    product_id?: SortOrder
  }

  export type product_specificationsOrderByRelevanceInput = {
    fields: product_specificationsOrderByRelevanceFieldEnum | product_specificationsOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type product_specificationsCountOrderByAggregateInput = {
    id?: SortOrder
    product_id?: SortOrder
    key?: SortOrder
    value?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type product_specificationsAvgOrderByAggregateInput = {
    id?: SortOrder
    product_id?: SortOrder
  }

  export type product_specificationsMaxOrderByAggregateInput = {
    id?: SortOrder
    product_id?: SortOrder
    key?: SortOrder
    value?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type product_specificationsMinOrderByAggregateInput = {
    id?: SortOrder
    product_id?: SortOrder
    key?: SortOrder
    value?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type product_specificationsSumOrderByAggregateInput = {
    id?: SortOrder
    product_id?: SortOrder
  }

  export type Product_specificationsScalarRelationFilter = {
    is?: product_specificationsWhereInput
    isNot?: product_specificationsWhereInput
  }

  export type product_attributesOrderByRelevanceInput = {
    fields: product_attributesOrderByRelevanceFieldEnum | product_attributesOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type product_attributesCountOrderByAggregateInput = {
    id?: SortOrder
    product_id?: SortOrder
    specification_id?: SortOrder
    name?: SortOrder
    value?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type product_attributesAvgOrderByAggregateInput = {
    id?: SortOrder
    product_id?: SortOrder
    specification_id?: SortOrder
  }

  export type product_attributesMaxOrderByAggregateInput = {
    id?: SortOrder
    product_id?: SortOrder
    specification_id?: SortOrder
    name?: SortOrder
    value?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type product_attributesMinOrderByAggregateInput = {
    id?: SortOrder
    product_id?: SortOrder
    specification_id?: SortOrder
    name?: SortOrder
    value?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type product_attributesSumOrderByAggregateInput = {
    id?: SortOrder
    product_id?: SortOrder
    specification_id?: SortOrder
  }

  export type EnumOrderStatusEnumFilter<$PrismaModel = never> = {
    equals?: $Enums.OrderStatusEnum | EnumOrderStatusEnumFieldRefInput<$PrismaModel>
    in?: $Enums.OrderStatusEnum[]
    notIn?: $Enums.OrderStatusEnum[]
    not?: NestedEnumOrderStatusEnumFilter<$PrismaModel> | $Enums.OrderStatusEnum
  }

  export type AddressesScalarRelationFilter = {
    is?: addressesWhereInput
    isNot?: addressesWhereInput
  }

  export type ordersOrderByRelevanceInput = {
    fields: ordersOrderByRelevanceFieldEnum | ordersOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type ordersCountOrderByAggregateInput = {
    id?: SortOrder
    uuid?: SortOrder
    user_id?: SortOrder
    address_id?: SortOrder
    total_amount?: SortOrder
    status?: SortOrder
    is_deleted?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type ordersAvgOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    address_id?: SortOrder
    total_amount?: SortOrder
  }

  export type ordersMaxOrderByAggregateInput = {
    id?: SortOrder
    uuid?: SortOrder
    user_id?: SortOrder
    address_id?: SortOrder
    total_amount?: SortOrder
    status?: SortOrder
    is_deleted?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type ordersMinOrderByAggregateInput = {
    id?: SortOrder
    uuid?: SortOrder
    user_id?: SortOrder
    address_id?: SortOrder
    total_amount?: SortOrder
    status?: SortOrder
    is_deleted?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type ordersSumOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    address_id?: SortOrder
    total_amount?: SortOrder
  }

  export type EnumOrderStatusEnumWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.OrderStatusEnum | EnumOrderStatusEnumFieldRefInput<$PrismaModel>
    in?: $Enums.OrderStatusEnum[]
    notIn?: $Enums.OrderStatusEnum[]
    not?: NestedEnumOrderStatusEnumWithAggregatesFilter<$PrismaModel> | $Enums.OrderStatusEnum
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumOrderStatusEnumFilter<$PrismaModel>
    _max?: NestedEnumOrderStatusEnumFilter<$PrismaModel>
  }

  export type OrdersScalarRelationFilter = {
    is?: ordersWhereInput
    isNot?: ordersWhereInput
  }

  export type order_itemsCountOrderByAggregateInput = {
    id?: SortOrder
    order_id?: SortOrder
    product_id?: SortOrder
    quantity?: SortOrder
    unit_price?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type order_itemsAvgOrderByAggregateInput = {
    id?: SortOrder
    order_id?: SortOrder
    product_id?: SortOrder
    quantity?: SortOrder
    unit_price?: SortOrder
  }

  export type order_itemsMaxOrderByAggregateInput = {
    id?: SortOrder
    order_id?: SortOrder
    product_id?: SortOrder
    quantity?: SortOrder
    unit_price?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type order_itemsMinOrderByAggregateInput = {
    id?: SortOrder
    order_id?: SortOrder
    product_id?: SortOrder
    quantity?: SortOrder
    unit_price?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type order_itemsSumOrderByAggregateInput = {
    id?: SortOrder
    order_id?: SortOrder
    product_id?: SortOrder
    quantity?: SortOrder
    unit_price?: SortOrder
  }

  export type cart_itemsCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    product_id?: SortOrder
    quantity?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type cart_itemsAvgOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    product_id?: SortOrder
    quantity?: SortOrder
  }

  export type cart_itemsMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    product_id?: SortOrder
    quantity?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type cart_itemsMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    product_id?: SortOrder
    quantity?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type cart_itemsSumOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    product_id?: SortOrder
    quantity?: SortOrder
  }

  export type reviewsOrderByRelevanceInput = {
    fields: reviewsOrderByRelevanceFieldEnum | reviewsOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type reviewsCountOrderByAggregateInput = {
    id?: SortOrder
    uuid?: SortOrder
    user_id?: SortOrder
    product_id?: SortOrder
    rating?: SortOrder
    comment?: SortOrder
    is_deleted?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type reviewsAvgOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    product_id?: SortOrder
    rating?: SortOrder
  }

  export type reviewsMaxOrderByAggregateInput = {
    id?: SortOrder
    uuid?: SortOrder
    user_id?: SortOrder
    product_id?: SortOrder
    rating?: SortOrder
    comment?: SortOrder
    is_deleted?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type reviewsMinOrderByAggregateInput = {
    id?: SortOrder
    uuid?: SortOrder
    user_id?: SortOrder
    product_id?: SortOrder
    rating?: SortOrder
    comment?: SortOrder
    is_deleted?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type reviewsSumOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    product_id?: SortOrder
    rating?: SortOrder
  }

  export type EnumPaymentStatusEnumFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentStatusEnum | EnumPaymentStatusEnumFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentStatusEnum[]
    notIn?: $Enums.PaymentStatusEnum[]
    not?: NestedEnumPaymentStatusEnumFilter<$PrismaModel> | $Enums.PaymentStatusEnum
  }
  export type JsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue
    lte?: InputJsonValue
    gt?: InputJsonValue
    gte?: InputJsonValue
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type OrdersNullableScalarRelationFilter = {
    is?: ordersWhereInput | null
    isNot?: ordersWhereInput | null
  }

  export type paymentsOrderByRelevanceInput = {
    fields: paymentsOrderByRelevanceFieldEnum | paymentsOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type paymentsCountOrderByAggregateInput = {
    id?: SortOrder
    uuid?: SortOrder
    order_id?: SortOrder
    user_id?: SortOrder
    amount?: SortOrder
    provider?: SortOrder
    transaction_id?: SortOrder
    status?: SortOrder
    items?: SortOrder
    is_deleted?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type paymentsAvgOrderByAggregateInput = {
    id?: SortOrder
    order_id?: SortOrder
    user_id?: SortOrder
    amount?: SortOrder
  }

  export type paymentsMaxOrderByAggregateInput = {
    id?: SortOrder
    uuid?: SortOrder
    order_id?: SortOrder
    user_id?: SortOrder
    amount?: SortOrder
    provider?: SortOrder
    transaction_id?: SortOrder
    status?: SortOrder
    is_deleted?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type paymentsMinOrderByAggregateInput = {
    id?: SortOrder
    uuid?: SortOrder
    order_id?: SortOrder
    user_id?: SortOrder
    amount?: SortOrder
    provider?: SortOrder
    transaction_id?: SortOrder
    status?: SortOrder
    is_deleted?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type paymentsSumOrderByAggregateInput = {
    id?: SortOrder
    order_id?: SortOrder
    user_id?: SortOrder
    amount?: SortOrder
  }

  export type EnumPaymentStatusEnumWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentStatusEnum | EnumPaymentStatusEnumFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentStatusEnum[]
    notIn?: $Enums.PaymentStatusEnum[]
    not?: NestedEnumPaymentStatusEnumWithAggregatesFilter<$PrismaModel> | $Enums.PaymentStatusEnum
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPaymentStatusEnumFilter<$PrismaModel>
    _max?: NestedEnumPaymentStatusEnumFilter<$PrismaModel>
  }
  export type JsonNullableWithAggregatesFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue
    lte?: InputJsonValue
    gt?: InputJsonValue
    gte?: InputJsonValue
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedJsonNullableFilter<$PrismaModel>
    _max?: NestedJsonNullableFilter<$PrismaModel>
  }

  export type email_blacklistOrderByRelevanceInput = {
    fields: email_blacklistOrderByRelevanceFieldEnum | email_blacklistOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type email_blacklistCountOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type email_blacklistAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type email_blacklistMaxOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type email_blacklistMinOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type email_blacklistSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type MessagesListRelationFilter = {
    every?: messagesWhereInput
    some?: messagesWhereInput
    none?: messagesWhereInput
  }

  export type messagesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type conversationsOrderByRelevanceInput = {
    fields: conversationsOrderByRelevanceFieldEnum | conversationsOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type conversationsCountOrderByAggregateInput = {
    id?: SortOrder
    chat_id?: SortOrder
    title?: SortOrder
    started_at?: SortOrder
    user_id?: SortOrder
  }

  export type conversationsAvgOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
  }

  export type conversationsMaxOrderByAggregateInput = {
    id?: SortOrder
    chat_id?: SortOrder
    title?: SortOrder
    started_at?: SortOrder
    user_id?: SortOrder
  }

  export type conversationsMinOrderByAggregateInput = {
    id?: SortOrder
    chat_id?: SortOrder
    title?: SortOrder
    started_at?: SortOrder
    user_id?: SortOrder
  }

  export type conversationsSumOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
  }

  export type ConversationsScalarRelationFilter = {
    is?: conversationsWhereInput
    isNot?: conversationsWhereInput
  }

  export type messagesOrderByRelevanceInput = {
    fields: messagesOrderByRelevanceFieldEnum | messagesOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type messagesCountOrderByAggregateInput = {
    id?: SortOrder
    chat_id?: SortOrder
    sender?: SortOrder
    message?: SortOrder
    created_at?: SortOrder
  }

  export type messagesAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type messagesMaxOrderByAggregateInput = {
    id?: SortOrder
    chat_id?: SortOrder
    sender?: SortOrder
    message?: SortOrder
    created_at?: SortOrder
  }

  export type messagesMinOrderByAggregateInput = {
    id?: SortOrder
    chat_id?: SortOrder
    sender?: SortOrder
    message?: SortOrder
    created_at?: SortOrder
  }

  export type messagesSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type reset_password_tokenOrderByRelevanceInput = {
    fields: reset_password_tokenOrderByRelevanceFieldEnum | reset_password_tokenOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type reset_password_tokenCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    token?: SortOrder
    expires_at?: SortOrder
    created_at?: SortOrder
  }

  export type reset_password_tokenAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type reset_password_tokenMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    token?: SortOrder
    expires_at?: SortOrder
    created_at?: SortOrder
  }

  export type reset_password_tokenMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    token?: SortOrder
    expires_at?: SortOrder
    created_at?: SortOrder
  }

  export type reset_password_tokenSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type seller_hidden_usersSeller_idUser_idCompoundUniqueInput = {
    seller_id: number
    user_id: number
  }

  export type seller_hidden_usersCountOrderByAggregateInput = {
    id?: SortOrder
    seller_id?: SortOrder
    user_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type seller_hidden_usersAvgOrderByAggregateInput = {
    id?: SortOrder
    seller_id?: SortOrder
    user_id?: SortOrder
  }

  export type seller_hidden_usersMaxOrderByAggregateInput = {
    id?: SortOrder
    seller_id?: SortOrder
    user_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type seller_hidden_usersMinOrderByAggregateInput = {
    id?: SortOrder
    seller_id?: SortOrder
    user_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type seller_hidden_usersSumOrderByAggregateInput = {
    id?: SortOrder
    seller_id?: SortOrder
    user_id?: SortOrder
  }

  export type rolesCreateNestedOneWithoutUsersInput = {
    create?: XOR<rolesCreateWithoutUsersInput, rolesUncheckedCreateWithoutUsersInput>
    connectOrCreate?: rolesCreateOrConnectWithoutUsersInput
    connect?: rolesWhereUniqueInput
  }

  export type addressesCreateNestedManyWithoutUserInput = {
    create?: XOR<addressesCreateWithoutUserInput, addressesUncheckedCreateWithoutUserInput> | addressesCreateWithoutUserInput[] | addressesUncheckedCreateWithoutUserInput[]
    connectOrCreate?: addressesCreateOrConnectWithoutUserInput | addressesCreateOrConnectWithoutUserInput[]
    createMany?: addressesCreateManyUserInputEnvelope
    connect?: addressesWhereUniqueInput | addressesWhereUniqueInput[]
  }

  export type ordersCreateNestedManyWithoutUserInput = {
    create?: XOR<ordersCreateWithoutUserInput, ordersUncheckedCreateWithoutUserInput> | ordersCreateWithoutUserInput[] | ordersUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ordersCreateOrConnectWithoutUserInput | ordersCreateOrConnectWithoutUserInput[]
    createMany?: ordersCreateManyUserInputEnvelope
    connect?: ordersWhereUniqueInput | ordersWhereUniqueInput[]
  }

  export type cart_itemsCreateNestedManyWithoutUserInput = {
    create?: XOR<cart_itemsCreateWithoutUserInput, cart_itemsUncheckedCreateWithoutUserInput> | cart_itemsCreateWithoutUserInput[] | cart_itemsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: cart_itemsCreateOrConnectWithoutUserInput | cart_itemsCreateOrConnectWithoutUserInput[]
    createMany?: cart_itemsCreateManyUserInputEnvelope
    connect?: cart_itemsWhereUniqueInput | cart_itemsWhereUniqueInput[]
  }

  export type reviewsCreateNestedManyWithoutUserInput = {
    create?: XOR<reviewsCreateWithoutUserInput, reviewsUncheckedCreateWithoutUserInput> | reviewsCreateWithoutUserInput[] | reviewsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: reviewsCreateOrConnectWithoutUserInput | reviewsCreateOrConnectWithoutUserInput[]
    createMany?: reviewsCreateManyUserInputEnvelope
    connect?: reviewsWhereUniqueInput | reviewsWhereUniqueInput[]
  }

  export type paymentsCreateNestedManyWithoutUserInput = {
    create?: XOR<paymentsCreateWithoutUserInput, paymentsUncheckedCreateWithoutUserInput> | paymentsCreateWithoutUserInput[] | paymentsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: paymentsCreateOrConnectWithoutUserInput | paymentsCreateOrConnectWithoutUserInput[]
    createMany?: paymentsCreateManyUserInputEnvelope
    connect?: paymentsWhereUniqueInput | paymentsWhereUniqueInput[]
  }

  export type conversationsCreateNestedManyWithoutUserInput = {
    create?: XOR<conversationsCreateWithoutUserInput, conversationsUncheckedCreateWithoutUserInput> | conversationsCreateWithoutUserInput[] | conversationsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: conversationsCreateOrConnectWithoutUserInput | conversationsCreateOrConnectWithoutUserInput[]
    createMany?: conversationsCreateManyUserInputEnvelope
    connect?: conversationsWhereUniqueInput | conversationsWhereUniqueInput[]
  }

  export type reset_password_tokenCreateNestedManyWithoutUserInput = {
    create?: XOR<reset_password_tokenCreateWithoutUserInput, reset_password_tokenUncheckedCreateWithoutUserInput> | reset_password_tokenCreateWithoutUserInput[] | reset_password_tokenUncheckedCreateWithoutUserInput[]
    connectOrCreate?: reset_password_tokenCreateOrConnectWithoutUserInput | reset_password_tokenCreateOrConnectWithoutUserInput[]
    createMany?: reset_password_tokenCreateManyUserInputEnvelope
    connect?: reset_password_tokenWhereUniqueInput | reset_password_tokenWhereUniqueInput[]
  }

  export type shopsCreateNestedManyWithoutSellerInput = {
    create?: XOR<shopsCreateWithoutSellerInput, shopsUncheckedCreateWithoutSellerInput> | shopsCreateWithoutSellerInput[] | shopsUncheckedCreateWithoutSellerInput[]
    connectOrCreate?: shopsCreateOrConnectWithoutSellerInput | shopsCreateOrConnectWithoutSellerInput[]
    createMany?: shopsCreateManySellerInputEnvelope
    connect?: shopsWhereUniqueInput | shopsWhereUniqueInput[]
  }

  export type seller_hidden_usersCreateNestedManyWithoutSellerInput = {
    create?: XOR<seller_hidden_usersCreateWithoutSellerInput, seller_hidden_usersUncheckedCreateWithoutSellerInput> | seller_hidden_usersCreateWithoutSellerInput[] | seller_hidden_usersUncheckedCreateWithoutSellerInput[]
    connectOrCreate?: seller_hidden_usersCreateOrConnectWithoutSellerInput | seller_hidden_usersCreateOrConnectWithoutSellerInput[]
    createMany?: seller_hidden_usersCreateManySellerInputEnvelope
    connect?: seller_hidden_usersWhereUniqueInput | seller_hidden_usersWhereUniqueInput[]
  }

  export type seller_hidden_usersCreateNestedManyWithoutUserInput = {
    create?: XOR<seller_hidden_usersCreateWithoutUserInput, seller_hidden_usersUncheckedCreateWithoutUserInput> | seller_hidden_usersCreateWithoutUserInput[] | seller_hidden_usersUncheckedCreateWithoutUserInput[]
    connectOrCreate?: seller_hidden_usersCreateOrConnectWithoutUserInput | seller_hidden_usersCreateOrConnectWithoutUserInput[]
    createMany?: seller_hidden_usersCreateManyUserInputEnvelope
    connect?: seller_hidden_usersWhereUniqueInput | seller_hidden_usersWhereUniqueInput[]
  }

  export type addressesUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<addressesCreateWithoutUserInput, addressesUncheckedCreateWithoutUserInput> | addressesCreateWithoutUserInput[] | addressesUncheckedCreateWithoutUserInput[]
    connectOrCreate?: addressesCreateOrConnectWithoutUserInput | addressesCreateOrConnectWithoutUserInput[]
    createMany?: addressesCreateManyUserInputEnvelope
    connect?: addressesWhereUniqueInput | addressesWhereUniqueInput[]
  }

  export type ordersUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<ordersCreateWithoutUserInput, ordersUncheckedCreateWithoutUserInput> | ordersCreateWithoutUserInput[] | ordersUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ordersCreateOrConnectWithoutUserInput | ordersCreateOrConnectWithoutUserInput[]
    createMany?: ordersCreateManyUserInputEnvelope
    connect?: ordersWhereUniqueInput | ordersWhereUniqueInput[]
  }

  export type cart_itemsUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<cart_itemsCreateWithoutUserInput, cart_itemsUncheckedCreateWithoutUserInput> | cart_itemsCreateWithoutUserInput[] | cart_itemsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: cart_itemsCreateOrConnectWithoutUserInput | cart_itemsCreateOrConnectWithoutUserInput[]
    createMany?: cart_itemsCreateManyUserInputEnvelope
    connect?: cart_itemsWhereUniqueInput | cart_itemsWhereUniqueInput[]
  }

  export type reviewsUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<reviewsCreateWithoutUserInput, reviewsUncheckedCreateWithoutUserInput> | reviewsCreateWithoutUserInput[] | reviewsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: reviewsCreateOrConnectWithoutUserInput | reviewsCreateOrConnectWithoutUserInput[]
    createMany?: reviewsCreateManyUserInputEnvelope
    connect?: reviewsWhereUniqueInput | reviewsWhereUniqueInput[]
  }

  export type paymentsUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<paymentsCreateWithoutUserInput, paymentsUncheckedCreateWithoutUserInput> | paymentsCreateWithoutUserInput[] | paymentsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: paymentsCreateOrConnectWithoutUserInput | paymentsCreateOrConnectWithoutUserInput[]
    createMany?: paymentsCreateManyUserInputEnvelope
    connect?: paymentsWhereUniqueInput | paymentsWhereUniqueInput[]
  }

  export type conversationsUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<conversationsCreateWithoutUserInput, conversationsUncheckedCreateWithoutUserInput> | conversationsCreateWithoutUserInput[] | conversationsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: conversationsCreateOrConnectWithoutUserInput | conversationsCreateOrConnectWithoutUserInput[]
    createMany?: conversationsCreateManyUserInputEnvelope
    connect?: conversationsWhereUniqueInput | conversationsWhereUniqueInput[]
  }

  export type reset_password_tokenUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<reset_password_tokenCreateWithoutUserInput, reset_password_tokenUncheckedCreateWithoutUserInput> | reset_password_tokenCreateWithoutUserInput[] | reset_password_tokenUncheckedCreateWithoutUserInput[]
    connectOrCreate?: reset_password_tokenCreateOrConnectWithoutUserInput | reset_password_tokenCreateOrConnectWithoutUserInput[]
    createMany?: reset_password_tokenCreateManyUserInputEnvelope
    connect?: reset_password_tokenWhereUniqueInput | reset_password_tokenWhereUniqueInput[]
  }

  export type shopsUncheckedCreateNestedManyWithoutSellerInput = {
    create?: XOR<shopsCreateWithoutSellerInput, shopsUncheckedCreateWithoutSellerInput> | shopsCreateWithoutSellerInput[] | shopsUncheckedCreateWithoutSellerInput[]
    connectOrCreate?: shopsCreateOrConnectWithoutSellerInput | shopsCreateOrConnectWithoutSellerInput[]
    createMany?: shopsCreateManySellerInputEnvelope
    connect?: shopsWhereUniqueInput | shopsWhereUniqueInput[]
  }

  export type seller_hidden_usersUncheckedCreateNestedManyWithoutSellerInput = {
    create?: XOR<seller_hidden_usersCreateWithoutSellerInput, seller_hidden_usersUncheckedCreateWithoutSellerInput> | seller_hidden_usersCreateWithoutSellerInput[] | seller_hidden_usersUncheckedCreateWithoutSellerInput[]
    connectOrCreate?: seller_hidden_usersCreateOrConnectWithoutSellerInput | seller_hidden_usersCreateOrConnectWithoutSellerInput[]
    createMany?: seller_hidden_usersCreateManySellerInputEnvelope
    connect?: seller_hidden_usersWhereUniqueInput | seller_hidden_usersWhereUniqueInput[]
  }

  export type seller_hidden_usersUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<seller_hidden_usersCreateWithoutUserInput, seller_hidden_usersUncheckedCreateWithoutUserInput> | seller_hidden_usersCreateWithoutUserInput[] | seller_hidden_usersUncheckedCreateWithoutUserInput[]
    connectOrCreate?: seller_hidden_usersCreateOrConnectWithoutUserInput | seller_hidden_usersCreateOrConnectWithoutUserInput[]
    createMany?: seller_hidden_usersCreateManyUserInputEnvelope
    connect?: seller_hidden_usersWhereUniqueInput | seller_hidden_usersWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type NullableBoolFieldUpdateOperationsInput = {
    set?: boolean | null
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type rolesUpdateOneRequiredWithoutUsersNestedInput = {
    create?: XOR<rolesCreateWithoutUsersInput, rolesUncheckedCreateWithoutUsersInput>
    connectOrCreate?: rolesCreateOrConnectWithoutUsersInput
    upsert?: rolesUpsertWithoutUsersInput
    connect?: rolesWhereUniqueInput
    update?: XOR<XOR<rolesUpdateToOneWithWhereWithoutUsersInput, rolesUpdateWithoutUsersInput>, rolesUncheckedUpdateWithoutUsersInput>
  }

  export type addressesUpdateManyWithoutUserNestedInput = {
    create?: XOR<addressesCreateWithoutUserInput, addressesUncheckedCreateWithoutUserInput> | addressesCreateWithoutUserInput[] | addressesUncheckedCreateWithoutUserInput[]
    connectOrCreate?: addressesCreateOrConnectWithoutUserInput | addressesCreateOrConnectWithoutUserInput[]
    upsert?: addressesUpsertWithWhereUniqueWithoutUserInput | addressesUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: addressesCreateManyUserInputEnvelope
    set?: addressesWhereUniqueInput | addressesWhereUniqueInput[]
    disconnect?: addressesWhereUniqueInput | addressesWhereUniqueInput[]
    delete?: addressesWhereUniqueInput | addressesWhereUniqueInput[]
    connect?: addressesWhereUniqueInput | addressesWhereUniqueInput[]
    update?: addressesUpdateWithWhereUniqueWithoutUserInput | addressesUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: addressesUpdateManyWithWhereWithoutUserInput | addressesUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: addressesScalarWhereInput | addressesScalarWhereInput[]
  }

  export type ordersUpdateManyWithoutUserNestedInput = {
    create?: XOR<ordersCreateWithoutUserInput, ordersUncheckedCreateWithoutUserInput> | ordersCreateWithoutUserInput[] | ordersUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ordersCreateOrConnectWithoutUserInput | ordersCreateOrConnectWithoutUserInput[]
    upsert?: ordersUpsertWithWhereUniqueWithoutUserInput | ordersUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: ordersCreateManyUserInputEnvelope
    set?: ordersWhereUniqueInput | ordersWhereUniqueInput[]
    disconnect?: ordersWhereUniqueInput | ordersWhereUniqueInput[]
    delete?: ordersWhereUniqueInput | ordersWhereUniqueInput[]
    connect?: ordersWhereUniqueInput | ordersWhereUniqueInput[]
    update?: ordersUpdateWithWhereUniqueWithoutUserInput | ordersUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: ordersUpdateManyWithWhereWithoutUserInput | ordersUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: ordersScalarWhereInput | ordersScalarWhereInput[]
  }

  export type cart_itemsUpdateManyWithoutUserNestedInput = {
    create?: XOR<cart_itemsCreateWithoutUserInput, cart_itemsUncheckedCreateWithoutUserInput> | cart_itemsCreateWithoutUserInput[] | cart_itemsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: cart_itemsCreateOrConnectWithoutUserInput | cart_itemsCreateOrConnectWithoutUserInput[]
    upsert?: cart_itemsUpsertWithWhereUniqueWithoutUserInput | cart_itemsUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: cart_itemsCreateManyUserInputEnvelope
    set?: cart_itemsWhereUniqueInput | cart_itemsWhereUniqueInput[]
    disconnect?: cart_itemsWhereUniqueInput | cart_itemsWhereUniqueInput[]
    delete?: cart_itemsWhereUniqueInput | cart_itemsWhereUniqueInput[]
    connect?: cart_itemsWhereUniqueInput | cart_itemsWhereUniqueInput[]
    update?: cart_itemsUpdateWithWhereUniqueWithoutUserInput | cart_itemsUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: cart_itemsUpdateManyWithWhereWithoutUserInput | cart_itemsUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: cart_itemsScalarWhereInput | cart_itemsScalarWhereInput[]
  }

  export type reviewsUpdateManyWithoutUserNestedInput = {
    create?: XOR<reviewsCreateWithoutUserInput, reviewsUncheckedCreateWithoutUserInput> | reviewsCreateWithoutUserInput[] | reviewsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: reviewsCreateOrConnectWithoutUserInput | reviewsCreateOrConnectWithoutUserInput[]
    upsert?: reviewsUpsertWithWhereUniqueWithoutUserInput | reviewsUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: reviewsCreateManyUserInputEnvelope
    set?: reviewsWhereUniqueInput | reviewsWhereUniqueInput[]
    disconnect?: reviewsWhereUniqueInput | reviewsWhereUniqueInput[]
    delete?: reviewsWhereUniqueInput | reviewsWhereUniqueInput[]
    connect?: reviewsWhereUniqueInput | reviewsWhereUniqueInput[]
    update?: reviewsUpdateWithWhereUniqueWithoutUserInput | reviewsUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: reviewsUpdateManyWithWhereWithoutUserInput | reviewsUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: reviewsScalarWhereInput | reviewsScalarWhereInput[]
  }

  export type paymentsUpdateManyWithoutUserNestedInput = {
    create?: XOR<paymentsCreateWithoutUserInput, paymentsUncheckedCreateWithoutUserInput> | paymentsCreateWithoutUserInput[] | paymentsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: paymentsCreateOrConnectWithoutUserInput | paymentsCreateOrConnectWithoutUserInput[]
    upsert?: paymentsUpsertWithWhereUniqueWithoutUserInput | paymentsUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: paymentsCreateManyUserInputEnvelope
    set?: paymentsWhereUniqueInput | paymentsWhereUniqueInput[]
    disconnect?: paymentsWhereUniqueInput | paymentsWhereUniqueInput[]
    delete?: paymentsWhereUniqueInput | paymentsWhereUniqueInput[]
    connect?: paymentsWhereUniqueInput | paymentsWhereUniqueInput[]
    update?: paymentsUpdateWithWhereUniqueWithoutUserInput | paymentsUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: paymentsUpdateManyWithWhereWithoutUserInput | paymentsUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: paymentsScalarWhereInput | paymentsScalarWhereInput[]
  }

  export type conversationsUpdateManyWithoutUserNestedInput = {
    create?: XOR<conversationsCreateWithoutUserInput, conversationsUncheckedCreateWithoutUserInput> | conversationsCreateWithoutUserInput[] | conversationsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: conversationsCreateOrConnectWithoutUserInput | conversationsCreateOrConnectWithoutUserInput[]
    upsert?: conversationsUpsertWithWhereUniqueWithoutUserInput | conversationsUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: conversationsCreateManyUserInputEnvelope
    set?: conversationsWhereUniqueInput | conversationsWhereUniqueInput[]
    disconnect?: conversationsWhereUniqueInput | conversationsWhereUniqueInput[]
    delete?: conversationsWhereUniqueInput | conversationsWhereUniqueInput[]
    connect?: conversationsWhereUniqueInput | conversationsWhereUniqueInput[]
    update?: conversationsUpdateWithWhereUniqueWithoutUserInput | conversationsUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: conversationsUpdateManyWithWhereWithoutUserInput | conversationsUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: conversationsScalarWhereInput | conversationsScalarWhereInput[]
  }

  export type reset_password_tokenUpdateManyWithoutUserNestedInput = {
    create?: XOR<reset_password_tokenCreateWithoutUserInput, reset_password_tokenUncheckedCreateWithoutUserInput> | reset_password_tokenCreateWithoutUserInput[] | reset_password_tokenUncheckedCreateWithoutUserInput[]
    connectOrCreate?: reset_password_tokenCreateOrConnectWithoutUserInput | reset_password_tokenCreateOrConnectWithoutUserInput[]
    upsert?: reset_password_tokenUpsertWithWhereUniqueWithoutUserInput | reset_password_tokenUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: reset_password_tokenCreateManyUserInputEnvelope
    set?: reset_password_tokenWhereUniqueInput | reset_password_tokenWhereUniqueInput[]
    disconnect?: reset_password_tokenWhereUniqueInput | reset_password_tokenWhereUniqueInput[]
    delete?: reset_password_tokenWhereUniqueInput | reset_password_tokenWhereUniqueInput[]
    connect?: reset_password_tokenWhereUniqueInput | reset_password_tokenWhereUniqueInput[]
    update?: reset_password_tokenUpdateWithWhereUniqueWithoutUserInput | reset_password_tokenUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: reset_password_tokenUpdateManyWithWhereWithoutUserInput | reset_password_tokenUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: reset_password_tokenScalarWhereInput | reset_password_tokenScalarWhereInput[]
  }

  export type shopsUpdateManyWithoutSellerNestedInput = {
    create?: XOR<shopsCreateWithoutSellerInput, shopsUncheckedCreateWithoutSellerInput> | shopsCreateWithoutSellerInput[] | shopsUncheckedCreateWithoutSellerInput[]
    connectOrCreate?: shopsCreateOrConnectWithoutSellerInput | shopsCreateOrConnectWithoutSellerInput[]
    upsert?: shopsUpsertWithWhereUniqueWithoutSellerInput | shopsUpsertWithWhereUniqueWithoutSellerInput[]
    createMany?: shopsCreateManySellerInputEnvelope
    set?: shopsWhereUniqueInput | shopsWhereUniqueInput[]
    disconnect?: shopsWhereUniqueInput | shopsWhereUniqueInput[]
    delete?: shopsWhereUniqueInput | shopsWhereUniqueInput[]
    connect?: shopsWhereUniqueInput | shopsWhereUniqueInput[]
    update?: shopsUpdateWithWhereUniqueWithoutSellerInput | shopsUpdateWithWhereUniqueWithoutSellerInput[]
    updateMany?: shopsUpdateManyWithWhereWithoutSellerInput | shopsUpdateManyWithWhereWithoutSellerInput[]
    deleteMany?: shopsScalarWhereInput | shopsScalarWhereInput[]
  }

  export type seller_hidden_usersUpdateManyWithoutSellerNestedInput = {
    create?: XOR<seller_hidden_usersCreateWithoutSellerInput, seller_hidden_usersUncheckedCreateWithoutSellerInput> | seller_hidden_usersCreateWithoutSellerInput[] | seller_hidden_usersUncheckedCreateWithoutSellerInput[]
    connectOrCreate?: seller_hidden_usersCreateOrConnectWithoutSellerInput | seller_hidden_usersCreateOrConnectWithoutSellerInput[]
    upsert?: seller_hidden_usersUpsertWithWhereUniqueWithoutSellerInput | seller_hidden_usersUpsertWithWhereUniqueWithoutSellerInput[]
    createMany?: seller_hidden_usersCreateManySellerInputEnvelope
    set?: seller_hidden_usersWhereUniqueInput | seller_hidden_usersWhereUniqueInput[]
    disconnect?: seller_hidden_usersWhereUniqueInput | seller_hidden_usersWhereUniqueInput[]
    delete?: seller_hidden_usersWhereUniqueInput | seller_hidden_usersWhereUniqueInput[]
    connect?: seller_hidden_usersWhereUniqueInput | seller_hidden_usersWhereUniqueInput[]
    update?: seller_hidden_usersUpdateWithWhereUniqueWithoutSellerInput | seller_hidden_usersUpdateWithWhereUniqueWithoutSellerInput[]
    updateMany?: seller_hidden_usersUpdateManyWithWhereWithoutSellerInput | seller_hidden_usersUpdateManyWithWhereWithoutSellerInput[]
    deleteMany?: seller_hidden_usersScalarWhereInput | seller_hidden_usersScalarWhereInput[]
  }

  export type seller_hidden_usersUpdateManyWithoutUserNestedInput = {
    create?: XOR<seller_hidden_usersCreateWithoutUserInput, seller_hidden_usersUncheckedCreateWithoutUserInput> | seller_hidden_usersCreateWithoutUserInput[] | seller_hidden_usersUncheckedCreateWithoutUserInput[]
    connectOrCreate?: seller_hidden_usersCreateOrConnectWithoutUserInput | seller_hidden_usersCreateOrConnectWithoutUserInput[]
    upsert?: seller_hidden_usersUpsertWithWhereUniqueWithoutUserInput | seller_hidden_usersUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: seller_hidden_usersCreateManyUserInputEnvelope
    set?: seller_hidden_usersWhereUniqueInput | seller_hidden_usersWhereUniqueInput[]
    disconnect?: seller_hidden_usersWhereUniqueInput | seller_hidden_usersWhereUniqueInput[]
    delete?: seller_hidden_usersWhereUniqueInput | seller_hidden_usersWhereUniqueInput[]
    connect?: seller_hidden_usersWhereUniqueInput | seller_hidden_usersWhereUniqueInput[]
    update?: seller_hidden_usersUpdateWithWhereUniqueWithoutUserInput | seller_hidden_usersUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: seller_hidden_usersUpdateManyWithWhereWithoutUserInput | seller_hidden_usersUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: seller_hidden_usersScalarWhereInput | seller_hidden_usersScalarWhereInput[]
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type addressesUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<addressesCreateWithoutUserInput, addressesUncheckedCreateWithoutUserInput> | addressesCreateWithoutUserInput[] | addressesUncheckedCreateWithoutUserInput[]
    connectOrCreate?: addressesCreateOrConnectWithoutUserInput | addressesCreateOrConnectWithoutUserInput[]
    upsert?: addressesUpsertWithWhereUniqueWithoutUserInput | addressesUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: addressesCreateManyUserInputEnvelope
    set?: addressesWhereUniqueInput | addressesWhereUniqueInput[]
    disconnect?: addressesWhereUniqueInput | addressesWhereUniqueInput[]
    delete?: addressesWhereUniqueInput | addressesWhereUniqueInput[]
    connect?: addressesWhereUniqueInput | addressesWhereUniqueInput[]
    update?: addressesUpdateWithWhereUniqueWithoutUserInput | addressesUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: addressesUpdateManyWithWhereWithoutUserInput | addressesUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: addressesScalarWhereInput | addressesScalarWhereInput[]
  }

  export type ordersUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<ordersCreateWithoutUserInput, ordersUncheckedCreateWithoutUserInput> | ordersCreateWithoutUserInput[] | ordersUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ordersCreateOrConnectWithoutUserInput | ordersCreateOrConnectWithoutUserInput[]
    upsert?: ordersUpsertWithWhereUniqueWithoutUserInput | ordersUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: ordersCreateManyUserInputEnvelope
    set?: ordersWhereUniqueInput | ordersWhereUniqueInput[]
    disconnect?: ordersWhereUniqueInput | ordersWhereUniqueInput[]
    delete?: ordersWhereUniqueInput | ordersWhereUniqueInput[]
    connect?: ordersWhereUniqueInput | ordersWhereUniqueInput[]
    update?: ordersUpdateWithWhereUniqueWithoutUserInput | ordersUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: ordersUpdateManyWithWhereWithoutUserInput | ordersUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: ordersScalarWhereInput | ordersScalarWhereInput[]
  }

  export type cart_itemsUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<cart_itemsCreateWithoutUserInput, cart_itemsUncheckedCreateWithoutUserInput> | cart_itemsCreateWithoutUserInput[] | cart_itemsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: cart_itemsCreateOrConnectWithoutUserInput | cart_itemsCreateOrConnectWithoutUserInput[]
    upsert?: cart_itemsUpsertWithWhereUniqueWithoutUserInput | cart_itemsUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: cart_itemsCreateManyUserInputEnvelope
    set?: cart_itemsWhereUniqueInput | cart_itemsWhereUniqueInput[]
    disconnect?: cart_itemsWhereUniqueInput | cart_itemsWhereUniqueInput[]
    delete?: cart_itemsWhereUniqueInput | cart_itemsWhereUniqueInput[]
    connect?: cart_itemsWhereUniqueInput | cart_itemsWhereUniqueInput[]
    update?: cart_itemsUpdateWithWhereUniqueWithoutUserInput | cart_itemsUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: cart_itemsUpdateManyWithWhereWithoutUserInput | cart_itemsUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: cart_itemsScalarWhereInput | cart_itemsScalarWhereInput[]
  }

  export type reviewsUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<reviewsCreateWithoutUserInput, reviewsUncheckedCreateWithoutUserInput> | reviewsCreateWithoutUserInput[] | reviewsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: reviewsCreateOrConnectWithoutUserInput | reviewsCreateOrConnectWithoutUserInput[]
    upsert?: reviewsUpsertWithWhereUniqueWithoutUserInput | reviewsUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: reviewsCreateManyUserInputEnvelope
    set?: reviewsWhereUniqueInput | reviewsWhereUniqueInput[]
    disconnect?: reviewsWhereUniqueInput | reviewsWhereUniqueInput[]
    delete?: reviewsWhereUniqueInput | reviewsWhereUniqueInput[]
    connect?: reviewsWhereUniqueInput | reviewsWhereUniqueInput[]
    update?: reviewsUpdateWithWhereUniqueWithoutUserInput | reviewsUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: reviewsUpdateManyWithWhereWithoutUserInput | reviewsUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: reviewsScalarWhereInput | reviewsScalarWhereInput[]
  }

  export type paymentsUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<paymentsCreateWithoutUserInput, paymentsUncheckedCreateWithoutUserInput> | paymentsCreateWithoutUserInput[] | paymentsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: paymentsCreateOrConnectWithoutUserInput | paymentsCreateOrConnectWithoutUserInput[]
    upsert?: paymentsUpsertWithWhereUniqueWithoutUserInput | paymentsUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: paymentsCreateManyUserInputEnvelope
    set?: paymentsWhereUniqueInput | paymentsWhereUniqueInput[]
    disconnect?: paymentsWhereUniqueInput | paymentsWhereUniqueInput[]
    delete?: paymentsWhereUniqueInput | paymentsWhereUniqueInput[]
    connect?: paymentsWhereUniqueInput | paymentsWhereUniqueInput[]
    update?: paymentsUpdateWithWhereUniqueWithoutUserInput | paymentsUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: paymentsUpdateManyWithWhereWithoutUserInput | paymentsUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: paymentsScalarWhereInput | paymentsScalarWhereInput[]
  }

  export type conversationsUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<conversationsCreateWithoutUserInput, conversationsUncheckedCreateWithoutUserInput> | conversationsCreateWithoutUserInput[] | conversationsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: conversationsCreateOrConnectWithoutUserInput | conversationsCreateOrConnectWithoutUserInput[]
    upsert?: conversationsUpsertWithWhereUniqueWithoutUserInput | conversationsUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: conversationsCreateManyUserInputEnvelope
    set?: conversationsWhereUniqueInput | conversationsWhereUniqueInput[]
    disconnect?: conversationsWhereUniqueInput | conversationsWhereUniqueInput[]
    delete?: conversationsWhereUniqueInput | conversationsWhereUniqueInput[]
    connect?: conversationsWhereUniqueInput | conversationsWhereUniqueInput[]
    update?: conversationsUpdateWithWhereUniqueWithoutUserInput | conversationsUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: conversationsUpdateManyWithWhereWithoutUserInput | conversationsUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: conversationsScalarWhereInput | conversationsScalarWhereInput[]
  }

  export type reset_password_tokenUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<reset_password_tokenCreateWithoutUserInput, reset_password_tokenUncheckedCreateWithoutUserInput> | reset_password_tokenCreateWithoutUserInput[] | reset_password_tokenUncheckedCreateWithoutUserInput[]
    connectOrCreate?: reset_password_tokenCreateOrConnectWithoutUserInput | reset_password_tokenCreateOrConnectWithoutUserInput[]
    upsert?: reset_password_tokenUpsertWithWhereUniqueWithoutUserInput | reset_password_tokenUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: reset_password_tokenCreateManyUserInputEnvelope
    set?: reset_password_tokenWhereUniqueInput | reset_password_tokenWhereUniqueInput[]
    disconnect?: reset_password_tokenWhereUniqueInput | reset_password_tokenWhereUniqueInput[]
    delete?: reset_password_tokenWhereUniqueInput | reset_password_tokenWhereUniqueInput[]
    connect?: reset_password_tokenWhereUniqueInput | reset_password_tokenWhereUniqueInput[]
    update?: reset_password_tokenUpdateWithWhereUniqueWithoutUserInput | reset_password_tokenUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: reset_password_tokenUpdateManyWithWhereWithoutUserInput | reset_password_tokenUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: reset_password_tokenScalarWhereInput | reset_password_tokenScalarWhereInput[]
  }

  export type shopsUncheckedUpdateManyWithoutSellerNestedInput = {
    create?: XOR<shopsCreateWithoutSellerInput, shopsUncheckedCreateWithoutSellerInput> | shopsCreateWithoutSellerInput[] | shopsUncheckedCreateWithoutSellerInput[]
    connectOrCreate?: shopsCreateOrConnectWithoutSellerInput | shopsCreateOrConnectWithoutSellerInput[]
    upsert?: shopsUpsertWithWhereUniqueWithoutSellerInput | shopsUpsertWithWhereUniqueWithoutSellerInput[]
    createMany?: shopsCreateManySellerInputEnvelope
    set?: shopsWhereUniqueInput | shopsWhereUniqueInput[]
    disconnect?: shopsWhereUniqueInput | shopsWhereUniqueInput[]
    delete?: shopsWhereUniqueInput | shopsWhereUniqueInput[]
    connect?: shopsWhereUniqueInput | shopsWhereUniqueInput[]
    update?: shopsUpdateWithWhereUniqueWithoutSellerInput | shopsUpdateWithWhereUniqueWithoutSellerInput[]
    updateMany?: shopsUpdateManyWithWhereWithoutSellerInput | shopsUpdateManyWithWhereWithoutSellerInput[]
    deleteMany?: shopsScalarWhereInput | shopsScalarWhereInput[]
  }

  export type seller_hidden_usersUncheckedUpdateManyWithoutSellerNestedInput = {
    create?: XOR<seller_hidden_usersCreateWithoutSellerInput, seller_hidden_usersUncheckedCreateWithoutSellerInput> | seller_hidden_usersCreateWithoutSellerInput[] | seller_hidden_usersUncheckedCreateWithoutSellerInput[]
    connectOrCreate?: seller_hidden_usersCreateOrConnectWithoutSellerInput | seller_hidden_usersCreateOrConnectWithoutSellerInput[]
    upsert?: seller_hidden_usersUpsertWithWhereUniqueWithoutSellerInput | seller_hidden_usersUpsertWithWhereUniqueWithoutSellerInput[]
    createMany?: seller_hidden_usersCreateManySellerInputEnvelope
    set?: seller_hidden_usersWhereUniqueInput | seller_hidden_usersWhereUniqueInput[]
    disconnect?: seller_hidden_usersWhereUniqueInput | seller_hidden_usersWhereUniqueInput[]
    delete?: seller_hidden_usersWhereUniqueInput | seller_hidden_usersWhereUniqueInput[]
    connect?: seller_hidden_usersWhereUniqueInput | seller_hidden_usersWhereUniqueInput[]
    update?: seller_hidden_usersUpdateWithWhereUniqueWithoutSellerInput | seller_hidden_usersUpdateWithWhereUniqueWithoutSellerInput[]
    updateMany?: seller_hidden_usersUpdateManyWithWhereWithoutSellerInput | seller_hidden_usersUpdateManyWithWhereWithoutSellerInput[]
    deleteMany?: seller_hidden_usersScalarWhereInput | seller_hidden_usersScalarWhereInput[]
  }

  export type seller_hidden_usersUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<seller_hidden_usersCreateWithoutUserInput, seller_hidden_usersUncheckedCreateWithoutUserInput> | seller_hidden_usersCreateWithoutUserInput[] | seller_hidden_usersUncheckedCreateWithoutUserInput[]
    connectOrCreate?: seller_hidden_usersCreateOrConnectWithoutUserInput | seller_hidden_usersCreateOrConnectWithoutUserInput[]
    upsert?: seller_hidden_usersUpsertWithWhereUniqueWithoutUserInput | seller_hidden_usersUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: seller_hidden_usersCreateManyUserInputEnvelope
    set?: seller_hidden_usersWhereUniqueInput | seller_hidden_usersWhereUniqueInput[]
    disconnect?: seller_hidden_usersWhereUniqueInput | seller_hidden_usersWhereUniqueInput[]
    delete?: seller_hidden_usersWhereUniqueInput | seller_hidden_usersWhereUniqueInput[]
    connect?: seller_hidden_usersWhereUniqueInput | seller_hidden_usersWhereUniqueInput[]
    update?: seller_hidden_usersUpdateWithWhereUniqueWithoutUserInput | seller_hidden_usersUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: seller_hidden_usersUpdateManyWithWhereWithoutUserInput | seller_hidden_usersUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: seller_hidden_usersScalarWhereInput | seller_hidden_usersScalarWhereInput[]
  }

  export type usersCreateNestedManyWithoutRoleInput = {
    create?: XOR<usersCreateWithoutRoleInput, usersUncheckedCreateWithoutRoleInput> | usersCreateWithoutRoleInput[] | usersUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: usersCreateOrConnectWithoutRoleInput | usersCreateOrConnectWithoutRoleInput[]
    createMany?: usersCreateManyRoleInputEnvelope
    connect?: usersWhereUniqueInput | usersWhereUniqueInput[]
  }

  export type role_permissionsCreateNestedManyWithoutRoleInput = {
    create?: XOR<role_permissionsCreateWithoutRoleInput, role_permissionsUncheckedCreateWithoutRoleInput> | role_permissionsCreateWithoutRoleInput[] | role_permissionsUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: role_permissionsCreateOrConnectWithoutRoleInput | role_permissionsCreateOrConnectWithoutRoleInput[]
    createMany?: role_permissionsCreateManyRoleInputEnvelope
    connect?: role_permissionsWhereUniqueInput | role_permissionsWhereUniqueInput[]
  }

  export type usersUncheckedCreateNestedManyWithoutRoleInput = {
    create?: XOR<usersCreateWithoutRoleInput, usersUncheckedCreateWithoutRoleInput> | usersCreateWithoutRoleInput[] | usersUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: usersCreateOrConnectWithoutRoleInput | usersCreateOrConnectWithoutRoleInput[]
    createMany?: usersCreateManyRoleInputEnvelope
    connect?: usersWhereUniqueInput | usersWhereUniqueInput[]
  }

  export type role_permissionsUncheckedCreateNestedManyWithoutRoleInput = {
    create?: XOR<role_permissionsCreateWithoutRoleInput, role_permissionsUncheckedCreateWithoutRoleInput> | role_permissionsCreateWithoutRoleInput[] | role_permissionsUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: role_permissionsCreateOrConnectWithoutRoleInput | role_permissionsCreateOrConnectWithoutRoleInput[]
    createMany?: role_permissionsCreateManyRoleInputEnvelope
    connect?: role_permissionsWhereUniqueInput | role_permissionsWhereUniqueInput[]
  }

  export type EnumRoleEnumFieldUpdateOperationsInput = {
    set?: $Enums.RoleEnum
  }

  export type usersUpdateManyWithoutRoleNestedInput = {
    create?: XOR<usersCreateWithoutRoleInput, usersUncheckedCreateWithoutRoleInput> | usersCreateWithoutRoleInput[] | usersUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: usersCreateOrConnectWithoutRoleInput | usersCreateOrConnectWithoutRoleInput[]
    upsert?: usersUpsertWithWhereUniqueWithoutRoleInput | usersUpsertWithWhereUniqueWithoutRoleInput[]
    createMany?: usersCreateManyRoleInputEnvelope
    set?: usersWhereUniqueInput | usersWhereUniqueInput[]
    disconnect?: usersWhereUniqueInput | usersWhereUniqueInput[]
    delete?: usersWhereUniqueInput | usersWhereUniqueInput[]
    connect?: usersWhereUniqueInput | usersWhereUniqueInput[]
    update?: usersUpdateWithWhereUniqueWithoutRoleInput | usersUpdateWithWhereUniqueWithoutRoleInput[]
    updateMany?: usersUpdateManyWithWhereWithoutRoleInput | usersUpdateManyWithWhereWithoutRoleInput[]
    deleteMany?: usersScalarWhereInput | usersScalarWhereInput[]
  }

  export type role_permissionsUpdateManyWithoutRoleNestedInput = {
    create?: XOR<role_permissionsCreateWithoutRoleInput, role_permissionsUncheckedCreateWithoutRoleInput> | role_permissionsCreateWithoutRoleInput[] | role_permissionsUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: role_permissionsCreateOrConnectWithoutRoleInput | role_permissionsCreateOrConnectWithoutRoleInput[]
    upsert?: role_permissionsUpsertWithWhereUniqueWithoutRoleInput | role_permissionsUpsertWithWhereUniqueWithoutRoleInput[]
    createMany?: role_permissionsCreateManyRoleInputEnvelope
    set?: role_permissionsWhereUniqueInput | role_permissionsWhereUniqueInput[]
    disconnect?: role_permissionsWhereUniqueInput | role_permissionsWhereUniqueInput[]
    delete?: role_permissionsWhereUniqueInput | role_permissionsWhereUniqueInput[]
    connect?: role_permissionsWhereUniqueInput | role_permissionsWhereUniqueInput[]
    update?: role_permissionsUpdateWithWhereUniqueWithoutRoleInput | role_permissionsUpdateWithWhereUniqueWithoutRoleInput[]
    updateMany?: role_permissionsUpdateManyWithWhereWithoutRoleInput | role_permissionsUpdateManyWithWhereWithoutRoleInput[]
    deleteMany?: role_permissionsScalarWhereInput | role_permissionsScalarWhereInput[]
  }

  export type usersUncheckedUpdateManyWithoutRoleNestedInput = {
    create?: XOR<usersCreateWithoutRoleInput, usersUncheckedCreateWithoutRoleInput> | usersCreateWithoutRoleInput[] | usersUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: usersCreateOrConnectWithoutRoleInput | usersCreateOrConnectWithoutRoleInput[]
    upsert?: usersUpsertWithWhereUniqueWithoutRoleInput | usersUpsertWithWhereUniqueWithoutRoleInput[]
    createMany?: usersCreateManyRoleInputEnvelope
    set?: usersWhereUniqueInput | usersWhereUniqueInput[]
    disconnect?: usersWhereUniqueInput | usersWhereUniqueInput[]
    delete?: usersWhereUniqueInput | usersWhereUniqueInput[]
    connect?: usersWhereUniqueInput | usersWhereUniqueInput[]
    update?: usersUpdateWithWhereUniqueWithoutRoleInput | usersUpdateWithWhereUniqueWithoutRoleInput[]
    updateMany?: usersUpdateManyWithWhereWithoutRoleInput | usersUpdateManyWithWhereWithoutRoleInput[]
    deleteMany?: usersScalarWhereInput | usersScalarWhereInput[]
  }

  export type role_permissionsUncheckedUpdateManyWithoutRoleNestedInput = {
    create?: XOR<role_permissionsCreateWithoutRoleInput, role_permissionsUncheckedCreateWithoutRoleInput> | role_permissionsCreateWithoutRoleInput[] | role_permissionsUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: role_permissionsCreateOrConnectWithoutRoleInput | role_permissionsCreateOrConnectWithoutRoleInput[]
    upsert?: role_permissionsUpsertWithWhereUniqueWithoutRoleInput | role_permissionsUpsertWithWhereUniqueWithoutRoleInput[]
    createMany?: role_permissionsCreateManyRoleInputEnvelope
    set?: role_permissionsWhereUniqueInput | role_permissionsWhereUniqueInput[]
    disconnect?: role_permissionsWhereUniqueInput | role_permissionsWhereUniqueInput[]
    delete?: role_permissionsWhereUniqueInput | role_permissionsWhereUniqueInput[]
    connect?: role_permissionsWhereUniqueInput | role_permissionsWhereUniqueInput[]
    update?: role_permissionsUpdateWithWhereUniqueWithoutRoleInput | role_permissionsUpdateWithWhereUniqueWithoutRoleInput[]
    updateMany?: role_permissionsUpdateManyWithWhereWithoutRoleInput | role_permissionsUpdateManyWithWhereWithoutRoleInput[]
    deleteMany?: role_permissionsScalarWhereInput | role_permissionsScalarWhereInput[]
  }

  export type role_permissionsCreateNestedManyWithoutPermissionInput = {
    create?: XOR<role_permissionsCreateWithoutPermissionInput, role_permissionsUncheckedCreateWithoutPermissionInput> | role_permissionsCreateWithoutPermissionInput[] | role_permissionsUncheckedCreateWithoutPermissionInput[]
    connectOrCreate?: role_permissionsCreateOrConnectWithoutPermissionInput | role_permissionsCreateOrConnectWithoutPermissionInput[]
    createMany?: role_permissionsCreateManyPermissionInputEnvelope
    connect?: role_permissionsWhereUniqueInput | role_permissionsWhereUniqueInput[]
  }

  export type role_permissionsUncheckedCreateNestedManyWithoutPermissionInput = {
    create?: XOR<role_permissionsCreateWithoutPermissionInput, role_permissionsUncheckedCreateWithoutPermissionInput> | role_permissionsCreateWithoutPermissionInput[] | role_permissionsUncheckedCreateWithoutPermissionInput[]
    connectOrCreate?: role_permissionsCreateOrConnectWithoutPermissionInput | role_permissionsCreateOrConnectWithoutPermissionInput[]
    createMany?: role_permissionsCreateManyPermissionInputEnvelope
    connect?: role_permissionsWhereUniqueInput | role_permissionsWhereUniqueInput[]
  }

  export type EnumPermissionEnumFieldUpdateOperationsInput = {
    set?: $Enums.PermissionEnum
  }

  export type role_permissionsUpdateManyWithoutPermissionNestedInput = {
    create?: XOR<role_permissionsCreateWithoutPermissionInput, role_permissionsUncheckedCreateWithoutPermissionInput> | role_permissionsCreateWithoutPermissionInput[] | role_permissionsUncheckedCreateWithoutPermissionInput[]
    connectOrCreate?: role_permissionsCreateOrConnectWithoutPermissionInput | role_permissionsCreateOrConnectWithoutPermissionInput[]
    upsert?: role_permissionsUpsertWithWhereUniqueWithoutPermissionInput | role_permissionsUpsertWithWhereUniqueWithoutPermissionInput[]
    createMany?: role_permissionsCreateManyPermissionInputEnvelope
    set?: role_permissionsWhereUniqueInput | role_permissionsWhereUniqueInput[]
    disconnect?: role_permissionsWhereUniqueInput | role_permissionsWhereUniqueInput[]
    delete?: role_permissionsWhereUniqueInput | role_permissionsWhereUniqueInput[]
    connect?: role_permissionsWhereUniqueInput | role_permissionsWhereUniqueInput[]
    update?: role_permissionsUpdateWithWhereUniqueWithoutPermissionInput | role_permissionsUpdateWithWhereUniqueWithoutPermissionInput[]
    updateMany?: role_permissionsUpdateManyWithWhereWithoutPermissionInput | role_permissionsUpdateManyWithWhereWithoutPermissionInput[]
    deleteMany?: role_permissionsScalarWhereInput | role_permissionsScalarWhereInput[]
  }

  export type role_permissionsUncheckedUpdateManyWithoutPermissionNestedInput = {
    create?: XOR<role_permissionsCreateWithoutPermissionInput, role_permissionsUncheckedCreateWithoutPermissionInput> | role_permissionsCreateWithoutPermissionInput[] | role_permissionsUncheckedCreateWithoutPermissionInput[]
    connectOrCreate?: role_permissionsCreateOrConnectWithoutPermissionInput | role_permissionsCreateOrConnectWithoutPermissionInput[]
    upsert?: role_permissionsUpsertWithWhereUniqueWithoutPermissionInput | role_permissionsUpsertWithWhereUniqueWithoutPermissionInput[]
    createMany?: role_permissionsCreateManyPermissionInputEnvelope
    set?: role_permissionsWhereUniqueInput | role_permissionsWhereUniqueInput[]
    disconnect?: role_permissionsWhereUniqueInput | role_permissionsWhereUniqueInput[]
    delete?: role_permissionsWhereUniqueInput | role_permissionsWhereUniqueInput[]
    connect?: role_permissionsWhereUniqueInput | role_permissionsWhereUniqueInput[]
    update?: role_permissionsUpdateWithWhereUniqueWithoutPermissionInput | role_permissionsUpdateWithWhereUniqueWithoutPermissionInput[]
    updateMany?: role_permissionsUpdateManyWithWhereWithoutPermissionInput | role_permissionsUpdateManyWithWhereWithoutPermissionInput[]
    deleteMany?: role_permissionsScalarWhereInput | role_permissionsScalarWhereInput[]
  }

  export type rolesCreateNestedOneWithoutRole_permissionsInput = {
    create?: XOR<rolesCreateWithoutRole_permissionsInput, rolesUncheckedCreateWithoutRole_permissionsInput>
    connectOrCreate?: rolesCreateOrConnectWithoutRole_permissionsInput
    connect?: rolesWhereUniqueInput
  }

  export type permissionsCreateNestedOneWithoutRole_permissionsInput = {
    create?: XOR<permissionsCreateWithoutRole_permissionsInput, permissionsUncheckedCreateWithoutRole_permissionsInput>
    connectOrCreate?: permissionsCreateOrConnectWithoutRole_permissionsInput
    connect?: permissionsWhereUniqueInput
  }

  export type rolesUpdateOneRequiredWithoutRole_permissionsNestedInput = {
    create?: XOR<rolesCreateWithoutRole_permissionsInput, rolesUncheckedCreateWithoutRole_permissionsInput>
    connectOrCreate?: rolesCreateOrConnectWithoutRole_permissionsInput
    upsert?: rolesUpsertWithoutRole_permissionsInput
    connect?: rolesWhereUniqueInput
    update?: XOR<XOR<rolesUpdateToOneWithWhereWithoutRole_permissionsInput, rolesUpdateWithoutRole_permissionsInput>, rolesUncheckedUpdateWithoutRole_permissionsInput>
  }

  export type permissionsUpdateOneRequiredWithoutRole_permissionsNestedInput = {
    create?: XOR<permissionsCreateWithoutRole_permissionsInput, permissionsUncheckedCreateWithoutRole_permissionsInput>
    connectOrCreate?: permissionsCreateOrConnectWithoutRole_permissionsInput
    upsert?: permissionsUpsertWithoutRole_permissionsInput
    connect?: permissionsWhereUniqueInput
    update?: XOR<XOR<permissionsUpdateToOneWithWhereWithoutRole_permissionsInput, permissionsUpdateWithoutRole_permissionsInput>, permissionsUncheckedUpdateWithoutRole_permissionsInput>
  }

  export type usersCreateNestedOneWithoutShopsInput = {
    create?: XOR<usersCreateWithoutShopsInput, usersUncheckedCreateWithoutShopsInput>
    connectOrCreate?: usersCreateOrConnectWithoutShopsInput
    connect?: usersWhereUniqueInput
  }

  export type addressesCreateNestedOneWithoutShopsInput = {
    create?: XOR<addressesCreateWithoutShopsInput, addressesUncheckedCreateWithoutShopsInput>
    connectOrCreate?: addressesCreateOrConnectWithoutShopsInput
    connect?: addressesWhereUniqueInput
  }

  export type productsCreateNestedManyWithoutShopInput = {
    create?: XOR<productsCreateWithoutShopInput, productsUncheckedCreateWithoutShopInput> | productsCreateWithoutShopInput[] | productsUncheckedCreateWithoutShopInput[]
    connectOrCreate?: productsCreateOrConnectWithoutShopInput | productsCreateOrConnectWithoutShopInput[]
    createMany?: productsCreateManyShopInputEnvelope
    connect?: productsWhereUniqueInput | productsWhereUniqueInput[]
  }

  export type productsUncheckedCreateNestedManyWithoutShopInput = {
    create?: XOR<productsCreateWithoutShopInput, productsUncheckedCreateWithoutShopInput> | productsCreateWithoutShopInput[] | productsUncheckedCreateWithoutShopInput[]
    connectOrCreate?: productsCreateOrConnectWithoutShopInput | productsCreateOrConnectWithoutShopInput[]
    createMany?: productsCreateManyShopInputEnvelope
    connect?: productsWhereUniqueInput | productsWhereUniqueInput[]
  }

  export type NullableFloatFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type usersUpdateOneRequiredWithoutShopsNestedInput = {
    create?: XOR<usersCreateWithoutShopsInput, usersUncheckedCreateWithoutShopsInput>
    connectOrCreate?: usersCreateOrConnectWithoutShopsInput
    upsert?: usersUpsertWithoutShopsInput
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutShopsInput, usersUpdateWithoutShopsInput>, usersUncheckedUpdateWithoutShopsInput>
  }

  export type addressesUpdateOneWithoutShopsNestedInput = {
    create?: XOR<addressesCreateWithoutShopsInput, addressesUncheckedCreateWithoutShopsInput>
    connectOrCreate?: addressesCreateOrConnectWithoutShopsInput
    upsert?: addressesUpsertWithoutShopsInput
    disconnect?: addressesWhereInput | boolean
    delete?: addressesWhereInput | boolean
    connect?: addressesWhereUniqueInput
    update?: XOR<XOR<addressesUpdateToOneWithWhereWithoutShopsInput, addressesUpdateWithoutShopsInput>, addressesUncheckedUpdateWithoutShopsInput>
  }

  export type productsUpdateManyWithoutShopNestedInput = {
    create?: XOR<productsCreateWithoutShopInput, productsUncheckedCreateWithoutShopInput> | productsCreateWithoutShopInput[] | productsUncheckedCreateWithoutShopInput[]
    connectOrCreate?: productsCreateOrConnectWithoutShopInput | productsCreateOrConnectWithoutShopInput[]
    upsert?: productsUpsertWithWhereUniqueWithoutShopInput | productsUpsertWithWhereUniqueWithoutShopInput[]
    createMany?: productsCreateManyShopInputEnvelope
    set?: productsWhereUniqueInput | productsWhereUniqueInput[]
    disconnect?: productsWhereUniqueInput | productsWhereUniqueInput[]
    delete?: productsWhereUniqueInput | productsWhereUniqueInput[]
    connect?: productsWhereUniqueInput | productsWhereUniqueInput[]
    update?: productsUpdateWithWhereUniqueWithoutShopInput | productsUpdateWithWhereUniqueWithoutShopInput[]
    updateMany?: productsUpdateManyWithWhereWithoutShopInput | productsUpdateManyWithWhereWithoutShopInput[]
    deleteMany?: productsScalarWhereInput | productsScalarWhereInput[]
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type productsUncheckedUpdateManyWithoutShopNestedInput = {
    create?: XOR<productsCreateWithoutShopInput, productsUncheckedCreateWithoutShopInput> | productsCreateWithoutShopInput[] | productsUncheckedCreateWithoutShopInput[]
    connectOrCreate?: productsCreateOrConnectWithoutShopInput | productsCreateOrConnectWithoutShopInput[]
    upsert?: productsUpsertWithWhereUniqueWithoutShopInput | productsUpsertWithWhereUniqueWithoutShopInput[]
    createMany?: productsCreateManyShopInputEnvelope
    set?: productsWhereUniqueInput | productsWhereUniqueInput[]
    disconnect?: productsWhereUniqueInput | productsWhereUniqueInput[]
    delete?: productsWhereUniqueInput | productsWhereUniqueInput[]
    connect?: productsWhereUniqueInput | productsWhereUniqueInput[]
    update?: productsUpdateWithWhereUniqueWithoutShopInput | productsUpdateWithWhereUniqueWithoutShopInput[]
    updateMany?: productsUpdateManyWithWhereWithoutShopInput | productsUpdateManyWithWhereWithoutShopInput[]
    deleteMany?: productsScalarWhereInput | productsScalarWhereInput[]
  }

  export type usersCreateNestedOneWithoutAddressesInput = {
    create?: XOR<usersCreateWithoutAddressesInput, usersUncheckedCreateWithoutAddressesInput>
    connectOrCreate?: usersCreateOrConnectWithoutAddressesInput
    connect?: usersWhereUniqueInput
  }

  export type ordersCreateNestedManyWithoutAddressInput = {
    create?: XOR<ordersCreateWithoutAddressInput, ordersUncheckedCreateWithoutAddressInput> | ordersCreateWithoutAddressInput[] | ordersUncheckedCreateWithoutAddressInput[]
    connectOrCreate?: ordersCreateOrConnectWithoutAddressInput | ordersCreateOrConnectWithoutAddressInput[]
    createMany?: ordersCreateManyAddressInputEnvelope
    connect?: ordersWhereUniqueInput | ordersWhereUniqueInput[]
  }

  export type shopsCreateNestedManyWithoutAddressInput = {
    create?: XOR<shopsCreateWithoutAddressInput, shopsUncheckedCreateWithoutAddressInput> | shopsCreateWithoutAddressInput[] | shopsUncheckedCreateWithoutAddressInput[]
    connectOrCreate?: shopsCreateOrConnectWithoutAddressInput | shopsCreateOrConnectWithoutAddressInput[]
    createMany?: shopsCreateManyAddressInputEnvelope
    connect?: shopsWhereUniqueInput | shopsWhereUniqueInput[]
  }

  export type ordersUncheckedCreateNestedManyWithoutAddressInput = {
    create?: XOR<ordersCreateWithoutAddressInput, ordersUncheckedCreateWithoutAddressInput> | ordersCreateWithoutAddressInput[] | ordersUncheckedCreateWithoutAddressInput[]
    connectOrCreate?: ordersCreateOrConnectWithoutAddressInput | ordersCreateOrConnectWithoutAddressInput[]
    createMany?: ordersCreateManyAddressInputEnvelope
    connect?: ordersWhereUniqueInput | ordersWhereUniqueInput[]
  }

  export type shopsUncheckedCreateNestedManyWithoutAddressInput = {
    create?: XOR<shopsCreateWithoutAddressInput, shopsUncheckedCreateWithoutAddressInput> | shopsCreateWithoutAddressInput[] | shopsUncheckedCreateWithoutAddressInput[]
    connectOrCreate?: shopsCreateOrConnectWithoutAddressInput | shopsCreateOrConnectWithoutAddressInput[]
    createMany?: shopsCreateManyAddressInputEnvelope
    connect?: shopsWhereUniqueInput | shopsWhereUniqueInput[]
  }

  export type NullableEnumAddressTypeEnumFieldUpdateOperationsInput = {
    set?: $Enums.AddressTypeEnum | null
  }

  export type usersUpdateOneRequiredWithoutAddressesNestedInput = {
    create?: XOR<usersCreateWithoutAddressesInput, usersUncheckedCreateWithoutAddressesInput>
    connectOrCreate?: usersCreateOrConnectWithoutAddressesInput
    upsert?: usersUpsertWithoutAddressesInput
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutAddressesInput, usersUpdateWithoutAddressesInput>, usersUncheckedUpdateWithoutAddressesInput>
  }

  export type ordersUpdateManyWithoutAddressNestedInput = {
    create?: XOR<ordersCreateWithoutAddressInput, ordersUncheckedCreateWithoutAddressInput> | ordersCreateWithoutAddressInput[] | ordersUncheckedCreateWithoutAddressInput[]
    connectOrCreate?: ordersCreateOrConnectWithoutAddressInput | ordersCreateOrConnectWithoutAddressInput[]
    upsert?: ordersUpsertWithWhereUniqueWithoutAddressInput | ordersUpsertWithWhereUniqueWithoutAddressInput[]
    createMany?: ordersCreateManyAddressInputEnvelope
    set?: ordersWhereUniqueInput | ordersWhereUniqueInput[]
    disconnect?: ordersWhereUniqueInput | ordersWhereUniqueInput[]
    delete?: ordersWhereUniqueInput | ordersWhereUniqueInput[]
    connect?: ordersWhereUniqueInput | ordersWhereUniqueInput[]
    update?: ordersUpdateWithWhereUniqueWithoutAddressInput | ordersUpdateWithWhereUniqueWithoutAddressInput[]
    updateMany?: ordersUpdateManyWithWhereWithoutAddressInput | ordersUpdateManyWithWhereWithoutAddressInput[]
    deleteMany?: ordersScalarWhereInput | ordersScalarWhereInput[]
  }

  export type shopsUpdateManyWithoutAddressNestedInput = {
    create?: XOR<shopsCreateWithoutAddressInput, shopsUncheckedCreateWithoutAddressInput> | shopsCreateWithoutAddressInput[] | shopsUncheckedCreateWithoutAddressInput[]
    connectOrCreate?: shopsCreateOrConnectWithoutAddressInput | shopsCreateOrConnectWithoutAddressInput[]
    upsert?: shopsUpsertWithWhereUniqueWithoutAddressInput | shopsUpsertWithWhereUniqueWithoutAddressInput[]
    createMany?: shopsCreateManyAddressInputEnvelope
    set?: shopsWhereUniqueInput | shopsWhereUniqueInput[]
    disconnect?: shopsWhereUniqueInput | shopsWhereUniqueInput[]
    delete?: shopsWhereUniqueInput | shopsWhereUniqueInput[]
    connect?: shopsWhereUniqueInput | shopsWhereUniqueInput[]
    update?: shopsUpdateWithWhereUniqueWithoutAddressInput | shopsUpdateWithWhereUniqueWithoutAddressInput[]
    updateMany?: shopsUpdateManyWithWhereWithoutAddressInput | shopsUpdateManyWithWhereWithoutAddressInput[]
    deleteMany?: shopsScalarWhereInput | shopsScalarWhereInput[]
  }

  export type ordersUncheckedUpdateManyWithoutAddressNestedInput = {
    create?: XOR<ordersCreateWithoutAddressInput, ordersUncheckedCreateWithoutAddressInput> | ordersCreateWithoutAddressInput[] | ordersUncheckedCreateWithoutAddressInput[]
    connectOrCreate?: ordersCreateOrConnectWithoutAddressInput | ordersCreateOrConnectWithoutAddressInput[]
    upsert?: ordersUpsertWithWhereUniqueWithoutAddressInput | ordersUpsertWithWhereUniqueWithoutAddressInput[]
    createMany?: ordersCreateManyAddressInputEnvelope
    set?: ordersWhereUniqueInput | ordersWhereUniqueInput[]
    disconnect?: ordersWhereUniqueInput | ordersWhereUniqueInput[]
    delete?: ordersWhereUniqueInput | ordersWhereUniqueInput[]
    connect?: ordersWhereUniqueInput | ordersWhereUniqueInput[]
    update?: ordersUpdateWithWhereUniqueWithoutAddressInput | ordersUpdateWithWhereUniqueWithoutAddressInput[]
    updateMany?: ordersUpdateManyWithWhereWithoutAddressInput | ordersUpdateManyWithWhereWithoutAddressInput[]
    deleteMany?: ordersScalarWhereInput | ordersScalarWhereInput[]
  }

  export type shopsUncheckedUpdateManyWithoutAddressNestedInput = {
    create?: XOR<shopsCreateWithoutAddressInput, shopsUncheckedCreateWithoutAddressInput> | shopsCreateWithoutAddressInput[] | shopsUncheckedCreateWithoutAddressInput[]
    connectOrCreate?: shopsCreateOrConnectWithoutAddressInput | shopsCreateOrConnectWithoutAddressInput[]
    upsert?: shopsUpsertWithWhereUniqueWithoutAddressInput | shopsUpsertWithWhereUniqueWithoutAddressInput[]
    createMany?: shopsCreateManyAddressInputEnvelope
    set?: shopsWhereUniqueInput | shopsWhereUniqueInput[]
    disconnect?: shopsWhereUniqueInput | shopsWhereUniqueInput[]
    delete?: shopsWhereUniqueInput | shopsWhereUniqueInput[]
    connect?: shopsWhereUniqueInput | shopsWhereUniqueInput[]
    update?: shopsUpdateWithWhereUniqueWithoutAddressInput | shopsUpdateWithWhereUniqueWithoutAddressInput[]
    updateMany?: shopsUpdateManyWithWhereWithoutAddressInput | shopsUpdateManyWithWhereWithoutAddressInput[]
    deleteMany?: shopsScalarWhereInput | shopsScalarWhereInput[]
  }

  export type categoriesCreateNestedOneWithoutProductsInput = {
    create?: XOR<categoriesCreateWithoutProductsInput, categoriesUncheckedCreateWithoutProductsInput>
    connectOrCreate?: categoriesCreateOrConnectWithoutProductsInput
    connect?: categoriesWhereUniqueInput
  }

  export type shopsCreateNestedOneWithoutProductsInput = {
    create?: XOR<shopsCreateWithoutProductsInput, shopsUncheckedCreateWithoutProductsInput>
    connectOrCreate?: shopsCreateOrConnectWithoutProductsInput
    connect?: shopsWhereUniqueInput
  }

  export type cart_itemsCreateNestedManyWithoutProductInput = {
    create?: XOR<cart_itemsCreateWithoutProductInput, cart_itemsUncheckedCreateWithoutProductInput> | cart_itemsCreateWithoutProductInput[] | cart_itemsUncheckedCreateWithoutProductInput[]
    connectOrCreate?: cart_itemsCreateOrConnectWithoutProductInput | cart_itemsCreateOrConnectWithoutProductInput[]
    createMany?: cart_itemsCreateManyProductInputEnvelope
    connect?: cart_itemsWhereUniqueInput | cart_itemsWhereUniqueInput[]
  }

  export type order_itemsCreateNestedManyWithoutProductInput = {
    create?: XOR<order_itemsCreateWithoutProductInput, order_itemsUncheckedCreateWithoutProductInput> | order_itemsCreateWithoutProductInput[] | order_itemsUncheckedCreateWithoutProductInput[]
    connectOrCreate?: order_itemsCreateOrConnectWithoutProductInput | order_itemsCreateOrConnectWithoutProductInput[]
    createMany?: order_itemsCreateManyProductInputEnvelope
    connect?: order_itemsWhereUniqueInput | order_itemsWhereUniqueInput[]
  }

  export type reviewsCreateNestedManyWithoutProductInput = {
    create?: XOR<reviewsCreateWithoutProductInput, reviewsUncheckedCreateWithoutProductInput> | reviewsCreateWithoutProductInput[] | reviewsUncheckedCreateWithoutProductInput[]
    connectOrCreate?: reviewsCreateOrConnectWithoutProductInput | reviewsCreateOrConnectWithoutProductInput[]
    createMany?: reviewsCreateManyProductInputEnvelope
    connect?: reviewsWhereUniqueInput | reviewsWhereUniqueInput[]
  }

  export type product_imagesCreateNestedManyWithoutProductInput = {
    create?: XOR<product_imagesCreateWithoutProductInput, product_imagesUncheckedCreateWithoutProductInput> | product_imagesCreateWithoutProductInput[] | product_imagesUncheckedCreateWithoutProductInput[]
    connectOrCreate?: product_imagesCreateOrConnectWithoutProductInput | product_imagesCreateOrConnectWithoutProductInput[]
    createMany?: product_imagesCreateManyProductInputEnvelope
    connect?: product_imagesWhereUniqueInput | product_imagesWhereUniqueInput[]
  }

  export type product_specificationsCreateNestedManyWithoutProductInput = {
    create?: XOR<product_specificationsCreateWithoutProductInput, product_specificationsUncheckedCreateWithoutProductInput> | product_specificationsCreateWithoutProductInput[] | product_specificationsUncheckedCreateWithoutProductInput[]
    connectOrCreate?: product_specificationsCreateOrConnectWithoutProductInput | product_specificationsCreateOrConnectWithoutProductInput[]
    createMany?: product_specificationsCreateManyProductInputEnvelope
    connect?: product_specificationsWhereUniqueInput | product_specificationsWhereUniqueInput[]
  }

  export type product_attributesCreateNestedManyWithoutProductInput = {
    create?: XOR<product_attributesCreateWithoutProductInput, product_attributesUncheckedCreateWithoutProductInput> | product_attributesCreateWithoutProductInput[] | product_attributesUncheckedCreateWithoutProductInput[]
    connectOrCreate?: product_attributesCreateOrConnectWithoutProductInput | product_attributesCreateOrConnectWithoutProductInput[]
    createMany?: product_attributesCreateManyProductInputEnvelope
    connect?: product_attributesWhereUniqueInput | product_attributesWhereUniqueInput[]
  }

  export type cart_itemsUncheckedCreateNestedManyWithoutProductInput = {
    create?: XOR<cart_itemsCreateWithoutProductInput, cart_itemsUncheckedCreateWithoutProductInput> | cart_itemsCreateWithoutProductInput[] | cart_itemsUncheckedCreateWithoutProductInput[]
    connectOrCreate?: cart_itemsCreateOrConnectWithoutProductInput | cart_itemsCreateOrConnectWithoutProductInput[]
    createMany?: cart_itemsCreateManyProductInputEnvelope
    connect?: cart_itemsWhereUniqueInput | cart_itemsWhereUniqueInput[]
  }

  export type order_itemsUncheckedCreateNestedManyWithoutProductInput = {
    create?: XOR<order_itemsCreateWithoutProductInput, order_itemsUncheckedCreateWithoutProductInput> | order_itemsCreateWithoutProductInput[] | order_itemsUncheckedCreateWithoutProductInput[]
    connectOrCreate?: order_itemsCreateOrConnectWithoutProductInput | order_itemsCreateOrConnectWithoutProductInput[]
    createMany?: order_itemsCreateManyProductInputEnvelope
    connect?: order_itemsWhereUniqueInput | order_itemsWhereUniqueInput[]
  }

  export type reviewsUncheckedCreateNestedManyWithoutProductInput = {
    create?: XOR<reviewsCreateWithoutProductInput, reviewsUncheckedCreateWithoutProductInput> | reviewsCreateWithoutProductInput[] | reviewsUncheckedCreateWithoutProductInput[]
    connectOrCreate?: reviewsCreateOrConnectWithoutProductInput | reviewsCreateOrConnectWithoutProductInput[]
    createMany?: reviewsCreateManyProductInputEnvelope
    connect?: reviewsWhereUniqueInput | reviewsWhereUniqueInput[]
  }

  export type product_imagesUncheckedCreateNestedManyWithoutProductInput = {
    create?: XOR<product_imagesCreateWithoutProductInput, product_imagesUncheckedCreateWithoutProductInput> | product_imagesCreateWithoutProductInput[] | product_imagesUncheckedCreateWithoutProductInput[]
    connectOrCreate?: product_imagesCreateOrConnectWithoutProductInput | product_imagesCreateOrConnectWithoutProductInput[]
    createMany?: product_imagesCreateManyProductInputEnvelope
    connect?: product_imagesWhereUniqueInput | product_imagesWhereUniqueInput[]
  }

  export type product_specificationsUncheckedCreateNestedManyWithoutProductInput = {
    create?: XOR<product_specificationsCreateWithoutProductInput, product_specificationsUncheckedCreateWithoutProductInput> | product_specificationsCreateWithoutProductInput[] | product_specificationsUncheckedCreateWithoutProductInput[]
    connectOrCreate?: product_specificationsCreateOrConnectWithoutProductInput | product_specificationsCreateOrConnectWithoutProductInput[]
    createMany?: product_specificationsCreateManyProductInputEnvelope
    connect?: product_specificationsWhereUniqueInput | product_specificationsWhereUniqueInput[]
  }

  export type product_attributesUncheckedCreateNestedManyWithoutProductInput = {
    create?: XOR<product_attributesCreateWithoutProductInput, product_attributesUncheckedCreateWithoutProductInput> | product_attributesCreateWithoutProductInput[] | product_attributesUncheckedCreateWithoutProductInput[]
    connectOrCreate?: product_attributesCreateOrConnectWithoutProductInput | product_attributesCreateOrConnectWithoutProductInput[]
    createMany?: product_attributesCreateManyProductInputEnvelope
    connect?: product_attributesWhereUniqueInput | product_attributesWhereUniqueInput[]
  }

  export type FloatFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type categoriesUpdateOneWithoutProductsNestedInput = {
    create?: XOR<categoriesCreateWithoutProductsInput, categoriesUncheckedCreateWithoutProductsInput>
    connectOrCreate?: categoriesCreateOrConnectWithoutProductsInput
    upsert?: categoriesUpsertWithoutProductsInput
    disconnect?: categoriesWhereInput | boolean
    delete?: categoriesWhereInput | boolean
    connect?: categoriesWhereUniqueInput
    update?: XOR<XOR<categoriesUpdateToOneWithWhereWithoutProductsInput, categoriesUpdateWithoutProductsInput>, categoriesUncheckedUpdateWithoutProductsInput>
  }

  export type shopsUpdateOneWithoutProductsNestedInput = {
    create?: XOR<shopsCreateWithoutProductsInput, shopsUncheckedCreateWithoutProductsInput>
    connectOrCreate?: shopsCreateOrConnectWithoutProductsInput
    upsert?: shopsUpsertWithoutProductsInput
    disconnect?: shopsWhereInput | boolean
    delete?: shopsWhereInput | boolean
    connect?: shopsWhereUniqueInput
    update?: XOR<XOR<shopsUpdateToOneWithWhereWithoutProductsInput, shopsUpdateWithoutProductsInput>, shopsUncheckedUpdateWithoutProductsInput>
  }

  export type cart_itemsUpdateManyWithoutProductNestedInput = {
    create?: XOR<cart_itemsCreateWithoutProductInput, cart_itemsUncheckedCreateWithoutProductInput> | cart_itemsCreateWithoutProductInput[] | cart_itemsUncheckedCreateWithoutProductInput[]
    connectOrCreate?: cart_itemsCreateOrConnectWithoutProductInput | cart_itemsCreateOrConnectWithoutProductInput[]
    upsert?: cart_itemsUpsertWithWhereUniqueWithoutProductInput | cart_itemsUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: cart_itemsCreateManyProductInputEnvelope
    set?: cart_itemsWhereUniqueInput | cart_itemsWhereUniqueInput[]
    disconnect?: cart_itemsWhereUniqueInput | cart_itemsWhereUniqueInput[]
    delete?: cart_itemsWhereUniqueInput | cart_itemsWhereUniqueInput[]
    connect?: cart_itemsWhereUniqueInput | cart_itemsWhereUniqueInput[]
    update?: cart_itemsUpdateWithWhereUniqueWithoutProductInput | cart_itemsUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: cart_itemsUpdateManyWithWhereWithoutProductInput | cart_itemsUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: cart_itemsScalarWhereInput | cart_itemsScalarWhereInput[]
  }

  export type order_itemsUpdateManyWithoutProductNestedInput = {
    create?: XOR<order_itemsCreateWithoutProductInput, order_itemsUncheckedCreateWithoutProductInput> | order_itemsCreateWithoutProductInput[] | order_itemsUncheckedCreateWithoutProductInput[]
    connectOrCreate?: order_itemsCreateOrConnectWithoutProductInput | order_itemsCreateOrConnectWithoutProductInput[]
    upsert?: order_itemsUpsertWithWhereUniqueWithoutProductInput | order_itemsUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: order_itemsCreateManyProductInputEnvelope
    set?: order_itemsWhereUniqueInput | order_itemsWhereUniqueInput[]
    disconnect?: order_itemsWhereUniqueInput | order_itemsWhereUniqueInput[]
    delete?: order_itemsWhereUniqueInput | order_itemsWhereUniqueInput[]
    connect?: order_itemsWhereUniqueInput | order_itemsWhereUniqueInput[]
    update?: order_itemsUpdateWithWhereUniqueWithoutProductInput | order_itemsUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: order_itemsUpdateManyWithWhereWithoutProductInput | order_itemsUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: order_itemsScalarWhereInput | order_itemsScalarWhereInput[]
  }

  export type reviewsUpdateManyWithoutProductNestedInput = {
    create?: XOR<reviewsCreateWithoutProductInput, reviewsUncheckedCreateWithoutProductInput> | reviewsCreateWithoutProductInput[] | reviewsUncheckedCreateWithoutProductInput[]
    connectOrCreate?: reviewsCreateOrConnectWithoutProductInput | reviewsCreateOrConnectWithoutProductInput[]
    upsert?: reviewsUpsertWithWhereUniqueWithoutProductInput | reviewsUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: reviewsCreateManyProductInputEnvelope
    set?: reviewsWhereUniqueInput | reviewsWhereUniqueInput[]
    disconnect?: reviewsWhereUniqueInput | reviewsWhereUniqueInput[]
    delete?: reviewsWhereUniqueInput | reviewsWhereUniqueInput[]
    connect?: reviewsWhereUniqueInput | reviewsWhereUniqueInput[]
    update?: reviewsUpdateWithWhereUniqueWithoutProductInput | reviewsUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: reviewsUpdateManyWithWhereWithoutProductInput | reviewsUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: reviewsScalarWhereInput | reviewsScalarWhereInput[]
  }

  export type product_imagesUpdateManyWithoutProductNestedInput = {
    create?: XOR<product_imagesCreateWithoutProductInput, product_imagesUncheckedCreateWithoutProductInput> | product_imagesCreateWithoutProductInput[] | product_imagesUncheckedCreateWithoutProductInput[]
    connectOrCreate?: product_imagesCreateOrConnectWithoutProductInput | product_imagesCreateOrConnectWithoutProductInput[]
    upsert?: product_imagesUpsertWithWhereUniqueWithoutProductInput | product_imagesUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: product_imagesCreateManyProductInputEnvelope
    set?: product_imagesWhereUniqueInput | product_imagesWhereUniqueInput[]
    disconnect?: product_imagesWhereUniqueInput | product_imagesWhereUniqueInput[]
    delete?: product_imagesWhereUniqueInput | product_imagesWhereUniqueInput[]
    connect?: product_imagesWhereUniqueInput | product_imagesWhereUniqueInput[]
    update?: product_imagesUpdateWithWhereUniqueWithoutProductInput | product_imagesUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: product_imagesUpdateManyWithWhereWithoutProductInput | product_imagesUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: product_imagesScalarWhereInput | product_imagesScalarWhereInput[]
  }

  export type product_specificationsUpdateManyWithoutProductNestedInput = {
    create?: XOR<product_specificationsCreateWithoutProductInput, product_specificationsUncheckedCreateWithoutProductInput> | product_specificationsCreateWithoutProductInput[] | product_specificationsUncheckedCreateWithoutProductInput[]
    connectOrCreate?: product_specificationsCreateOrConnectWithoutProductInput | product_specificationsCreateOrConnectWithoutProductInput[]
    upsert?: product_specificationsUpsertWithWhereUniqueWithoutProductInput | product_specificationsUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: product_specificationsCreateManyProductInputEnvelope
    set?: product_specificationsWhereUniqueInput | product_specificationsWhereUniqueInput[]
    disconnect?: product_specificationsWhereUniqueInput | product_specificationsWhereUniqueInput[]
    delete?: product_specificationsWhereUniqueInput | product_specificationsWhereUniqueInput[]
    connect?: product_specificationsWhereUniqueInput | product_specificationsWhereUniqueInput[]
    update?: product_specificationsUpdateWithWhereUniqueWithoutProductInput | product_specificationsUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: product_specificationsUpdateManyWithWhereWithoutProductInput | product_specificationsUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: product_specificationsScalarWhereInput | product_specificationsScalarWhereInput[]
  }

  export type product_attributesUpdateManyWithoutProductNestedInput = {
    create?: XOR<product_attributesCreateWithoutProductInput, product_attributesUncheckedCreateWithoutProductInput> | product_attributesCreateWithoutProductInput[] | product_attributesUncheckedCreateWithoutProductInput[]
    connectOrCreate?: product_attributesCreateOrConnectWithoutProductInput | product_attributesCreateOrConnectWithoutProductInput[]
    upsert?: product_attributesUpsertWithWhereUniqueWithoutProductInput | product_attributesUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: product_attributesCreateManyProductInputEnvelope
    set?: product_attributesWhereUniqueInput | product_attributesWhereUniqueInput[]
    disconnect?: product_attributesWhereUniqueInput | product_attributesWhereUniqueInput[]
    delete?: product_attributesWhereUniqueInput | product_attributesWhereUniqueInput[]
    connect?: product_attributesWhereUniqueInput | product_attributesWhereUniqueInput[]
    update?: product_attributesUpdateWithWhereUniqueWithoutProductInput | product_attributesUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: product_attributesUpdateManyWithWhereWithoutProductInput | product_attributesUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: product_attributesScalarWhereInput | product_attributesScalarWhereInput[]
  }

  export type cart_itemsUncheckedUpdateManyWithoutProductNestedInput = {
    create?: XOR<cart_itemsCreateWithoutProductInput, cart_itemsUncheckedCreateWithoutProductInput> | cart_itemsCreateWithoutProductInput[] | cart_itemsUncheckedCreateWithoutProductInput[]
    connectOrCreate?: cart_itemsCreateOrConnectWithoutProductInput | cart_itemsCreateOrConnectWithoutProductInput[]
    upsert?: cart_itemsUpsertWithWhereUniqueWithoutProductInput | cart_itemsUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: cart_itemsCreateManyProductInputEnvelope
    set?: cart_itemsWhereUniqueInput | cart_itemsWhereUniqueInput[]
    disconnect?: cart_itemsWhereUniqueInput | cart_itemsWhereUniqueInput[]
    delete?: cart_itemsWhereUniqueInput | cart_itemsWhereUniqueInput[]
    connect?: cart_itemsWhereUniqueInput | cart_itemsWhereUniqueInput[]
    update?: cart_itemsUpdateWithWhereUniqueWithoutProductInput | cart_itemsUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: cart_itemsUpdateManyWithWhereWithoutProductInput | cart_itemsUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: cart_itemsScalarWhereInput | cart_itemsScalarWhereInput[]
  }

  export type order_itemsUncheckedUpdateManyWithoutProductNestedInput = {
    create?: XOR<order_itemsCreateWithoutProductInput, order_itemsUncheckedCreateWithoutProductInput> | order_itemsCreateWithoutProductInput[] | order_itemsUncheckedCreateWithoutProductInput[]
    connectOrCreate?: order_itemsCreateOrConnectWithoutProductInput | order_itemsCreateOrConnectWithoutProductInput[]
    upsert?: order_itemsUpsertWithWhereUniqueWithoutProductInput | order_itemsUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: order_itemsCreateManyProductInputEnvelope
    set?: order_itemsWhereUniqueInput | order_itemsWhereUniqueInput[]
    disconnect?: order_itemsWhereUniqueInput | order_itemsWhereUniqueInput[]
    delete?: order_itemsWhereUniqueInput | order_itemsWhereUniqueInput[]
    connect?: order_itemsWhereUniqueInput | order_itemsWhereUniqueInput[]
    update?: order_itemsUpdateWithWhereUniqueWithoutProductInput | order_itemsUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: order_itemsUpdateManyWithWhereWithoutProductInput | order_itemsUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: order_itemsScalarWhereInput | order_itemsScalarWhereInput[]
  }

  export type reviewsUncheckedUpdateManyWithoutProductNestedInput = {
    create?: XOR<reviewsCreateWithoutProductInput, reviewsUncheckedCreateWithoutProductInput> | reviewsCreateWithoutProductInput[] | reviewsUncheckedCreateWithoutProductInput[]
    connectOrCreate?: reviewsCreateOrConnectWithoutProductInput | reviewsCreateOrConnectWithoutProductInput[]
    upsert?: reviewsUpsertWithWhereUniqueWithoutProductInput | reviewsUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: reviewsCreateManyProductInputEnvelope
    set?: reviewsWhereUniqueInput | reviewsWhereUniqueInput[]
    disconnect?: reviewsWhereUniqueInput | reviewsWhereUniqueInput[]
    delete?: reviewsWhereUniqueInput | reviewsWhereUniqueInput[]
    connect?: reviewsWhereUniqueInput | reviewsWhereUniqueInput[]
    update?: reviewsUpdateWithWhereUniqueWithoutProductInput | reviewsUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: reviewsUpdateManyWithWhereWithoutProductInput | reviewsUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: reviewsScalarWhereInput | reviewsScalarWhereInput[]
  }

  export type product_imagesUncheckedUpdateManyWithoutProductNestedInput = {
    create?: XOR<product_imagesCreateWithoutProductInput, product_imagesUncheckedCreateWithoutProductInput> | product_imagesCreateWithoutProductInput[] | product_imagesUncheckedCreateWithoutProductInput[]
    connectOrCreate?: product_imagesCreateOrConnectWithoutProductInput | product_imagesCreateOrConnectWithoutProductInput[]
    upsert?: product_imagesUpsertWithWhereUniqueWithoutProductInput | product_imagesUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: product_imagesCreateManyProductInputEnvelope
    set?: product_imagesWhereUniqueInput | product_imagesWhereUniqueInput[]
    disconnect?: product_imagesWhereUniqueInput | product_imagesWhereUniqueInput[]
    delete?: product_imagesWhereUniqueInput | product_imagesWhereUniqueInput[]
    connect?: product_imagesWhereUniqueInput | product_imagesWhereUniqueInput[]
    update?: product_imagesUpdateWithWhereUniqueWithoutProductInput | product_imagesUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: product_imagesUpdateManyWithWhereWithoutProductInput | product_imagesUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: product_imagesScalarWhereInput | product_imagesScalarWhereInput[]
  }

  export type product_specificationsUncheckedUpdateManyWithoutProductNestedInput = {
    create?: XOR<product_specificationsCreateWithoutProductInput, product_specificationsUncheckedCreateWithoutProductInput> | product_specificationsCreateWithoutProductInput[] | product_specificationsUncheckedCreateWithoutProductInput[]
    connectOrCreate?: product_specificationsCreateOrConnectWithoutProductInput | product_specificationsCreateOrConnectWithoutProductInput[]
    upsert?: product_specificationsUpsertWithWhereUniqueWithoutProductInput | product_specificationsUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: product_specificationsCreateManyProductInputEnvelope
    set?: product_specificationsWhereUniqueInput | product_specificationsWhereUniqueInput[]
    disconnect?: product_specificationsWhereUniqueInput | product_specificationsWhereUniqueInput[]
    delete?: product_specificationsWhereUniqueInput | product_specificationsWhereUniqueInput[]
    connect?: product_specificationsWhereUniqueInput | product_specificationsWhereUniqueInput[]
    update?: product_specificationsUpdateWithWhereUniqueWithoutProductInput | product_specificationsUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: product_specificationsUpdateManyWithWhereWithoutProductInput | product_specificationsUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: product_specificationsScalarWhereInput | product_specificationsScalarWhereInput[]
  }

  export type product_attributesUncheckedUpdateManyWithoutProductNestedInput = {
    create?: XOR<product_attributesCreateWithoutProductInput, product_attributesUncheckedCreateWithoutProductInput> | product_attributesCreateWithoutProductInput[] | product_attributesUncheckedCreateWithoutProductInput[]
    connectOrCreate?: product_attributesCreateOrConnectWithoutProductInput | product_attributesCreateOrConnectWithoutProductInput[]
    upsert?: product_attributesUpsertWithWhereUniqueWithoutProductInput | product_attributesUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: product_attributesCreateManyProductInputEnvelope
    set?: product_attributesWhereUniqueInput | product_attributesWhereUniqueInput[]
    disconnect?: product_attributesWhereUniqueInput | product_attributesWhereUniqueInput[]
    delete?: product_attributesWhereUniqueInput | product_attributesWhereUniqueInput[]
    connect?: product_attributesWhereUniqueInput | product_attributesWhereUniqueInput[]
    update?: product_attributesUpdateWithWhereUniqueWithoutProductInput | product_attributesUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: product_attributesUpdateManyWithWhereWithoutProductInput | product_attributesUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: product_attributesScalarWhereInput | product_attributesScalarWhereInput[]
  }

  export type categoriesCreateNestedOneWithoutChildrenInput = {
    create?: XOR<categoriesCreateWithoutChildrenInput, categoriesUncheckedCreateWithoutChildrenInput>
    connectOrCreate?: categoriesCreateOrConnectWithoutChildrenInput
    connect?: categoriesWhereUniqueInput
  }

  export type categoriesCreateNestedManyWithoutParentInput = {
    create?: XOR<categoriesCreateWithoutParentInput, categoriesUncheckedCreateWithoutParentInput> | categoriesCreateWithoutParentInput[] | categoriesUncheckedCreateWithoutParentInput[]
    connectOrCreate?: categoriesCreateOrConnectWithoutParentInput | categoriesCreateOrConnectWithoutParentInput[]
    createMany?: categoriesCreateManyParentInputEnvelope
    connect?: categoriesWhereUniqueInput | categoriesWhereUniqueInput[]
  }

  export type productsCreateNestedManyWithoutCategoryInput = {
    create?: XOR<productsCreateWithoutCategoryInput, productsUncheckedCreateWithoutCategoryInput> | productsCreateWithoutCategoryInput[] | productsUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: productsCreateOrConnectWithoutCategoryInput | productsCreateOrConnectWithoutCategoryInput[]
    createMany?: productsCreateManyCategoryInputEnvelope
    connect?: productsWhereUniqueInput | productsWhereUniqueInput[]
  }

  export type category_breadcrumbsCreateNestedManyWithoutCategoryInput = {
    create?: XOR<category_breadcrumbsCreateWithoutCategoryInput, category_breadcrumbsUncheckedCreateWithoutCategoryInput> | category_breadcrumbsCreateWithoutCategoryInput[] | category_breadcrumbsUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: category_breadcrumbsCreateOrConnectWithoutCategoryInput | category_breadcrumbsCreateOrConnectWithoutCategoryInput[]
    createMany?: category_breadcrumbsCreateManyCategoryInputEnvelope
    connect?: category_breadcrumbsWhereUniqueInput | category_breadcrumbsWhereUniqueInput[]
  }

  export type categoriesUncheckedCreateNestedManyWithoutParentInput = {
    create?: XOR<categoriesCreateWithoutParentInput, categoriesUncheckedCreateWithoutParentInput> | categoriesCreateWithoutParentInput[] | categoriesUncheckedCreateWithoutParentInput[]
    connectOrCreate?: categoriesCreateOrConnectWithoutParentInput | categoriesCreateOrConnectWithoutParentInput[]
    createMany?: categoriesCreateManyParentInputEnvelope
    connect?: categoriesWhereUniqueInput | categoriesWhereUniqueInput[]
  }

  export type productsUncheckedCreateNestedManyWithoutCategoryInput = {
    create?: XOR<productsCreateWithoutCategoryInput, productsUncheckedCreateWithoutCategoryInput> | productsCreateWithoutCategoryInput[] | productsUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: productsCreateOrConnectWithoutCategoryInput | productsCreateOrConnectWithoutCategoryInput[]
    createMany?: productsCreateManyCategoryInputEnvelope
    connect?: productsWhereUniqueInput | productsWhereUniqueInput[]
  }

  export type category_breadcrumbsUncheckedCreateNestedManyWithoutCategoryInput = {
    create?: XOR<category_breadcrumbsCreateWithoutCategoryInput, category_breadcrumbsUncheckedCreateWithoutCategoryInput> | category_breadcrumbsCreateWithoutCategoryInput[] | category_breadcrumbsUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: category_breadcrumbsCreateOrConnectWithoutCategoryInput | category_breadcrumbsCreateOrConnectWithoutCategoryInput[]
    createMany?: category_breadcrumbsCreateManyCategoryInputEnvelope
    connect?: category_breadcrumbsWhereUniqueInput | category_breadcrumbsWhereUniqueInput[]
  }

  export type categoriesUpdateOneWithoutChildrenNestedInput = {
    create?: XOR<categoriesCreateWithoutChildrenInput, categoriesUncheckedCreateWithoutChildrenInput>
    connectOrCreate?: categoriesCreateOrConnectWithoutChildrenInput
    upsert?: categoriesUpsertWithoutChildrenInput
    disconnect?: categoriesWhereInput | boolean
    delete?: categoriesWhereInput | boolean
    connect?: categoriesWhereUniqueInput
    update?: XOR<XOR<categoriesUpdateToOneWithWhereWithoutChildrenInput, categoriesUpdateWithoutChildrenInput>, categoriesUncheckedUpdateWithoutChildrenInput>
  }

  export type categoriesUpdateManyWithoutParentNestedInput = {
    create?: XOR<categoriesCreateWithoutParentInput, categoriesUncheckedCreateWithoutParentInput> | categoriesCreateWithoutParentInput[] | categoriesUncheckedCreateWithoutParentInput[]
    connectOrCreate?: categoriesCreateOrConnectWithoutParentInput | categoriesCreateOrConnectWithoutParentInput[]
    upsert?: categoriesUpsertWithWhereUniqueWithoutParentInput | categoriesUpsertWithWhereUniqueWithoutParentInput[]
    createMany?: categoriesCreateManyParentInputEnvelope
    set?: categoriesWhereUniqueInput | categoriesWhereUniqueInput[]
    disconnect?: categoriesWhereUniqueInput | categoriesWhereUniqueInput[]
    delete?: categoriesWhereUniqueInput | categoriesWhereUniqueInput[]
    connect?: categoriesWhereUniqueInput | categoriesWhereUniqueInput[]
    update?: categoriesUpdateWithWhereUniqueWithoutParentInput | categoriesUpdateWithWhereUniqueWithoutParentInput[]
    updateMany?: categoriesUpdateManyWithWhereWithoutParentInput | categoriesUpdateManyWithWhereWithoutParentInput[]
    deleteMany?: categoriesScalarWhereInput | categoriesScalarWhereInput[]
  }

  export type productsUpdateManyWithoutCategoryNestedInput = {
    create?: XOR<productsCreateWithoutCategoryInput, productsUncheckedCreateWithoutCategoryInput> | productsCreateWithoutCategoryInput[] | productsUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: productsCreateOrConnectWithoutCategoryInput | productsCreateOrConnectWithoutCategoryInput[]
    upsert?: productsUpsertWithWhereUniqueWithoutCategoryInput | productsUpsertWithWhereUniqueWithoutCategoryInput[]
    createMany?: productsCreateManyCategoryInputEnvelope
    set?: productsWhereUniqueInput | productsWhereUniqueInput[]
    disconnect?: productsWhereUniqueInput | productsWhereUniqueInput[]
    delete?: productsWhereUniqueInput | productsWhereUniqueInput[]
    connect?: productsWhereUniqueInput | productsWhereUniqueInput[]
    update?: productsUpdateWithWhereUniqueWithoutCategoryInput | productsUpdateWithWhereUniqueWithoutCategoryInput[]
    updateMany?: productsUpdateManyWithWhereWithoutCategoryInput | productsUpdateManyWithWhereWithoutCategoryInput[]
    deleteMany?: productsScalarWhereInput | productsScalarWhereInput[]
  }

  export type category_breadcrumbsUpdateManyWithoutCategoryNestedInput = {
    create?: XOR<category_breadcrumbsCreateWithoutCategoryInput, category_breadcrumbsUncheckedCreateWithoutCategoryInput> | category_breadcrumbsCreateWithoutCategoryInput[] | category_breadcrumbsUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: category_breadcrumbsCreateOrConnectWithoutCategoryInput | category_breadcrumbsCreateOrConnectWithoutCategoryInput[]
    upsert?: category_breadcrumbsUpsertWithWhereUniqueWithoutCategoryInput | category_breadcrumbsUpsertWithWhereUniqueWithoutCategoryInput[]
    createMany?: category_breadcrumbsCreateManyCategoryInputEnvelope
    set?: category_breadcrumbsWhereUniqueInput | category_breadcrumbsWhereUniqueInput[]
    disconnect?: category_breadcrumbsWhereUniqueInput | category_breadcrumbsWhereUniqueInput[]
    delete?: category_breadcrumbsWhereUniqueInput | category_breadcrumbsWhereUniqueInput[]
    connect?: category_breadcrumbsWhereUniqueInput | category_breadcrumbsWhereUniqueInput[]
    update?: category_breadcrumbsUpdateWithWhereUniqueWithoutCategoryInput | category_breadcrumbsUpdateWithWhereUniqueWithoutCategoryInput[]
    updateMany?: category_breadcrumbsUpdateManyWithWhereWithoutCategoryInput | category_breadcrumbsUpdateManyWithWhereWithoutCategoryInput[]
    deleteMany?: category_breadcrumbsScalarWhereInput | category_breadcrumbsScalarWhereInput[]
  }

  export type categoriesUncheckedUpdateManyWithoutParentNestedInput = {
    create?: XOR<categoriesCreateWithoutParentInput, categoriesUncheckedCreateWithoutParentInput> | categoriesCreateWithoutParentInput[] | categoriesUncheckedCreateWithoutParentInput[]
    connectOrCreate?: categoriesCreateOrConnectWithoutParentInput | categoriesCreateOrConnectWithoutParentInput[]
    upsert?: categoriesUpsertWithWhereUniqueWithoutParentInput | categoriesUpsertWithWhereUniqueWithoutParentInput[]
    createMany?: categoriesCreateManyParentInputEnvelope
    set?: categoriesWhereUniqueInput | categoriesWhereUniqueInput[]
    disconnect?: categoriesWhereUniqueInput | categoriesWhereUniqueInput[]
    delete?: categoriesWhereUniqueInput | categoriesWhereUniqueInput[]
    connect?: categoriesWhereUniqueInput | categoriesWhereUniqueInput[]
    update?: categoriesUpdateWithWhereUniqueWithoutParentInput | categoriesUpdateWithWhereUniqueWithoutParentInput[]
    updateMany?: categoriesUpdateManyWithWhereWithoutParentInput | categoriesUpdateManyWithWhereWithoutParentInput[]
    deleteMany?: categoriesScalarWhereInput | categoriesScalarWhereInput[]
  }

  export type productsUncheckedUpdateManyWithoutCategoryNestedInput = {
    create?: XOR<productsCreateWithoutCategoryInput, productsUncheckedCreateWithoutCategoryInput> | productsCreateWithoutCategoryInput[] | productsUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: productsCreateOrConnectWithoutCategoryInput | productsCreateOrConnectWithoutCategoryInput[]
    upsert?: productsUpsertWithWhereUniqueWithoutCategoryInput | productsUpsertWithWhereUniqueWithoutCategoryInput[]
    createMany?: productsCreateManyCategoryInputEnvelope
    set?: productsWhereUniqueInput | productsWhereUniqueInput[]
    disconnect?: productsWhereUniqueInput | productsWhereUniqueInput[]
    delete?: productsWhereUniqueInput | productsWhereUniqueInput[]
    connect?: productsWhereUniqueInput | productsWhereUniqueInput[]
    update?: productsUpdateWithWhereUniqueWithoutCategoryInput | productsUpdateWithWhereUniqueWithoutCategoryInput[]
    updateMany?: productsUpdateManyWithWhereWithoutCategoryInput | productsUpdateManyWithWhereWithoutCategoryInput[]
    deleteMany?: productsScalarWhereInput | productsScalarWhereInput[]
  }

  export type category_breadcrumbsUncheckedUpdateManyWithoutCategoryNestedInput = {
    create?: XOR<category_breadcrumbsCreateWithoutCategoryInput, category_breadcrumbsUncheckedCreateWithoutCategoryInput> | category_breadcrumbsCreateWithoutCategoryInput[] | category_breadcrumbsUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: category_breadcrumbsCreateOrConnectWithoutCategoryInput | category_breadcrumbsCreateOrConnectWithoutCategoryInput[]
    upsert?: category_breadcrumbsUpsertWithWhereUniqueWithoutCategoryInput | category_breadcrumbsUpsertWithWhereUniqueWithoutCategoryInput[]
    createMany?: category_breadcrumbsCreateManyCategoryInputEnvelope
    set?: category_breadcrumbsWhereUniqueInput | category_breadcrumbsWhereUniqueInput[]
    disconnect?: category_breadcrumbsWhereUniqueInput | category_breadcrumbsWhereUniqueInput[]
    delete?: category_breadcrumbsWhereUniqueInput | category_breadcrumbsWhereUniqueInput[]
    connect?: category_breadcrumbsWhereUniqueInput | category_breadcrumbsWhereUniqueInput[]
    update?: category_breadcrumbsUpdateWithWhereUniqueWithoutCategoryInput | category_breadcrumbsUpdateWithWhereUniqueWithoutCategoryInput[]
    updateMany?: category_breadcrumbsUpdateManyWithWhereWithoutCategoryInput | category_breadcrumbsUpdateManyWithWhereWithoutCategoryInput[]
    deleteMany?: category_breadcrumbsScalarWhereInput | category_breadcrumbsScalarWhereInput[]
  }

  export type categoriesCreateNestedOneWithoutCategory_breadcrumbsInput = {
    create?: XOR<categoriesCreateWithoutCategory_breadcrumbsInput, categoriesUncheckedCreateWithoutCategory_breadcrumbsInput>
    connectOrCreate?: categoriesCreateOrConnectWithoutCategory_breadcrumbsInput
    connect?: categoriesWhereUniqueInput
  }

  export type categoriesUpdateOneRequiredWithoutCategory_breadcrumbsNestedInput = {
    create?: XOR<categoriesCreateWithoutCategory_breadcrumbsInput, categoriesUncheckedCreateWithoutCategory_breadcrumbsInput>
    connectOrCreate?: categoriesCreateOrConnectWithoutCategory_breadcrumbsInput
    upsert?: categoriesUpsertWithoutCategory_breadcrumbsInput
    connect?: categoriesWhereUniqueInput
    update?: XOR<XOR<categoriesUpdateToOneWithWhereWithoutCategory_breadcrumbsInput, categoriesUpdateWithoutCategory_breadcrumbsInput>, categoriesUncheckedUpdateWithoutCategory_breadcrumbsInput>
  }

  export type productsCreateNestedOneWithoutProduct_imagesInput = {
    create?: XOR<productsCreateWithoutProduct_imagesInput, productsUncheckedCreateWithoutProduct_imagesInput>
    connectOrCreate?: productsCreateOrConnectWithoutProduct_imagesInput
    connect?: productsWhereUniqueInput
  }

  export type productsUpdateOneRequiredWithoutProduct_imagesNestedInput = {
    create?: XOR<productsCreateWithoutProduct_imagesInput, productsUncheckedCreateWithoutProduct_imagesInput>
    connectOrCreate?: productsCreateOrConnectWithoutProduct_imagesInput
    upsert?: productsUpsertWithoutProduct_imagesInput
    connect?: productsWhereUniqueInput
    update?: XOR<XOR<productsUpdateToOneWithWhereWithoutProduct_imagesInput, productsUpdateWithoutProduct_imagesInput>, productsUncheckedUpdateWithoutProduct_imagesInput>
  }

  export type productsCreateNestedOneWithoutProduct_specificationsInput = {
    create?: XOR<productsCreateWithoutProduct_specificationsInput, productsUncheckedCreateWithoutProduct_specificationsInput>
    connectOrCreate?: productsCreateOrConnectWithoutProduct_specificationsInput
    connect?: productsWhereUniqueInput
  }

  export type product_attributesCreateNestedManyWithoutSpecificationInput = {
    create?: XOR<product_attributesCreateWithoutSpecificationInput, product_attributesUncheckedCreateWithoutSpecificationInput> | product_attributesCreateWithoutSpecificationInput[] | product_attributesUncheckedCreateWithoutSpecificationInput[]
    connectOrCreate?: product_attributesCreateOrConnectWithoutSpecificationInput | product_attributesCreateOrConnectWithoutSpecificationInput[]
    createMany?: product_attributesCreateManySpecificationInputEnvelope
    connect?: product_attributesWhereUniqueInput | product_attributesWhereUniqueInput[]
  }

  export type product_attributesUncheckedCreateNestedManyWithoutSpecificationInput = {
    create?: XOR<product_attributesCreateWithoutSpecificationInput, product_attributesUncheckedCreateWithoutSpecificationInput> | product_attributesCreateWithoutSpecificationInput[] | product_attributesUncheckedCreateWithoutSpecificationInput[]
    connectOrCreate?: product_attributesCreateOrConnectWithoutSpecificationInput | product_attributesCreateOrConnectWithoutSpecificationInput[]
    createMany?: product_attributesCreateManySpecificationInputEnvelope
    connect?: product_attributesWhereUniqueInput | product_attributesWhereUniqueInput[]
  }

  export type productsUpdateOneRequiredWithoutProduct_specificationsNestedInput = {
    create?: XOR<productsCreateWithoutProduct_specificationsInput, productsUncheckedCreateWithoutProduct_specificationsInput>
    connectOrCreate?: productsCreateOrConnectWithoutProduct_specificationsInput
    upsert?: productsUpsertWithoutProduct_specificationsInput
    connect?: productsWhereUniqueInput
    update?: XOR<XOR<productsUpdateToOneWithWhereWithoutProduct_specificationsInput, productsUpdateWithoutProduct_specificationsInput>, productsUncheckedUpdateWithoutProduct_specificationsInput>
  }

  export type product_attributesUpdateManyWithoutSpecificationNestedInput = {
    create?: XOR<product_attributesCreateWithoutSpecificationInput, product_attributesUncheckedCreateWithoutSpecificationInput> | product_attributesCreateWithoutSpecificationInput[] | product_attributesUncheckedCreateWithoutSpecificationInput[]
    connectOrCreate?: product_attributesCreateOrConnectWithoutSpecificationInput | product_attributesCreateOrConnectWithoutSpecificationInput[]
    upsert?: product_attributesUpsertWithWhereUniqueWithoutSpecificationInput | product_attributesUpsertWithWhereUniqueWithoutSpecificationInput[]
    createMany?: product_attributesCreateManySpecificationInputEnvelope
    set?: product_attributesWhereUniqueInput | product_attributesWhereUniqueInput[]
    disconnect?: product_attributesWhereUniqueInput | product_attributesWhereUniqueInput[]
    delete?: product_attributesWhereUniqueInput | product_attributesWhereUniqueInput[]
    connect?: product_attributesWhereUniqueInput | product_attributesWhereUniqueInput[]
    update?: product_attributesUpdateWithWhereUniqueWithoutSpecificationInput | product_attributesUpdateWithWhereUniqueWithoutSpecificationInput[]
    updateMany?: product_attributesUpdateManyWithWhereWithoutSpecificationInput | product_attributesUpdateManyWithWhereWithoutSpecificationInput[]
    deleteMany?: product_attributesScalarWhereInput | product_attributesScalarWhereInput[]
  }

  export type product_attributesUncheckedUpdateManyWithoutSpecificationNestedInput = {
    create?: XOR<product_attributesCreateWithoutSpecificationInput, product_attributesUncheckedCreateWithoutSpecificationInput> | product_attributesCreateWithoutSpecificationInput[] | product_attributesUncheckedCreateWithoutSpecificationInput[]
    connectOrCreate?: product_attributesCreateOrConnectWithoutSpecificationInput | product_attributesCreateOrConnectWithoutSpecificationInput[]
    upsert?: product_attributesUpsertWithWhereUniqueWithoutSpecificationInput | product_attributesUpsertWithWhereUniqueWithoutSpecificationInput[]
    createMany?: product_attributesCreateManySpecificationInputEnvelope
    set?: product_attributesWhereUniqueInput | product_attributesWhereUniqueInput[]
    disconnect?: product_attributesWhereUniqueInput | product_attributesWhereUniqueInput[]
    delete?: product_attributesWhereUniqueInput | product_attributesWhereUniqueInput[]
    connect?: product_attributesWhereUniqueInput | product_attributesWhereUniqueInput[]
    update?: product_attributesUpdateWithWhereUniqueWithoutSpecificationInput | product_attributesUpdateWithWhereUniqueWithoutSpecificationInput[]
    updateMany?: product_attributesUpdateManyWithWhereWithoutSpecificationInput | product_attributesUpdateManyWithWhereWithoutSpecificationInput[]
    deleteMany?: product_attributesScalarWhereInput | product_attributesScalarWhereInput[]
  }

  export type productsCreateNestedOneWithoutProduct_attributesInput = {
    create?: XOR<productsCreateWithoutProduct_attributesInput, productsUncheckedCreateWithoutProduct_attributesInput>
    connectOrCreate?: productsCreateOrConnectWithoutProduct_attributesInput
    connect?: productsWhereUniqueInput
  }

  export type product_specificationsCreateNestedOneWithoutProduct_attributesInput = {
    create?: XOR<product_specificationsCreateWithoutProduct_attributesInput, product_specificationsUncheckedCreateWithoutProduct_attributesInput>
    connectOrCreate?: product_specificationsCreateOrConnectWithoutProduct_attributesInput
    connect?: product_specificationsWhereUniqueInput
  }

  export type productsUpdateOneRequiredWithoutProduct_attributesNestedInput = {
    create?: XOR<productsCreateWithoutProduct_attributesInput, productsUncheckedCreateWithoutProduct_attributesInput>
    connectOrCreate?: productsCreateOrConnectWithoutProduct_attributesInput
    upsert?: productsUpsertWithoutProduct_attributesInput
    connect?: productsWhereUniqueInput
    update?: XOR<XOR<productsUpdateToOneWithWhereWithoutProduct_attributesInput, productsUpdateWithoutProduct_attributesInput>, productsUncheckedUpdateWithoutProduct_attributesInput>
  }

  export type product_specificationsUpdateOneRequiredWithoutProduct_attributesNestedInput = {
    create?: XOR<product_specificationsCreateWithoutProduct_attributesInput, product_specificationsUncheckedCreateWithoutProduct_attributesInput>
    connectOrCreate?: product_specificationsCreateOrConnectWithoutProduct_attributesInput
    upsert?: product_specificationsUpsertWithoutProduct_attributesInput
    connect?: product_specificationsWhereUniqueInput
    update?: XOR<XOR<product_specificationsUpdateToOneWithWhereWithoutProduct_attributesInput, product_specificationsUpdateWithoutProduct_attributesInput>, product_specificationsUncheckedUpdateWithoutProduct_attributesInput>
  }

  export type usersCreateNestedOneWithoutOrdersInput = {
    create?: XOR<usersCreateWithoutOrdersInput, usersUncheckedCreateWithoutOrdersInput>
    connectOrCreate?: usersCreateOrConnectWithoutOrdersInput
    connect?: usersWhereUniqueInput
  }

  export type addressesCreateNestedOneWithoutOrdersInput = {
    create?: XOR<addressesCreateWithoutOrdersInput, addressesUncheckedCreateWithoutOrdersInput>
    connectOrCreate?: addressesCreateOrConnectWithoutOrdersInput
    connect?: addressesWhereUniqueInput
  }

  export type order_itemsCreateNestedManyWithoutOrderInput = {
    create?: XOR<order_itemsCreateWithoutOrderInput, order_itemsUncheckedCreateWithoutOrderInput> | order_itemsCreateWithoutOrderInput[] | order_itemsUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: order_itemsCreateOrConnectWithoutOrderInput | order_itemsCreateOrConnectWithoutOrderInput[]
    createMany?: order_itemsCreateManyOrderInputEnvelope
    connect?: order_itemsWhereUniqueInput | order_itemsWhereUniqueInput[]
  }

  export type paymentsCreateNestedManyWithoutOrderInput = {
    create?: XOR<paymentsCreateWithoutOrderInput, paymentsUncheckedCreateWithoutOrderInput> | paymentsCreateWithoutOrderInput[] | paymentsUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: paymentsCreateOrConnectWithoutOrderInput | paymentsCreateOrConnectWithoutOrderInput[]
    createMany?: paymentsCreateManyOrderInputEnvelope
    connect?: paymentsWhereUniqueInput | paymentsWhereUniqueInput[]
  }

  export type order_itemsUncheckedCreateNestedManyWithoutOrderInput = {
    create?: XOR<order_itemsCreateWithoutOrderInput, order_itemsUncheckedCreateWithoutOrderInput> | order_itemsCreateWithoutOrderInput[] | order_itemsUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: order_itemsCreateOrConnectWithoutOrderInput | order_itemsCreateOrConnectWithoutOrderInput[]
    createMany?: order_itemsCreateManyOrderInputEnvelope
    connect?: order_itemsWhereUniqueInput | order_itemsWhereUniqueInput[]
  }

  export type paymentsUncheckedCreateNestedManyWithoutOrderInput = {
    create?: XOR<paymentsCreateWithoutOrderInput, paymentsUncheckedCreateWithoutOrderInput> | paymentsCreateWithoutOrderInput[] | paymentsUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: paymentsCreateOrConnectWithoutOrderInput | paymentsCreateOrConnectWithoutOrderInput[]
    createMany?: paymentsCreateManyOrderInputEnvelope
    connect?: paymentsWhereUniqueInput | paymentsWhereUniqueInput[]
  }

  export type EnumOrderStatusEnumFieldUpdateOperationsInput = {
    set?: $Enums.OrderStatusEnum
  }

  export type usersUpdateOneRequiredWithoutOrdersNestedInput = {
    create?: XOR<usersCreateWithoutOrdersInput, usersUncheckedCreateWithoutOrdersInput>
    connectOrCreate?: usersCreateOrConnectWithoutOrdersInput
    upsert?: usersUpsertWithoutOrdersInput
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutOrdersInput, usersUpdateWithoutOrdersInput>, usersUncheckedUpdateWithoutOrdersInput>
  }

  export type addressesUpdateOneRequiredWithoutOrdersNestedInput = {
    create?: XOR<addressesCreateWithoutOrdersInput, addressesUncheckedCreateWithoutOrdersInput>
    connectOrCreate?: addressesCreateOrConnectWithoutOrdersInput
    upsert?: addressesUpsertWithoutOrdersInput
    connect?: addressesWhereUniqueInput
    update?: XOR<XOR<addressesUpdateToOneWithWhereWithoutOrdersInput, addressesUpdateWithoutOrdersInput>, addressesUncheckedUpdateWithoutOrdersInput>
  }

  export type order_itemsUpdateManyWithoutOrderNestedInput = {
    create?: XOR<order_itemsCreateWithoutOrderInput, order_itemsUncheckedCreateWithoutOrderInput> | order_itemsCreateWithoutOrderInput[] | order_itemsUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: order_itemsCreateOrConnectWithoutOrderInput | order_itemsCreateOrConnectWithoutOrderInput[]
    upsert?: order_itemsUpsertWithWhereUniqueWithoutOrderInput | order_itemsUpsertWithWhereUniqueWithoutOrderInput[]
    createMany?: order_itemsCreateManyOrderInputEnvelope
    set?: order_itemsWhereUniqueInput | order_itemsWhereUniqueInput[]
    disconnect?: order_itemsWhereUniqueInput | order_itemsWhereUniqueInput[]
    delete?: order_itemsWhereUniqueInput | order_itemsWhereUniqueInput[]
    connect?: order_itemsWhereUniqueInput | order_itemsWhereUniqueInput[]
    update?: order_itemsUpdateWithWhereUniqueWithoutOrderInput | order_itemsUpdateWithWhereUniqueWithoutOrderInput[]
    updateMany?: order_itemsUpdateManyWithWhereWithoutOrderInput | order_itemsUpdateManyWithWhereWithoutOrderInput[]
    deleteMany?: order_itemsScalarWhereInput | order_itemsScalarWhereInput[]
  }

  export type paymentsUpdateManyWithoutOrderNestedInput = {
    create?: XOR<paymentsCreateWithoutOrderInput, paymentsUncheckedCreateWithoutOrderInput> | paymentsCreateWithoutOrderInput[] | paymentsUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: paymentsCreateOrConnectWithoutOrderInput | paymentsCreateOrConnectWithoutOrderInput[]
    upsert?: paymentsUpsertWithWhereUniqueWithoutOrderInput | paymentsUpsertWithWhereUniqueWithoutOrderInput[]
    createMany?: paymentsCreateManyOrderInputEnvelope
    set?: paymentsWhereUniqueInput | paymentsWhereUniqueInput[]
    disconnect?: paymentsWhereUniqueInput | paymentsWhereUniqueInput[]
    delete?: paymentsWhereUniqueInput | paymentsWhereUniqueInput[]
    connect?: paymentsWhereUniqueInput | paymentsWhereUniqueInput[]
    update?: paymentsUpdateWithWhereUniqueWithoutOrderInput | paymentsUpdateWithWhereUniqueWithoutOrderInput[]
    updateMany?: paymentsUpdateManyWithWhereWithoutOrderInput | paymentsUpdateManyWithWhereWithoutOrderInput[]
    deleteMany?: paymentsScalarWhereInput | paymentsScalarWhereInput[]
  }

  export type order_itemsUncheckedUpdateManyWithoutOrderNestedInput = {
    create?: XOR<order_itemsCreateWithoutOrderInput, order_itemsUncheckedCreateWithoutOrderInput> | order_itemsCreateWithoutOrderInput[] | order_itemsUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: order_itemsCreateOrConnectWithoutOrderInput | order_itemsCreateOrConnectWithoutOrderInput[]
    upsert?: order_itemsUpsertWithWhereUniqueWithoutOrderInput | order_itemsUpsertWithWhereUniqueWithoutOrderInput[]
    createMany?: order_itemsCreateManyOrderInputEnvelope
    set?: order_itemsWhereUniqueInput | order_itemsWhereUniqueInput[]
    disconnect?: order_itemsWhereUniqueInput | order_itemsWhereUniqueInput[]
    delete?: order_itemsWhereUniqueInput | order_itemsWhereUniqueInput[]
    connect?: order_itemsWhereUniqueInput | order_itemsWhereUniqueInput[]
    update?: order_itemsUpdateWithWhereUniqueWithoutOrderInput | order_itemsUpdateWithWhereUniqueWithoutOrderInput[]
    updateMany?: order_itemsUpdateManyWithWhereWithoutOrderInput | order_itemsUpdateManyWithWhereWithoutOrderInput[]
    deleteMany?: order_itemsScalarWhereInput | order_itemsScalarWhereInput[]
  }

  export type paymentsUncheckedUpdateManyWithoutOrderNestedInput = {
    create?: XOR<paymentsCreateWithoutOrderInput, paymentsUncheckedCreateWithoutOrderInput> | paymentsCreateWithoutOrderInput[] | paymentsUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: paymentsCreateOrConnectWithoutOrderInput | paymentsCreateOrConnectWithoutOrderInput[]
    upsert?: paymentsUpsertWithWhereUniqueWithoutOrderInput | paymentsUpsertWithWhereUniqueWithoutOrderInput[]
    createMany?: paymentsCreateManyOrderInputEnvelope
    set?: paymentsWhereUniqueInput | paymentsWhereUniqueInput[]
    disconnect?: paymentsWhereUniqueInput | paymentsWhereUniqueInput[]
    delete?: paymentsWhereUniqueInput | paymentsWhereUniqueInput[]
    connect?: paymentsWhereUniqueInput | paymentsWhereUniqueInput[]
    update?: paymentsUpdateWithWhereUniqueWithoutOrderInput | paymentsUpdateWithWhereUniqueWithoutOrderInput[]
    updateMany?: paymentsUpdateManyWithWhereWithoutOrderInput | paymentsUpdateManyWithWhereWithoutOrderInput[]
    deleteMany?: paymentsScalarWhereInput | paymentsScalarWhereInput[]
  }

  export type ordersCreateNestedOneWithoutOrder_itemsInput = {
    create?: XOR<ordersCreateWithoutOrder_itemsInput, ordersUncheckedCreateWithoutOrder_itemsInput>
    connectOrCreate?: ordersCreateOrConnectWithoutOrder_itemsInput
    connect?: ordersWhereUniqueInput
  }

  export type productsCreateNestedOneWithoutOrder_itemsInput = {
    create?: XOR<productsCreateWithoutOrder_itemsInput, productsUncheckedCreateWithoutOrder_itemsInput>
    connectOrCreate?: productsCreateOrConnectWithoutOrder_itemsInput
    connect?: productsWhereUniqueInput
  }

  export type ordersUpdateOneRequiredWithoutOrder_itemsNestedInput = {
    create?: XOR<ordersCreateWithoutOrder_itemsInput, ordersUncheckedCreateWithoutOrder_itemsInput>
    connectOrCreate?: ordersCreateOrConnectWithoutOrder_itemsInput
    upsert?: ordersUpsertWithoutOrder_itemsInput
    connect?: ordersWhereUniqueInput
    update?: XOR<XOR<ordersUpdateToOneWithWhereWithoutOrder_itemsInput, ordersUpdateWithoutOrder_itemsInput>, ordersUncheckedUpdateWithoutOrder_itemsInput>
  }

  export type productsUpdateOneRequiredWithoutOrder_itemsNestedInput = {
    create?: XOR<productsCreateWithoutOrder_itemsInput, productsUncheckedCreateWithoutOrder_itemsInput>
    connectOrCreate?: productsCreateOrConnectWithoutOrder_itemsInput
    upsert?: productsUpsertWithoutOrder_itemsInput
    connect?: productsWhereUniqueInput
    update?: XOR<XOR<productsUpdateToOneWithWhereWithoutOrder_itemsInput, productsUpdateWithoutOrder_itemsInput>, productsUncheckedUpdateWithoutOrder_itemsInput>
  }

  export type usersCreateNestedOneWithoutCart_itemsInput = {
    create?: XOR<usersCreateWithoutCart_itemsInput, usersUncheckedCreateWithoutCart_itemsInput>
    connectOrCreate?: usersCreateOrConnectWithoutCart_itemsInput
    connect?: usersWhereUniqueInput
  }

  export type productsCreateNestedOneWithoutCart_itemsInput = {
    create?: XOR<productsCreateWithoutCart_itemsInput, productsUncheckedCreateWithoutCart_itemsInput>
    connectOrCreate?: productsCreateOrConnectWithoutCart_itemsInput
    connect?: productsWhereUniqueInput
  }

  export type usersUpdateOneRequiredWithoutCart_itemsNestedInput = {
    create?: XOR<usersCreateWithoutCart_itemsInput, usersUncheckedCreateWithoutCart_itemsInput>
    connectOrCreate?: usersCreateOrConnectWithoutCart_itemsInput
    upsert?: usersUpsertWithoutCart_itemsInput
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutCart_itemsInput, usersUpdateWithoutCart_itemsInput>, usersUncheckedUpdateWithoutCart_itemsInput>
  }

  export type productsUpdateOneRequiredWithoutCart_itemsNestedInput = {
    create?: XOR<productsCreateWithoutCart_itemsInput, productsUncheckedCreateWithoutCart_itemsInput>
    connectOrCreate?: productsCreateOrConnectWithoutCart_itemsInput
    upsert?: productsUpsertWithoutCart_itemsInput
    connect?: productsWhereUniqueInput
    update?: XOR<XOR<productsUpdateToOneWithWhereWithoutCart_itemsInput, productsUpdateWithoutCart_itemsInput>, productsUncheckedUpdateWithoutCart_itemsInput>
  }

  export type usersCreateNestedOneWithoutReviewsInput = {
    create?: XOR<usersCreateWithoutReviewsInput, usersUncheckedCreateWithoutReviewsInput>
    connectOrCreate?: usersCreateOrConnectWithoutReviewsInput
    connect?: usersWhereUniqueInput
  }

  export type productsCreateNestedOneWithoutReviewsInput = {
    create?: XOR<productsCreateWithoutReviewsInput, productsUncheckedCreateWithoutReviewsInput>
    connectOrCreate?: productsCreateOrConnectWithoutReviewsInput
    connect?: productsWhereUniqueInput
  }

  export type usersUpdateOneRequiredWithoutReviewsNestedInput = {
    create?: XOR<usersCreateWithoutReviewsInput, usersUncheckedCreateWithoutReviewsInput>
    connectOrCreate?: usersCreateOrConnectWithoutReviewsInput
    upsert?: usersUpsertWithoutReviewsInput
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutReviewsInput, usersUpdateWithoutReviewsInput>, usersUncheckedUpdateWithoutReviewsInput>
  }

  export type productsUpdateOneRequiredWithoutReviewsNestedInput = {
    create?: XOR<productsCreateWithoutReviewsInput, productsUncheckedCreateWithoutReviewsInput>
    connectOrCreate?: productsCreateOrConnectWithoutReviewsInput
    upsert?: productsUpsertWithoutReviewsInput
    connect?: productsWhereUniqueInput
    update?: XOR<XOR<productsUpdateToOneWithWhereWithoutReviewsInput, productsUpdateWithoutReviewsInput>, productsUncheckedUpdateWithoutReviewsInput>
  }

  export type ordersCreateNestedOneWithoutPaymentsInput = {
    create?: XOR<ordersCreateWithoutPaymentsInput, ordersUncheckedCreateWithoutPaymentsInput>
    connectOrCreate?: ordersCreateOrConnectWithoutPaymentsInput
    connect?: ordersWhereUniqueInput
  }

  export type usersCreateNestedOneWithoutPaymentsInput = {
    create?: XOR<usersCreateWithoutPaymentsInput, usersUncheckedCreateWithoutPaymentsInput>
    connectOrCreate?: usersCreateOrConnectWithoutPaymentsInput
    connect?: usersWhereUniqueInput
  }

  export type EnumPaymentStatusEnumFieldUpdateOperationsInput = {
    set?: $Enums.PaymentStatusEnum
  }

  export type ordersUpdateOneWithoutPaymentsNestedInput = {
    create?: XOR<ordersCreateWithoutPaymentsInput, ordersUncheckedCreateWithoutPaymentsInput>
    connectOrCreate?: ordersCreateOrConnectWithoutPaymentsInput
    upsert?: ordersUpsertWithoutPaymentsInput
    disconnect?: ordersWhereInput | boolean
    delete?: ordersWhereInput | boolean
    connect?: ordersWhereUniqueInput
    update?: XOR<XOR<ordersUpdateToOneWithWhereWithoutPaymentsInput, ordersUpdateWithoutPaymentsInput>, ordersUncheckedUpdateWithoutPaymentsInput>
  }

  export type usersUpdateOneRequiredWithoutPaymentsNestedInput = {
    create?: XOR<usersCreateWithoutPaymentsInput, usersUncheckedCreateWithoutPaymentsInput>
    connectOrCreate?: usersCreateOrConnectWithoutPaymentsInput
    upsert?: usersUpsertWithoutPaymentsInput
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutPaymentsInput, usersUpdateWithoutPaymentsInput>, usersUncheckedUpdateWithoutPaymentsInput>
  }

  export type usersCreateNestedOneWithoutConversationsInput = {
    create?: XOR<usersCreateWithoutConversationsInput, usersUncheckedCreateWithoutConversationsInput>
    connectOrCreate?: usersCreateOrConnectWithoutConversationsInput
    connect?: usersWhereUniqueInput
  }

  export type messagesCreateNestedManyWithoutConversationInput = {
    create?: XOR<messagesCreateWithoutConversationInput, messagesUncheckedCreateWithoutConversationInput> | messagesCreateWithoutConversationInput[] | messagesUncheckedCreateWithoutConversationInput[]
    connectOrCreate?: messagesCreateOrConnectWithoutConversationInput | messagesCreateOrConnectWithoutConversationInput[]
    createMany?: messagesCreateManyConversationInputEnvelope
    connect?: messagesWhereUniqueInput | messagesWhereUniqueInput[]
  }

  export type messagesUncheckedCreateNestedManyWithoutConversationInput = {
    create?: XOR<messagesCreateWithoutConversationInput, messagesUncheckedCreateWithoutConversationInput> | messagesCreateWithoutConversationInput[] | messagesUncheckedCreateWithoutConversationInput[]
    connectOrCreate?: messagesCreateOrConnectWithoutConversationInput | messagesCreateOrConnectWithoutConversationInput[]
    createMany?: messagesCreateManyConversationInputEnvelope
    connect?: messagesWhereUniqueInput | messagesWhereUniqueInput[]
  }

  export type usersUpdateOneRequiredWithoutConversationsNestedInput = {
    create?: XOR<usersCreateWithoutConversationsInput, usersUncheckedCreateWithoutConversationsInput>
    connectOrCreate?: usersCreateOrConnectWithoutConversationsInput
    upsert?: usersUpsertWithoutConversationsInput
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutConversationsInput, usersUpdateWithoutConversationsInput>, usersUncheckedUpdateWithoutConversationsInput>
  }

  export type messagesUpdateManyWithoutConversationNestedInput = {
    create?: XOR<messagesCreateWithoutConversationInput, messagesUncheckedCreateWithoutConversationInput> | messagesCreateWithoutConversationInput[] | messagesUncheckedCreateWithoutConversationInput[]
    connectOrCreate?: messagesCreateOrConnectWithoutConversationInput | messagesCreateOrConnectWithoutConversationInput[]
    upsert?: messagesUpsertWithWhereUniqueWithoutConversationInput | messagesUpsertWithWhereUniqueWithoutConversationInput[]
    createMany?: messagesCreateManyConversationInputEnvelope
    set?: messagesWhereUniqueInput | messagesWhereUniqueInput[]
    disconnect?: messagesWhereUniqueInput | messagesWhereUniqueInput[]
    delete?: messagesWhereUniqueInput | messagesWhereUniqueInput[]
    connect?: messagesWhereUniqueInput | messagesWhereUniqueInput[]
    update?: messagesUpdateWithWhereUniqueWithoutConversationInput | messagesUpdateWithWhereUniqueWithoutConversationInput[]
    updateMany?: messagesUpdateManyWithWhereWithoutConversationInput | messagesUpdateManyWithWhereWithoutConversationInput[]
    deleteMany?: messagesScalarWhereInput | messagesScalarWhereInput[]
  }

  export type messagesUncheckedUpdateManyWithoutConversationNestedInput = {
    create?: XOR<messagesCreateWithoutConversationInput, messagesUncheckedCreateWithoutConversationInput> | messagesCreateWithoutConversationInput[] | messagesUncheckedCreateWithoutConversationInput[]
    connectOrCreate?: messagesCreateOrConnectWithoutConversationInput | messagesCreateOrConnectWithoutConversationInput[]
    upsert?: messagesUpsertWithWhereUniqueWithoutConversationInput | messagesUpsertWithWhereUniqueWithoutConversationInput[]
    createMany?: messagesCreateManyConversationInputEnvelope
    set?: messagesWhereUniqueInput | messagesWhereUniqueInput[]
    disconnect?: messagesWhereUniqueInput | messagesWhereUniqueInput[]
    delete?: messagesWhereUniqueInput | messagesWhereUniqueInput[]
    connect?: messagesWhereUniqueInput | messagesWhereUniqueInput[]
    update?: messagesUpdateWithWhereUniqueWithoutConversationInput | messagesUpdateWithWhereUniqueWithoutConversationInput[]
    updateMany?: messagesUpdateManyWithWhereWithoutConversationInput | messagesUpdateManyWithWhereWithoutConversationInput[]
    deleteMany?: messagesScalarWhereInput | messagesScalarWhereInput[]
  }

  export type conversationsCreateNestedOneWithoutMessagesInput = {
    create?: XOR<conversationsCreateWithoutMessagesInput, conversationsUncheckedCreateWithoutMessagesInput>
    connectOrCreate?: conversationsCreateOrConnectWithoutMessagesInput
    connect?: conversationsWhereUniqueInput
  }

  export type conversationsUpdateOneRequiredWithoutMessagesNestedInput = {
    create?: XOR<conversationsCreateWithoutMessagesInput, conversationsUncheckedCreateWithoutMessagesInput>
    connectOrCreate?: conversationsCreateOrConnectWithoutMessagesInput
    upsert?: conversationsUpsertWithoutMessagesInput
    connect?: conversationsWhereUniqueInput
    update?: XOR<XOR<conversationsUpdateToOneWithWhereWithoutMessagesInput, conversationsUpdateWithoutMessagesInput>, conversationsUncheckedUpdateWithoutMessagesInput>
  }

  export type usersCreateNestedOneWithoutReset_password_tokenInput = {
    create?: XOR<usersCreateWithoutReset_password_tokenInput, usersUncheckedCreateWithoutReset_password_tokenInput>
    connectOrCreate?: usersCreateOrConnectWithoutReset_password_tokenInput
    connect?: usersWhereUniqueInput
  }

  export type usersUpdateOneRequiredWithoutReset_password_tokenNestedInput = {
    create?: XOR<usersCreateWithoutReset_password_tokenInput, usersUncheckedCreateWithoutReset_password_tokenInput>
    connectOrCreate?: usersCreateOrConnectWithoutReset_password_tokenInput
    upsert?: usersUpsertWithoutReset_password_tokenInput
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutReset_password_tokenInput, usersUpdateWithoutReset_password_tokenInput>, usersUncheckedUpdateWithoutReset_password_tokenInput>
  }

  export type usersCreateNestedOneWithoutHidden_by_sellersInput = {
    create?: XOR<usersCreateWithoutHidden_by_sellersInput, usersUncheckedCreateWithoutHidden_by_sellersInput>
    connectOrCreate?: usersCreateOrConnectWithoutHidden_by_sellersInput
    connect?: usersWhereUniqueInput
  }

  export type usersCreateNestedOneWithoutHidden_usersInput = {
    create?: XOR<usersCreateWithoutHidden_usersInput, usersUncheckedCreateWithoutHidden_usersInput>
    connectOrCreate?: usersCreateOrConnectWithoutHidden_usersInput
    connect?: usersWhereUniqueInput
  }

  export type usersUpdateOneRequiredWithoutHidden_by_sellersNestedInput = {
    create?: XOR<usersCreateWithoutHidden_by_sellersInput, usersUncheckedCreateWithoutHidden_by_sellersInput>
    connectOrCreate?: usersCreateOrConnectWithoutHidden_by_sellersInput
    upsert?: usersUpsertWithoutHidden_by_sellersInput
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutHidden_by_sellersInput, usersUpdateWithoutHidden_by_sellersInput>, usersUncheckedUpdateWithoutHidden_by_sellersInput>
  }

  export type usersUpdateOneRequiredWithoutHidden_usersNestedInput = {
    create?: XOR<usersCreateWithoutHidden_usersInput, usersUncheckedCreateWithoutHidden_usersInput>
    connectOrCreate?: usersCreateOrConnectWithoutHidden_usersInput
    upsert?: usersUpsertWithoutHidden_usersInput
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutHidden_usersInput, usersUpdateWithoutHidden_usersInput>, usersUncheckedUpdateWithoutHidden_usersInput>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedBoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedBoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedEnumRoleEnumFilter<$PrismaModel = never> = {
    equals?: $Enums.RoleEnum | EnumRoleEnumFieldRefInput<$PrismaModel>
    in?: $Enums.RoleEnum[]
    notIn?: $Enums.RoleEnum[]
    not?: NestedEnumRoleEnumFilter<$PrismaModel> | $Enums.RoleEnum
  }

  export type NestedEnumRoleEnumWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.RoleEnum | EnumRoleEnumFieldRefInput<$PrismaModel>
    in?: $Enums.RoleEnum[]
    notIn?: $Enums.RoleEnum[]
    not?: NestedEnumRoleEnumWithAggregatesFilter<$PrismaModel> | $Enums.RoleEnum
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumRoleEnumFilter<$PrismaModel>
    _max?: NestedEnumRoleEnumFilter<$PrismaModel>
  }

  export type NestedEnumPermissionEnumFilter<$PrismaModel = never> = {
    equals?: $Enums.PermissionEnum | EnumPermissionEnumFieldRefInput<$PrismaModel>
    in?: $Enums.PermissionEnum[]
    notIn?: $Enums.PermissionEnum[]
    not?: NestedEnumPermissionEnumFilter<$PrismaModel> | $Enums.PermissionEnum
  }

  export type NestedEnumPermissionEnumWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PermissionEnum | EnumPermissionEnumFieldRefInput<$PrismaModel>
    in?: $Enums.PermissionEnum[]
    notIn?: $Enums.PermissionEnum[]
    not?: NestedEnumPermissionEnumWithAggregatesFilter<$PrismaModel> | $Enums.PermissionEnum
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPermissionEnumFilter<$PrismaModel>
    _max?: NestedEnumPermissionEnumFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type NestedEnumAddressTypeEnumNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.AddressTypeEnum | EnumAddressTypeEnumFieldRefInput<$PrismaModel> | null
    in?: $Enums.AddressTypeEnum[] | null
    notIn?: $Enums.AddressTypeEnum[] | null
    not?: NestedEnumAddressTypeEnumNullableFilter<$PrismaModel> | $Enums.AddressTypeEnum | null
  }

  export type NestedEnumAddressTypeEnumNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.AddressTypeEnum | EnumAddressTypeEnumFieldRefInput<$PrismaModel> | null
    in?: $Enums.AddressTypeEnum[] | null
    notIn?: $Enums.AddressTypeEnum[] | null
    not?: NestedEnumAddressTypeEnumNullableWithAggregatesFilter<$PrismaModel> | $Enums.AddressTypeEnum | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumAddressTypeEnumNullableFilter<$PrismaModel>
    _max?: NestedEnumAddressTypeEnumNullableFilter<$PrismaModel>
  }

  export type NestedFloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type NestedEnumOrderStatusEnumFilter<$PrismaModel = never> = {
    equals?: $Enums.OrderStatusEnum | EnumOrderStatusEnumFieldRefInput<$PrismaModel>
    in?: $Enums.OrderStatusEnum[]
    notIn?: $Enums.OrderStatusEnum[]
    not?: NestedEnumOrderStatusEnumFilter<$PrismaModel> | $Enums.OrderStatusEnum
  }

  export type NestedEnumOrderStatusEnumWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.OrderStatusEnum | EnumOrderStatusEnumFieldRefInput<$PrismaModel>
    in?: $Enums.OrderStatusEnum[]
    notIn?: $Enums.OrderStatusEnum[]
    not?: NestedEnumOrderStatusEnumWithAggregatesFilter<$PrismaModel> | $Enums.OrderStatusEnum
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumOrderStatusEnumFilter<$PrismaModel>
    _max?: NestedEnumOrderStatusEnumFilter<$PrismaModel>
  }

  export type NestedEnumPaymentStatusEnumFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentStatusEnum | EnumPaymentStatusEnumFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentStatusEnum[]
    notIn?: $Enums.PaymentStatusEnum[]
    not?: NestedEnumPaymentStatusEnumFilter<$PrismaModel> | $Enums.PaymentStatusEnum
  }

  export type NestedEnumPaymentStatusEnumWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentStatusEnum | EnumPaymentStatusEnumFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentStatusEnum[]
    notIn?: $Enums.PaymentStatusEnum[]
    not?: NestedEnumPaymentStatusEnumWithAggregatesFilter<$PrismaModel> | $Enums.PaymentStatusEnum
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPaymentStatusEnumFilter<$PrismaModel>
    _max?: NestedEnumPaymentStatusEnumFilter<$PrismaModel>
  }
  export type NestedJsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<NestedJsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue
    lte?: InputJsonValue
    gt?: InputJsonValue
    gte?: InputJsonValue
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type rolesCreateWithoutUsersInput = {
    name: $Enums.RoleEnum
    created_at?: Date | string
    updated_at?: Date | string
    role_permissions?: role_permissionsCreateNestedManyWithoutRoleInput
  }

  export type rolesUncheckedCreateWithoutUsersInput = {
    id?: number
    name: $Enums.RoleEnum
    created_at?: Date | string
    updated_at?: Date | string
    role_permissions?: role_permissionsUncheckedCreateNestedManyWithoutRoleInput
  }

  export type rolesCreateOrConnectWithoutUsersInput = {
    where: rolesWhereUniqueInput
    create: XOR<rolesCreateWithoutUsersInput, rolesUncheckedCreateWithoutUsersInput>
  }

  export type addressesCreateWithoutUserInput = {
    full_name: string
    phone_number: string
    address: string
    province_id?: number | null
    province_name?: string | null
    district_id?: number | null
    district_name?: string | null
    ward_code?: string | null
    ward_name?: string | null
    region_id?: number | null
    type_address?: $Enums.AddressTypeEnum | null
    is_default?: boolean
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    orders?: ordersCreateNestedManyWithoutAddressInput
    shops?: shopsCreateNestedManyWithoutAddressInput
  }

  export type addressesUncheckedCreateWithoutUserInput = {
    id?: number
    full_name: string
    phone_number: string
    address: string
    province_id?: number | null
    province_name?: string | null
    district_id?: number | null
    district_name?: string | null
    ward_code?: string | null
    ward_name?: string | null
    region_id?: number | null
    type_address?: $Enums.AddressTypeEnum | null
    is_default?: boolean
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    orders?: ordersUncheckedCreateNestedManyWithoutAddressInput
    shops?: shopsUncheckedCreateNestedManyWithoutAddressInput
  }

  export type addressesCreateOrConnectWithoutUserInput = {
    where: addressesWhereUniqueInput
    create: XOR<addressesCreateWithoutUserInput, addressesUncheckedCreateWithoutUserInput>
  }

  export type addressesCreateManyUserInputEnvelope = {
    data: addressesCreateManyUserInput | addressesCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type ordersCreateWithoutUserInput = {
    uuid: string
    total_amount: number
    status?: $Enums.OrderStatusEnum
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    address: addressesCreateNestedOneWithoutOrdersInput
    order_items?: order_itemsCreateNestedManyWithoutOrderInput
    payments?: paymentsCreateNestedManyWithoutOrderInput
  }

  export type ordersUncheckedCreateWithoutUserInput = {
    id?: number
    uuid: string
    address_id: number
    total_amount: number
    status?: $Enums.OrderStatusEnum
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    order_items?: order_itemsUncheckedCreateNestedManyWithoutOrderInput
    payments?: paymentsUncheckedCreateNestedManyWithoutOrderInput
  }

  export type ordersCreateOrConnectWithoutUserInput = {
    where: ordersWhereUniqueInput
    create: XOR<ordersCreateWithoutUserInput, ordersUncheckedCreateWithoutUserInput>
  }

  export type ordersCreateManyUserInputEnvelope = {
    data: ordersCreateManyUserInput | ordersCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type cart_itemsCreateWithoutUserInput = {
    quantity: number
    created_at?: Date | string
    updated_at?: Date | string
    product: productsCreateNestedOneWithoutCart_itemsInput
  }

  export type cart_itemsUncheckedCreateWithoutUserInput = {
    id?: number
    product_id: number
    quantity: number
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type cart_itemsCreateOrConnectWithoutUserInput = {
    where: cart_itemsWhereUniqueInput
    create: XOR<cart_itemsCreateWithoutUserInput, cart_itemsUncheckedCreateWithoutUserInput>
  }

  export type cart_itemsCreateManyUserInputEnvelope = {
    data: cart_itemsCreateManyUserInput | cart_itemsCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type reviewsCreateWithoutUserInput = {
    uuid: string
    rating: number
    comment?: string | null
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    product: productsCreateNestedOneWithoutReviewsInput
  }

  export type reviewsUncheckedCreateWithoutUserInput = {
    id?: number
    uuid: string
    product_id: number
    rating: number
    comment?: string | null
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type reviewsCreateOrConnectWithoutUserInput = {
    where: reviewsWhereUniqueInput
    create: XOR<reviewsCreateWithoutUserInput, reviewsUncheckedCreateWithoutUserInput>
  }

  export type reviewsCreateManyUserInputEnvelope = {
    data: reviewsCreateManyUserInput | reviewsCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type paymentsCreateWithoutUserInput = {
    uuid: string
    amount: number
    provider: string
    transaction_id?: string | null
    status?: $Enums.PaymentStatusEnum
    items?: NullableJsonNullValueInput | InputJsonValue
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    order?: ordersCreateNestedOneWithoutPaymentsInput
  }

  export type paymentsUncheckedCreateWithoutUserInput = {
    id?: number
    uuid: string
    order_id?: number | null
    amount: number
    provider: string
    transaction_id?: string | null
    status?: $Enums.PaymentStatusEnum
    items?: NullableJsonNullValueInput | InputJsonValue
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type paymentsCreateOrConnectWithoutUserInput = {
    where: paymentsWhereUniqueInput
    create: XOR<paymentsCreateWithoutUserInput, paymentsUncheckedCreateWithoutUserInput>
  }

  export type paymentsCreateManyUserInputEnvelope = {
    data: paymentsCreateManyUserInput | paymentsCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type conversationsCreateWithoutUserInput = {
    chat_id: string
    title?: string | null
    started_at?: Date | string
    messages?: messagesCreateNestedManyWithoutConversationInput
  }

  export type conversationsUncheckedCreateWithoutUserInput = {
    id?: number
    chat_id: string
    title?: string | null
    started_at?: Date | string
    messages?: messagesUncheckedCreateNestedManyWithoutConversationInput
  }

  export type conversationsCreateOrConnectWithoutUserInput = {
    where: conversationsWhereUniqueInput
    create: XOR<conversationsCreateWithoutUserInput, conversationsUncheckedCreateWithoutUserInput>
  }

  export type conversationsCreateManyUserInputEnvelope = {
    data: conversationsCreateManyUserInput | conversationsCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type reset_password_tokenCreateWithoutUserInput = {
    token: string
    expires_at: Date | string
    created_at?: Date | string
  }

  export type reset_password_tokenUncheckedCreateWithoutUserInput = {
    id?: number
    token: string
    expires_at: Date | string
    created_at?: Date | string
  }

  export type reset_password_tokenCreateOrConnectWithoutUserInput = {
    where: reset_password_tokenWhereUniqueInput
    create: XOR<reset_password_tokenCreateWithoutUserInput, reset_password_tokenUncheckedCreateWithoutUserInput>
  }

  export type reset_password_tokenCreateManyUserInputEnvelope = {
    data: reset_password_tokenCreateManyUserInput | reset_password_tokenCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type shopsCreateWithoutSellerInput = {
    uuid: string
    name: string
    slug: string
    description?: string | null
    logo?: string | null
    rating?: number | null
    is_active?: boolean
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    address?: addressesCreateNestedOneWithoutShopsInput
    products?: productsCreateNestedManyWithoutShopInput
  }

  export type shopsUncheckedCreateWithoutSellerInput = {
    id?: number
    uuid: string
    name: string
    slug: string
    description?: string | null
    logo?: string | null
    address_id?: number | null
    rating?: number | null
    is_active?: boolean
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    products?: productsUncheckedCreateNestedManyWithoutShopInput
  }

  export type shopsCreateOrConnectWithoutSellerInput = {
    where: shopsWhereUniqueInput
    create: XOR<shopsCreateWithoutSellerInput, shopsUncheckedCreateWithoutSellerInput>
  }

  export type shopsCreateManySellerInputEnvelope = {
    data: shopsCreateManySellerInput | shopsCreateManySellerInput[]
    skipDuplicates?: boolean
  }

  export type seller_hidden_usersCreateWithoutSellerInput = {
    created_at?: Date | string
    updated_at?: Date | string
    user: usersCreateNestedOneWithoutHidden_usersInput
  }

  export type seller_hidden_usersUncheckedCreateWithoutSellerInput = {
    id?: number
    user_id: number
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type seller_hidden_usersCreateOrConnectWithoutSellerInput = {
    where: seller_hidden_usersWhereUniqueInput
    create: XOR<seller_hidden_usersCreateWithoutSellerInput, seller_hidden_usersUncheckedCreateWithoutSellerInput>
  }

  export type seller_hidden_usersCreateManySellerInputEnvelope = {
    data: seller_hidden_usersCreateManySellerInput | seller_hidden_usersCreateManySellerInput[]
    skipDuplicates?: boolean
  }

  export type seller_hidden_usersCreateWithoutUserInput = {
    created_at?: Date | string
    updated_at?: Date | string
    seller: usersCreateNestedOneWithoutHidden_by_sellersInput
  }

  export type seller_hidden_usersUncheckedCreateWithoutUserInput = {
    id?: number
    seller_id: number
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type seller_hidden_usersCreateOrConnectWithoutUserInput = {
    where: seller_hidden_usersWhereUniqueInput
    create: XOR<seller_hidden_usersCreateWithoutUserInput, seller_hidden_usersUncheckedCreateWithoutUserInput>
  }

  export type seller_hidden_usersCreateManyUserInputEnvelope = {
    data: seller_hidden_usersCreateManyUserInput | seller_hidden_usersCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type rolesUpsertWithoutUsersInput = {
    update: XOR<rolesUpdateWithoutUsersInput, rolesUncheckedUpdateWithoutUsersInput>
    create: XOR<rolesCreateWithoutUsersInput, rolesUncheckedCreateWithoutUsersInput>
    where?: rolesWhereInput
  }

  export type rolesUpdateToOneWithWhereWithoutUsersInput = {
    where?: rolesWhereInput
    data: XOR<rolesUpdateWithoutUsersInput, rolesUncheckedUpdateWithoutUsersInput>
  }

  export type rolesUpdateWithoutUsersInput = {
    name?: EnumRoleEnumFieldUpdateOperationsInput | $Enums.RoleEnum
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    role_permissions?: role_permissionsUpdateManyWithoutRoleNestedInput
  }

  export type rolesUncheckedUpdateWithoutUsersInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: EnumRoleEnumFieldUpdateOperationsInput | $Enums.RoleEnum
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    role_permissions?: role_permissionsUncheckedUpdateManyWithoutRoleNestedInput
  }

  export type addressesUpsertWithWhereUniqueWithoutUserInput = {
    where: addressesWhereUniqueInput
    update: XOR<addressesUpdateWithoutUserInput, addressesUncheckedUpdateWithoutUserInput>
    create: XOR<addressesCreateWithoutUserInput, addressesUncheckedCreateWithoutUserInput>
  }

  export type addressesUpdateWithWhereUniqueWithoutUserInput = {
    where: addressesWhereUniqueInput
    data: XOR<addressesUpdateWithoutUserInput, addressesUncheckedUpdateWithoutUserInput>
  }

  export type addressesUpdateManyWithWhereWithoutUserInput = {
    where: addressesScalarWhereInput
    data: XOR<addressesUpdateManyMutationInput, addressesUncheckedUpdateManyWithoutUserInput>
  }

  export type addressesScalarWhereInput = {
    AND?: addressesScalarWhereInput | addressesScalarWhereInput[]
    OR?: addressesScalarWhereInput[]
    NOT?: addressesScalarWhereInput | addressesScalarWhereInput[]
    id?: IntFilter<"addresses"> | number
    user_id?: IntFilter<"addresses"> | number
    full_name?: StringFilter<"addresses"> | string
    phone_number?: StringFilter<"addresses"> | string
    address?: StringFilter<"addresses"> | string
    province_id?: IntNullableFilter<"addresses"> | number | null
    province_name?: StringNullableFilter<"addresses"> | string | null
    district_id?: IntNullableFilter<"addresses"> | number | null
    district_name?: StringNullableFilter<"addresses"> | string | null
    ward_code?: StringNullableFilter<"addresses"> | string | null
    ward_name?: StringNullableFilter<"addresses"> | string | null
    region_id?: IntNullableFilter<"addresses"> | number | null
    type_address?: EnumAddressTypeEnumNullableFilter<"addresses"> | $Enums.AddressTypeEnum | null
    is_default?: BoolFilter<"addresses"> | boolean
    is_deleted?: BoolFilter<"addresses"> | boolean
    created_at?: DateTimeFilter<"addresses"> | Date | string
    updated_at?: DateTimeFilter<"addresses"> | Date | string
  }

  export type ordersUpsertWithWhereUniqueWithoutUserInput = {
    where: ordersWhereUniqueInput
    update: XOR<ordersUpdateWithoutUserInput, ordersUncheckedUpdateWithoutUserInput>
    create: XOR<ordersCreateWithoutUserInput, ordersUncheckedCreateWithoutUserInput>
  }

  export type ordersUpdateWithWhereUniqueWithoutUserInput = {
    where: ordersWhereUniqueInput
    data: XOR<ordersUpdateWithoutUserInput, ordersUncheckedUpdateWithoutUserInput>
  }

  export type ordersUpdateManyWithWhereWithoutUserInput = {
    where: ordersScalarWhereInput
    data: XOR<ordersUpdateManyMutationInput, ordersUncheckedUpdateManyWithoutUserInput>
  }

  export type ordersScalarWhereInput = {
    AND?: ordersScalarWhereInput | ordersScalarWhereInput[]
    OR?: ordersScalarWhereInput[]
    NOT?: ordersScalarWhereInput | ordersScalarWhereInput[]
    id?: IntFilter<"orders"> | number
    uuid?: StringFilter<"orders"> | string
    user_id?: IntFilter<"orders"> | number
    address_id?: IntFilter<"orders"> | number
    total_amount?: FloatFilter<"orders"> | number
    status?: EnumOrderStatusEnumFilter<"orders"> | $Enums.OrderStatusEnum
    is_deleted?: BoolFilter<"orders"> | boolean
    created_at?: DateTimeFilter<"orders"> | Date | string
    updated_at?: DateTimeFilter<"orders"> | Date | string
  }

  export type cart_itemsUpsertWithWhereUniqueWithoutUserInput = {
    where: cart_itemsWhereUniqueInput
    update: XOR<cart_itemsUpdateWithoutUserInput, cart_itemsUncheckedUpdateWithoutUserInput>
    create: XOR<cart_itemsCreateWithoutUserInput, cart_itemsUncheckedCreateWithoutUserInput>
  }

  export type cart_itemsUpdateWithWhereUniqueWithoutUserInput = {
    where: cart_itemsWhereUniqueInput
    data: XOR<cart_itemsUpdateWithoutUserInput, cart_itemsUncheckedUpdateWithoutUserInput>
  }

  export type cart_itemsUpdateManyWithWhereWithoutUserInput = {
    where: cart_itemsScalarWhereInput
    data: XOR<cart_itemsUpdateManyMutationInput, cart_itemsUncheckedUpdateManyWithoutUserInput>
  }

  export type cart_itemsScalarWhereInput = {
    AND?: cart_itemsScalarWhereInput | cart_itemsScalarWhereInput[]
    OR?: cart_itemsScalarWhereInput[]
    NOT?: cart_itemsScalarWhereInput | cart_itemsScalarWhereInput[]
    id?: IntFilter<"cart_items"> | number
    user_id?: IntFilter<"cart_items"> | number
    product_id?: IntFilter<"cart_items"> | number
    quantity?: IntFilter<"cart_items"> | number
    created_at?: DateTimeFilter<"cart_items"> | Date | string
    updated_at?: DateTimeFilter<"cart_items"> | Date | string
  }

  export type reviewsUpsertWithWhereUniqueWithoutUserInput = {
    where: reviewsWhereUniqueInput
    update: XOR<reviewsUpdateWithoutUserInput, reviewsUncheckedUpdateWithoutUserInput>
    create: XOR<reviewsCreateWithoutUserInput, reviewsUncheckedCreateWithoutUserInput>
  }

  export type reviewsUpdateWithWhereUniqueWithoutUserInput = {
    where: reviewsWhereUniqueInput
    data: XOR<reviewsUpdateWithoutUserInput, reviewsUncheckedUpdateWithoutUserInput>
  }

  export type reviewsUpdateManyWithWhereWithoutUserInput = {
    where: reviewsScalarWhereInput
    data: XOR<reviewsUpdateManyMutationInput, reviewsUncheckedUpdateManyWithoutUserInput>
  }

  export type reviewsScalarWhereInput = {
    AND?: reviewsScalarWhereInput | reviewsScalarWhereInput[]
    OR?: reviewsScalarWhereInput[]
    NOT?: reviewsScalarWhereInput | reviewsScalarWhereInput[]
    id?: IntFilter<"reviews"> | number
    uuid?: StringFilter<"reviews"> | string
    user_id?: IntFilter<"reviews"> | number
    product_id?: IntFilter<"reviews"> | number
    rating?: IntFilter<"reviews"> | number
    comment?: StringNullableFilter<"reviews"> | string | null
    is_deleted?: BoolFilter<"reviews"> | boolean
    created_at?: DateTimeFilter<"reviews"> | Date | string
    updated_at?: DateTimeFilter<"reviews"> | Date | string
  }

  export type paymentsUpsertWithWhereUniqueWithoutUserInput = {
    where: paymentsWhereUniqueInput
    update: XOR<paymentsUpdateWithoutUserInput, paymentsUncheckedUpdateWithoutUserInput>
    create: XOR<paymentsCreateWithoutUserInput, paymentsUncheckedCreateWithoutUserInput>
  }

  export type paymentsUpdateWithWhereUniqueWithoutUserInput = {
    where: paymentsWhereUniqueInput
    data: XOR<paymentsUpdateWithoutUserInput, paymentsUncheckedUpdateWithoutUserInput>
  }

  export type paymentsUpdateManyWithWhereWithoutUserInput = {
    where: paymentsScalarWhereInput
    data: XOR<paymentsUpdateManyMutationInput, paymentsUncheckedUpdateManyWithoutUserInput>
  }

  export type paymentsScalarWhereInput = {
    AND?: paymentsScalarWhereInput | paymentsScalarWhereInput[]
    OR?: paymentsScalarWhereInput[]
    NOT?: paymentsScalarWhereInput | paymentsScalarWhereInput[]
    id?: IntFilter<"payments"> | number
    uuid?: StringFilter<"payments"> | string
    order_id?: IntNullableFilter<"payments"> | number | null
    user_id?: IntFilter<"payments"> | number
    amount?: FloatFilter<"payments"> | number
    provider?: StringFilter<"payments"> | string
    transaction_id?: StringNullableFilter<"payments"> | string | null
    status?: EnumPaymentStatusEnumFilter<"payments"> | $Enums.PaymentStatusEnum
    items?: JsonNullableFilter<"payments">
    is_deleted?: BoolFilter<"payments"> | boolean
    created_at?: DateTimeFilter<"payments"> | Date | string
    updated_at?: DateTimeFilter<"payments"> | Date | string
  }

  export type conversationsUpsertWithWhereUniqueWithoutUserInput = {
    where: conversationsWhereUniqueInput
    update: XOR<conversationsUpdateWithoutUserInput, conversationsUncheckedUpdateWithoutUserInput>
    create: XOR<conversationsCreateWithoutUserInput, conversationsUncheckedCreateWithoutUserInput>
  }

  export type conversationsUpdateWithWhereUniqueWithoutUserInput = {
    where: conversationsWhereUniqueInput
    data: XOR<conversationsUpdateWithoutUserInput, conversationsUncheckedUpdateWithoutUserInput>
  }

  export type conversationsUpdateManyWithWhereWithoutUserInput = {
    where: conversationsScalarWhereInput
    data: XOR<conversationsUpdateManyMutationInput, conversationsUncheckedUpdateManyWithoutUserInput>
  }

  export type conversationsScalarWhereInput = {
    AND?: conversationsScalarWhereInput | conversationsScalarWhereInput[]
    OR?: conversationsScalarWhereInput[]
    NOT?: conversationsScalarWhereInput | conversationsScalarWhereInput[]
    id?: IntFilter<"conversations"> | number
    chat_id?: StringFilter<"conversations"> | string
    title?: StringNullableFilter<"conversations"> | string | null
    started_at?: DateTimeFilter<"conversations"> | Date | string
    user_id?: IntFilter<"conversations"> | number
  }

  export type reset_password_tokenUpsertWithWhereUniqueWithoutUserInput = {
    where: reset_password_tokenWhereUniqueInput
    update: XOR<reset_password_tokenUpdateWithoutUserInput, reset_password_tokenUncheckedUpdateWithoutUserInput>
    create: XOR<reset_password_tokenCreateWithoutUserInput, reset_password_tokenUncheckedCreateWithoutUserInput>
  }

  export type reset_password_tokenUpdateWithWhereUniqueWithoutUserInput = {
    where: reset_password_tokenWhereUniqueInput
    data: XOR<reset_password_tokenUpdateWithoutUserInput, reset_password_tokenUncheckedUpdateWithoutUserInput>
  }

  export type reset_password_tokenUpdateManyWithWhereWithoutUserInput = {
    where: reset_password_tokenScalarWhereInput
    data: XOR<reset_password_tokenUpdateManyMutationInput, reset_password_tokenUncheckedUpdateManyWithoutUserInput>
  }

  export type reset_password_tokenScalarWhereInput = {
    AND?: reset_password_tokenScalarWhereInput | reset_password_tokenScalarWhereInput[]
    OR?: reset_password_tokenScalarWhereInput[]
    NOT?: reset_password_tokenScalarWhereInput | reset_password_tokenScalarWhereInput[]
    id?: IntFilter<"reset_password_token"> | number
    user_id?: StringFilter<"reset_password_token"> | string
    token?: StringFilter<"reset_password_token"> | string
    expires_at?: DateTimeFilter<"reset_password_token"> | Date | string
    created_at?: DateTimeFilter<"reset_password_token"> | Date | string
  }

  export type shopsUpsertWithWhereUniqueWithoutSellerInput = {
    where: shopsWhereUniqueInput
    update: XOR<shopsUpdateWithoutSellerInput, shopsUncheckedUpdateWithoutSellerInput>
    create: XOR<shopsCreateWithoutSellerInput, shopsUncheckedCreateWithoutSellerInput>
  }

  export type shopsUpdateWithWhereUniqueWithoutSellerInput = {
    where: shopsWhereUniqueInput
    data: XOR<shopsUpdateWithoutSellerInput, shopsUncheckedUpdateWithoutSellerInput>
  }

  export type shopsUpdateManyWithWhereWithoutSellerInput = {
    where: shopsScalarWhereInput
    data: XOR<shopsUpdateManyMutationInput, shopsUncheckedUpdateManyWithoutSellerInput>
  }

  export type shopsScalarWhereInput = {
    AND?: shopsScalarWhereInput | shopsScalarWhereInput[]
    OR?: shopsScalarWhereInput[]
    NOT?: shopsScalarWhereInput | shopsScalarWhereInput[]
    id?: IntFilter<"shops"> | number
    uuid?: StringFilter<"shops"> | string
    seller_id?: IntFilter<"shops"> | number
    name?: StringFilter<"shops"> | string
    slug?: StringFilter<"shops"> | string
    description?: StringNullableFilter<"shops"> | string | null
    logo?: StringNullableFilter<"shops"> | string | null
    address_id?: IntNullableFilter<"shops"> | number | null
    rating?: FloatNullableFilter<"shops"> | number | null
    is_active?: BoolFilter<"shops"> | boolean
    is_deleted?: BoolFilter<"shops"> | boolean
    created_at?: DateTimeFilter<"shops"> | Date | string
    updated_at?: DateTimeFilter<"shops"> | Date | string
  }

  export type seller_hidden_usersUpsertWithWhereUniqueWithoutSellerInput = {
    where: seller_hidden_usersWhereUniqueInput
    update: XOR<seller_hidden_usersUpdateWithoutSellerInput, seller_hidden_usersUncheckedUpdateWithoutSellerInput>
    create: XOR<seller_hidden_usersCreateWithoutSellerInput, seller_hidden_usersUncheckedCreateWithoutSellerInput>
  }

  export type seller_hidden_usersUpdateWithWhereUniqueWithoutSellerInput = {
    where: seller_hidden_usersWhereUniqueInput
    data: XOR<seller_hidden_usersUpdateWithoutSellerInput, seller_hidden_usersUncheckedUpdateWithoutSellerInput>
  }

  export type seller_hidden_usersUpdateManyWithWhereWithoutSellerInput = {
    where: seller_hidden_usersScalarWhereInput
    data: XOR<seller_hidden_usersUpdateManyMutationInput, seller_hidden_usersUncheckedUpdateManyWithoutSellerInput>
  }

  export type seller_hidden_usersScalarWhereInput = {
    AND?: seller_hidden_usersScalarWhereInput | seller_hidden_usersScalarWhereInput[]
    OR?: seller_hidden_usersScalarWhereInput[]
    NOT?: seller_hidden_usersScalarWhereInput | seller_hidden_usersScalarWhereInput[]
    id?: IntFilter<"seller_hidden_users"> | number
    seller_id?: IntFilter<"seller_hidden_users"> | number
    user_id?: IntFilter<"seller_hidden_users"> | number
    created_at?: DateTimeFilter<"seller_hidden_users"> | Date | string
    updated_at?: DateTimeFilter<"seller_hidden_users"> | Date | string
  }

  export type seller_hidden_usersUpsertWithWhereUniqueWithoutUserInput = {
    where: seller_hidden_usersWhereUniqueInput
    update: XOR<seller_hidden_usersUpdateWithoutUserInput, seller_hidden_usersUncheckedUpdateWithoutUserInput>
    create: XOR<seller_hidden_usersCreateWithoutUserInput, seller_hidden_usersUncheckedCreateWithoutUserInput>
  }

  export type seller_hidden_usersUpdateWithWhereUniqueWithoutUserInput = {
    where: seller_hidden_usersWhereUniqueInput
    data: XOR<seller_hidden_usersUpdateWithoutUserInput, seller_hidden_usersUncheckedUpdateWithoutUserInput>
  }

  export type seller_hidden_usersUpdateManyWithWhereWithoutUserInput = {
    where: seller_hidden_usersScalarWhereInput
    data: XOR<seller_hidden_usersUpdateManyMutationInput, seller_hidden_usersUncheckedUpdateManyWithoutUserInput>
  }

  export type usersCreateWithoutRoleInput = {
    uuid: string
    username: string
    email: string
    full_name?: string | null
    password?: string | null
    phone_number?: string | null
    avatar?: string | null
    gender?: boolean | null
    day_of_birth?: string | null
    email_verified_at?: Date | string | null
    last_login?: Date | string | null
    is_public?: boolean
    is_activated?: boolean
    is_deleted?: boolean
    two_factor_enabled?: boolean
    provider?: string
    provider_id?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    addresses?: addressesCreateNestedManyWithoutUserInput
    orders?: ordersCreateNestedManyWithoutUserInput
    cart_items?: cart_itemsCreateNestedManyWithoutUserInput
    reviews?: reviewsCreateNestedManyWithoutUserInput
    payments?: paymentsCreateNestedManyWithoutUserInput
    conversations?: conversationsCreateNestedManyWithoutUserInput
    reset_password_token?: reset_password_tokenCreateNestedManyWithoutUserInput
    shops?: shopsCreateNestedManyWithoutSellerInput
    hidden_by_sellers?: seller_hidden_usersCreateNestedManyWithoutSellerInput
    hidden_users?: seller_hidden_usersCreateNestedManyWithoutUserInput
  }

  export type usersUncheckedCreateWithoutRoleInput = {
    id?: number
    uuid: string
    username: string
    email: string
    full_name?: string | null
    password?: string | null
    phone_number?: string | null
    avatar?: string | null
    gender?: boolean | null
    day_of_birth?: string | null
    email_verified_at?: Date | string | null
    last_login?: Date | string | null
    is_public?: boolean
    is_activated?: boolean
    is_deleted?: boolean
    two_factor_enabled?: boolean
    provider?: string
    provider_id?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    addresses?: addressesUncheckedCreateNestedManyWithoutUserInput
    orders?: ordersUncheckedCreateNestedManyWithoutUserInput
    cart_items?: cart_itemsUncheckedCreateNestedManyWithoutUserInput
    reviews?: reviewsUncheckedCreateNestedManyWithoutUserInput
    payments?: paymentsUncheckedCreateNestedManyWithoutUserInput
    conversations?: conversationsUncheckedCreateNestedManyWithoutUserInput
    reset_password_token?: reset_password_tokenUncheckedCreateNestedManyWithoutUserInput
    shops?: shopsUncheckedCreateNestedManyWithoutSellerInput
    hidden_by_sellers?: seller_hidden_usersUncheckedCreateNestedManyWithoutSellerInput
    hidden_users?: seller_hidden_usersUncheckedCreateNestedManyWithoutUserInput
  }

  export type usersCreateOrConnectWithoutRoleInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutRoleInput, usersUncheckedCreateWithoutRoleInput>
  }

  export type usersCreateManyRoleInputEnvelope = {
    data: usersCreateManyRoleInput | usersCreateManyRoleInput[]
    skipDuplicates?: boolean
  }

  export type role_permissionsCreateWithoutRoleInput = {
    created_at?: Date | string
    updated_at?: Date | string
    permission: permissionsCreateNestedOneWithoutRole_permissionsInput
  }

  export type role_permissionsUncheckedCreateWithoutRoleInput = {
    id?: number
    permission_id: number
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type role_permissionsCreateOrConnectWithoutRoleInput = {
    where: role_permissionsWhereUniqueInput
    create: XOR<role_permissionsCreateWithoutRoleInput, role_permissionsUncheckedCreateWithoutRoleInput>
  }

  export type role_permissionsCreateManyRoleInputEnvelope = {
    data: role_permissionsCreateManyRoleInput | role_permissionsCreateManyRoleInput[]
    skipDuplicates?: boolean
  }

  export type usersUpsertWithWhereUniqueWithoutRoleInput = {
    where: usersWhereUniqueInput
    update: XOR<usersUpdateWithoutRoleInput, usersUncheckedUpdateWithoutRoleInput>
    create: XOR<usersCreateWithoutRoleInput, usersUncheckedCreateWithoutRoleInput>
  }

  export type usersUpdateWithWhereUniqueWithoutRoleInput = {
    where: usersWhereUniqueInput
    data: XOR<usersUpdateWithoutRoleInput, usersUncheckedUpdateWithoutRoleInput>
  }

  export type usersUpdateManyWithWhereWithoutRoleInput = {
    where: usersScalarWhereInput
    data: XOR<usersUpdateManyMutationInput, usersUncheckedUpdateManyWithoutRoleInput>
  }

  export type usersScalarWhereInput = {
    AND?: usersScalarWhereInput | usersScalarWhereInput[]
    OR?: usersScalarWhereInput[]
    NOT?: usersScalarWhereInput | usersScalarWhereInput[]
    id?: IntFilter<"users"> | number
    uuid?: StringFilter<"users"> | string
    username?: StringFilter<"users"> | string
    email?: StringFilter<"users"> | string
    full_name?: StringNullableFilter<"users"> | string | null
    password?: StringNullableFilter<"users"> | string | null
    phone_number?: StringNullableFilter<"users"> | string | null
    avatar?: StringNullableFilter<"users"> | string | null
    gender?: BoolNullableFilter<"users"> | boolean | null
    day_of_birth?: StringNullableFilter<"users"> | string | null
    email_verified_at?: DateTimeNullableFilter<"users"> | Date | string | null
    last_login?: DateTimeNullableFilter<"users"> | Date | string | null
    role_id?: IntFilter<"users"> | number
    is_public?: BoolFilter<"users"> | boolean
    is_activated?: BoolFilter<"users"> | boolean
    is_deleted?: BoolFilter<"users"> | boolean
    two_factor_enabled?: BoolFilter<"users"> | boolean
    provider?: StringFilter<"users"> | string
    provider_id?: StringNullableFilter<"users"> | string | null
    created_at?: DateTimeFilter<"users"> | Date | string
    updated_at?: DateTimeFilter<"users"> | Date | string
  }

  export type role_permissionsUpsertWithWhereUniqueWithoutRoleInput = {
    where: role_permissionsWhereUniqueInput
    update: XOR<role_permissionsUpdateWithoutRoleInput, role_permissionsUncheckedUpdateWithoutRoleInput>
    create: XOR<role_permissionsCreateWithoutRoleInput, role_permissionsUncheckedCreateWithoutRoleInput>
  }

  export type role_permissionsUpdateWithWhereUniqueWithoutRoleInput = {
    where: role_permissionsWhereUniqueInput
    data: XOR<role_permissionsUpdateWithoutRoleInput, role_permissionsUncheckedUpdateWithoutRoleInput>
  }

  export type role_permissionsUpdateManyWithWhereWithoutRoleInput = {
    where: role_permissionsScalarWhereInput
    data: XOR<role_permissionsUpdateManyMutationInput, role_permissionsUncheckedUpdateManyWithoutRoleInput>
  }

  export type role_permissionsScalarWhereInput = {
    AND?: role_permissionsScalarWhereInput | role_permissionsScalarWhereInput[]
    OR?: role_permissionsScalarWhereInput[]
    NOT?: role_permissionsScalarWhereInput | role_permissionsScalarWhereInput[]
    id?: IntFilter<"role_permissions"> | number
    role_id?: IntFilter<"role_permissions"> | number
    permission_id?: IntFilter<"role_permissions"> | number
    created_at?: DateTimeFilter<"role_permissions"> | Date | string
    updated_at?: DateTimeFilter<"role_permissions"> | Date | string
  }

  export type role_permissionsCreateWithoutPermissionInput = {
    created_at?: Date | string
    updated_at?: Date | string
    role: rolesCreateNestedOneWithoutRole_permissionsInput
  }

  export type role_permissionsUncheckedCreateWithoutPermissionInput = {
    id?: number
    role_id: number
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type role_permissionsCreateOrConnectWithoutPermissionInput = {
    where: role_permissionsWhereUniqueInput
    create: XOR<role_permissionsCreateWithoutPermissionInput, role_permissionsUncheckedCreateWithoutPermissionInput>
  }

  export type role_permissionsCreateManyPermissionInputEnvelope = {
    data: role_permissionsCreateManyPermissionInput | role_permissionsCreateManyPermissionInput[]
    skipDuplicates?: boolean
  }

  export type role_permissionsUpsertWithWhereUniqueWithoutPermissionInput = {
    where: role_permissionsWhereUniqueInput
    update: XOR<role_permissionsUpdateWithoutPermissionInput, role_permissionsUncheckedUpdateWithoutPermissionInput>
    create: XOR<role_permissionsCreateWithoutPermissionInput, role_permissionsUncheckedCreateWithoutPermissionInput>
  }

  export type role_permissionsUpdateWithWhereUniqueWithoutPermissionInput = {
    where: role_permissionsWhereUniqueInput
    data: XOR<role_permissionsUpdateWithoutPermissionInput, role_permissionsUncheckedUpdateWithoutPermissionInput>
  }

  export type role_permissionsUpdateManyWithWhereWithoutPermissionInput = {
    where: role_permissionsScalarWhereInput
    data: XOR<role_permissionsUpdateManyMutationInput, role_permissionsUncheckedUpdateManyWithoutPermissionInput>
  }

  export type rolesCreateWithoutRole_permissionsInput = {
    name: $Enums.RoleEnum
    created_at?: Date | string
    updated_at?: Date | string
    users?: usersCreateNestedManyWithoutRoleInput
  }

  export type rolesUncheckedCreateWithoutRole_permissionsInput = {
    id?: number
    name: $Enums.RoleEnum
    created_at?: Date | string
    updated_at?: Date | string
    users?: usersUncheckedCreateNestedManyWithoutRoleInput
  }

  export type rolesCreateOrConnectWithoutRole_permissionsInput = {
    where: rolesWhereUniqueInput
    create: XOR<rolesCreateWithoutRole_permissionsInput, rolesUncheckedCreateWithoutRole_permissionsInput>
  }

  export type permissionsCreateWithoutRole_permissionsInput = {
    name: $Enums.PermissionEnum
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type permissionsUncheckedCreateWithoutRole_permissionsInput = {
    id?: number
    name: $Enums.PermissionEnum
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type permissionsCreateOrConnectWithoutRole_permissionsInput = {
    where: permissionsWhereUniqueInput
    create: XOR<permissionsCreateWithoutRole_permissionsInput, permissionsUncheckedCreateWithoutRole_permissionsInput>
  }

  export type rolesUpsertWithoutRole_permissionsInput = {
    update: XOR<rolesUpdateWithoutRole_permissionsInput, rolesUncheckedUpdateWithoutRole_permissionsInput>
    create: XOR<rolesCreateWithoutRole_permissionsInput, rolesUncheckedCreateWithoutRole_permissionsInput>
    where?: rolesWhereInput
  }

  export type rolesUpdateToOneWithWhereWithoutRole_permissionsInput = {
    where?: rolesWhereInput
    data: XOR<rolesUpdateWithoutRole_permissionsInput, rolesUncheckedUpdateWithoutRole_permissionsInput>
  }

  export type rolesUpdateWithoutRole_permissionsInput = {
    name?: EnumRoleEnumFieldUpdateOperationsInput | $Enums.RoleEnum
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: usersUpdateManyWithoutRoleNestedInput
  }

  export type rolesUncheckedUpdateWithoutRole_permissionsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: EnumRoleEnumFieldUpdateOperationsInput | $Enums.RoleEnum
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: usersUncheckedUpdateManyWithoutRoleNestedInput
  }

  export type permissionsUpsertWithoutRole_permissionsInput = {
    update: XOR<permissionsUpdateWithoutRole_permissionsInput, permissionsUncheckedUpdateWithoutRole_permissionsInput>
    create: XOR<permissionsCreateWithoutRole_permissionsInput, permissionsUncheckedCreateWithoutRole_permissionsInput>
    where?: permissionsWhereInput
  }

  export type permissionsUpdateToOneWithWhereWithoutRole_permissionsInput = {
    where?: permissionsWhereInput
    data: XOR<permissionsUpdateWithoutRole_permissionsInput, permissionsUncheckedUpdateWithoutRole_permissionsInput>
  }

  export type permissionsUpdateWithoutRole_permissionsInput = {
    name?: EnumPermissionEnumFieldUpdateOperationsInput | $Enums.PermissionEnum
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type permissionsUncheckedUpdateWithoutRole_permissionsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: EnumPermissionEnumFieldUpdateOperationsInput | $Enums.PermissionEnum
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type usersCreateWithoutShopsInput = {
    uuid: string
    username: string
    email: string
    full_name?: string | null
    password?: string | null
    phone_number?: string | null
    avatar?: string | null
    gender?: boolean | null
    day_of_birth?: string | null
    email_verified_at?: Date | string | null
    last_login?: Date | string | null
    is_public?: boolean
    is_activated?: boolean
    is_deleted?: boolean
    two_factor_enabled?: boolean
    provider?: string
    provider_id?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    role: rolesCreateNestedOneWithoutUsersInput
    addresses?: addressesCreateNestedManyWithoutUserInput
    orders?: ordersCreateNestedManyWithoutUserInput
    cart_items?: cart_itemsCreateNestedManyWithoutUserInput
    reviews?: reviewsCreateNestedManyWithoutUserInput
    payments?: paymentsCreateNestedManyWithoutUserInput
    conversations?: conversationsCreateNestedManyWithoutUserInput
    reset_password_token?: reset_password_tokenCreateNestedManyWithoutUserInput
    hidden_by_sellers?: seller_hidden_usersCreateNestedManyWithoutSellerInput
    hidden_users?: seller_hidden_usersCreateNestedManyWithoutUserInput
  }

  export type usersUncheckedCreateWithoutShopsInput = {
    id?: number
    uuid: string
    username: string
    email: string
    full_name?: string | null
    password?: string | null
    phone_number?: string | null
    avatar?: string | null
    gender?: boolean | null
    day_of_birth?: string | null
    email_verified_at?: Date | string | null
    last_login?: Date | string | null
    role_id: number
    is_public?: boolean
    is_activated?: boolean
    is_deleted?: boolean
    two_factor_enabled?: boolean
    provider?: string
    provider_id?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    addresses?: addressesUncheckedCreateNestedManyWithoutUserInput
    orders?: ordersUncheckedCreateNestedManyWithoutUserInput
    cart_items?: cart_itemsUncheckedCreateNestedManyWithoutUserInput
    reviews?: reviewsUncheckedCreateNestedManyWithoutUserInput
    payments?: paymentsUncheckedCreateNestedManyWithoutUserInput
    conversations?: conversationsUncheckedCreateNestedManyWithoutUserInput
    reset_password_token?: reset_password_tokenUncheckedCreateNestedManyWithoutUserInput
    hidden_by_sellers?: seller_hidden_usersUncheckedCreateNestedManyWithoutSellerInput
    hidden_users?: seller_hidden_usersUncheckedCreateNestedManyWithoutUserInput
  }

  export type usersCreateOrConnectWithoutShopsInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutShopsInput, usersUncheckedCreateWithoutShopsInput>
  }

  export type addressesCreateWithoutShopsInput = {
    full_name: string
    phone_number: string
    address: string
    province_id?: number | null
    province_name?: string | null
    district_id?: number | null
    district_name?: string | null
    ward_code?: string | null
    ward_name?: string | null
    region_id?: number | null
    type_address?: $Enums.AddressTypeEnum | null
    is_default?: boolean
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    user: usersCreateNestedOneWithoutAddressesInput
    orders?: ordersCreateNestedManyWithoutAddressInput
  }

  export type addressesUncheckedCreateWithoutShopsInput = {
    id?: number
    user_id: number
    full_name: string
    phone_number: string
    address: string
    province_id?: number | null
    province_name?: string | null
    district_id?: number | null
    district_name?: string | null
    ward_code?: string | null
    ward_name?: string | null
    region_id?: number | null
    type_address?: $Enums.AddressTypeEnum | null
    is_default?: boolean
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    orders?: ordersUncheckedCreateNestedManyWithoutAddressInput
  }

  export type addressesCreateOrConnectWithoutShopsInput = {
    where: addressesWhereUniqueInput
    create: XOR<addressesCreateWithoutShopsInput, addressesUncheckedCreateWithoutShopsInput>
  }

  export type productsCreateWithoutShopInput = {
    uuid: string
    name: string
    slug: string
    description?: string | null
    old_price?: number | null
    new_price: number
    discount_percentage?: number | null
    stock?: number
    sold?: number
    weight?: number | null
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    category?: categoriesCreateNestedOneWithoutProductsInput
    cart_items?: cart_itemsCreateNestedManyWithoutProductInput
    order_items?: order_itemsCreateNestedManyWithoutProductInput
    reviews?: reviewsCreateNestedManyWithoutProductInput
    product_images?: product_imagesCreateNestedManyWithoutProductInput
    product_specifications?: product_specificationsCreateNestedManyWithoutProductInput
    product_attributes?: product_attributesCreateNestedManyWithoutProductInput
  }

  export type productsUncheckedCreateWithoutShopInput = {
    id?: number
    uuid: string
    name: string
    slug: string
    description?: string | null
    old_price?: number | null
    new_price: number
    discount_percentage?: number | null
    stock?: number
    sold?: number
    weight?: number | null
    category_id?: number | null
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    cart_items?: cart_itemsUncheckedCreateNestedManyWithoutProductInput
    order_items?: order_itemsUncheckedCreateNestedManyWithoutProductInput
    reviews?: reviewsUncheckedCreateNestedManyWithoutProductInput
    product_images?: product_imagesUncheckedCreateNestedManyWithoutProductInput
    product_specifications?: product_specificationsUncheckedCreateNestedManyWithoutProductInput
    product_attributes?: product_attributesUncheckedCreateNestedManyWithoutProductInput
  }

  export type productsCreateOrConnectWithoutShopInput = {
    where: productsWhereUniqueInput
    create: XOR<productsCreateWithoutShopInput, productsUncheckedCreateWithoutShopInput>
  }

  export type productsCreateManyShopInputEnvelope = {
    data: productsCreateManyShopInput | productsCreateManyShopInput[]
    skipDuplicates?: boolean
  }

  export type usersUpsertWithoutShopsInput = {
    update: XOR<usersUpdateWithoutShopsInput, usersUncheckedUpdateWithoutShopsInput>
    create: XOR<usersCreateWithoutShopsInput, usersUncheckedCreateWithoutShopsInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutShopsInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutShopsInput, usersUncheckedUpdateWithoutShopsInput>
  }

  export type usersUpdateWithoutShopsInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    full_name?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableBoolFieldUpdateOperationsInput | boolean | null
    day_of_birth?: NullableStringFieldUpdateOperationsInput | string | null
    email_verified_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_public?: BoolFieldUpdateOperationsInput | boolean
    is_activated?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    two_factor_enabled?: BoolFieldUpdateOperationsInput | boolean
    provider?: StringFieldUpdateOperationsInput | string
    provider_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: rolesUpdateOneRequiredWithoutUsersNestedInput
    addresses?: addressesUpdateManyWithoutUserNestedInput
    orders?: ordersUpdateManyWithoutUserNestedInput
    cart_items?: cart_itemsUpdateManyWithoutUserNestedInput
    reviews?: reviewsUpdateManyWithoutUserNestedInput
    payments?: paymentsUpdateManyWithoutUserNestedInput
    conversations?: conversationsUpdateManyWithoutUserNestedInput
    reset_password_token?: reset_password_tokenUpdateManyWithoutUserNestedInput
    hidden_by_sellers?: seller_hidden_usersUpdateManyWithoutSellerNestedInput
    hidden_users?: seller_hidden_usersUpdateManyWithoutUserNestedInput
  }

  export type usersUncheckedUpdateWithoutShopsInput = {
    id?: IntFieldUpdateOperationsInput | number
    uuid?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    full_name?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableBoolFieldUpdateOperationsInput | boolean | null
    day_of_birth?: NullableStringFieldUpdateOperationsInput | string | null
    email_verified_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    role_id?: IntFieldUpdateOperationsInput | number
    is_public?: BoolFieldUpdateOperationsInput | boolean
    is_activated?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    two_factor_enabled?: BoolFieldUpdateOperationsInput | boolean
    provider?: StringFieldUpdateOperationsInput | string
    provider_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    addresses?: addressesUncheckedUpdateManyWithoutUserNestedInput
    orders?: ordersUncheckedUpdateManyWithoutUserNestedInput
    cart_items?: cart_itemsUncheckedUpdateManyWithoutUserNestedInput
    reviews?: reviewsUncheckedUpdateManyWithoutUserNestedInput
    payments?: paymentsUncheckedUpdateManyWithoutUserNestedInput
    conversations?: conversationsUncheckedUpdateManyWithoutUserNestedInput
    reset_password_token?: reset_password_tokenUncheckedUpdateManyWithoutUserNestedInput
    hidden_by_sellers?: seller_hidden_usersUncheckedUpdateManyWithoutSellerNestedInput
    hidden_users?: seller_hidden_usersUncheckedUpdateManyWithoutUserNestedInput
  }

  export type addressesUpsertWithoutShopsInput = {
    update: XOR<addressesUpdateWithoutShopsInput, addressesUncheckedUpdateWithoutShopsInput>
    create: XOR<addressesCreateWithoutShopsInput, addressesUncheckedCreateWithoutShopsInput>
    where?: addressesWhereInput
  }

  export type addressesUpdateToOneWithWhereWithoutShopsInput = {
    where?: addressesWhereInput
    data: XOR<addressesUpdateWithoutShopsInput, addressesUncheckedUpdateWithoutShopsInput>
  }

  export type addressesUpdateWithoutShopsInput = {
    full_name?: StringFieldUpdateOperationsInput | string
    phone_number?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    province_id?: NullableIntFieldUpdateOperationsInput | number | null
    province_name?: NullableStringFieldUpdateOperationsInput | string | null
    district_id?: NullableIntFieldUpdateOperationsInput | number | null
    district_name?: NullableStringFieldUpdateOperationsInput | string | null
    ward_code?: NullableStringFieldUpdateOperationsInput | string | null
    ward_name?: NullableStringFieldUpdateOperationsInput | string | null
    region_id?: NullableIntFieldUpdateOperationsInput | number | null
    type_address?: NullableEnumAddressTypeEnumFieldUpdateOperationsInput | $Enums.AddressTypeEnum | null
    is_default?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: usersUpdateOneRequiredWithoutAddressesNestedInput
    orders?: ordersUpdateManyWithoutAddressNestedInput
  }

  export type addressesUncheckedUpdateWithoutShopsInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    full_name?: StringFieldUpdateOperationsInput | string
    phone_number?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    province_id?: NullableIntFieldUpdateOperationsInput | number | null
    province_name?: NullableStringFieldUpdateOperationsInput | string | null
    district_id?: NullableIntFieldUpdateOperationsInput | number | null
    district_name?: NullableStringFieldUpdateOperationsInput | string | null
    ward_code?: NullableStringFieldUpdateOperationsInput | string | null
    ward_name?: NullableStringFieldUpdateOperationsInput | string | null
    region_id?: NullableIntFieldUpdateOperationsInput | number | null
    type_address?: NullableEnumAddressTypeEnumFieldUpdateOperationsInput | $Enums.AddressTypeEnum | null
    is_default?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    orders?: ordersUncheckedUpdateManyWithoutAddressNestedInput
  }

  export type productsUpsertWithWhereUniqueWithoutShopInput = {
    where: productsWhereUniqueInput
    update: XOR<productsUpdateWithoutShopInput, productsUncheckedUpdateWithoutShopInput>
    create: XOR<productsCreateWithoutShopInput, productsUncheckedCreateWithoutShopInput>
  }

  export type productsUpdateWithWhereUniqueWithoutShopInput = {
    where: productsWhereUniqueInput
    data: XOR<productsUpdateWithoutShopInput, productsUncheckedUpdateWithoutShopInput>
  }

  export type productsUpdateManyWithWhereWithoutShopInput = {
    where: productsScalarWhereInput
    data: XOR<productsUpdateManyMutationInput, productsUncheckedUpdateManyWithoutShopInput>
  }

  export type productsScalarWhereInput = {
    AND?: productsScalarWhereInput | productsScalarWhereInput[]
    OR?: productsScalarWhereInput[]
    NOT?: productsScalarWhereInput | productsScalarWhereInput[]
    id?: IntFilter<"products"> | number
    uuid?: StringFilter<"products"> | string
    name?: StringFilter<"products"> | string
    slug?: StringFilter<"products"> | string
    description?: StringNullableFilter<"products"> | string | null
    old_price?: FloatNullableFilter<"products"> | number | null
    new_price?: FloatFilter<"products"> | number
    discount_percentage?: FloatNullableFilter<"products"> | number | null
    stock?: IntFilter<"products"> | number
    sold?: IntFilter<"products"> | number
    weight?: FloatNullableFilter<"products"> | number | null
    category_id?: IntNullableFilter<"products"> | number | null
    shop_id?: IntNullableFilter<"products"> | number | null
    is_deleted?: BoolFilter<"products"> | boolean
    created_at?: DateTimeFilter<"products"> | Date | string
    updated_at?: DateTimeFilter<"products"> | Date | string
  }

  export type usersCreateWithoutAddressesInput = {
    uuid: string
    username: string
    email: string
    full_name?: string | null
    password?: string | null
    phone_number?: string | null
    avatar?: string | null
    gender?: boolean | null
    day_of_birth?: string | null
    email_verified_at?: Date | string | null
    last_login?: Date | string | null
    is_public?: boolean
    is_activated?: boolean
    is_deleted?: boolean
    two_factor_enabled?: boolean
    provider?: string
    provider_id?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    role: rolesCreateNestedOneWithoutUsersInput
    orders?: ordersCreateNestedManyWithoutUserInput
    cart_items?: cart_itemsCreateNestedManyWithoutUserInput
    reviews?: reviewsCreateNestedManyWithoutUserInput
    payments?: paymentsCreateNestedManyWithoutUserInput
    conversations?: conversationsCreateNestedManyWithoutUserInput
    reset_password_token?: reset_password_tokenCreateNestedManyWithoutUserInput
    shops?: shopsCreateNestedManyWithoutSellerInput
    hidden_by_sellers?: seller_hidden_usersCreateNestedManyWithoutSellerInput
    hidden_users?: seller_hidden_usersCreateNestedManyWithoutUserInput
  }

  export type usersUncheckedCreateWithoutAddressesInput = {
    id?: number
    uuid: string
    username: string
    email: string
    full_name?: string | null
    password?: string | null
    phone_number?: string | null
    avatar?: string | null
    gender?: boolean | null
    day_of_birth?: string | null
    email_verified_at?: Date | string | null
    last_login?: Date | string | null
    role_id: number
    is_public?: boolean
    is_activated?: boolean
    is_deleted?: boolean
    two_factor_enabled?: boolean
    provider?: string
    provider_id?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    orders?: ordersUncheckedCreateNestedManyWithoutUserInput
    cart_items?: cart_itemsUncheckedCreateNestedManyWithoutUserInput
    reviews?: reviewsUncheckedCreateNestedManyWithoutUserInput
    payments?: paymentsUncheckedCreateNestedManyWithoutUserInput
    conversations?: conversationsUncheckedCreateNestedManyWithoutUserInput
    reset_password_token?: reset_password_tokenUncheckedCreateNestedManyWithoutUserInput
    shops?: shopsUncheckedCreateNestedManyWithoutSellerInput
    hidden_by_sellers?: seller_hidden_usersUncheckedCreateNestedManyWithoutSellerInput
    hidden_users?: seller_hidden_usersUncheckedCreateNestedManyWithoutUserInput
  }

  export type usersCreateOrConnectWithoutAddressesInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutAddressesInput, usersUncheckedCreateWithoutAddressesInput>
  }

  export type ordersCreateWithoutAddressInput = {
    uuid: string
    total_amount: number
    status?: $Enums.OrderStatusEnum
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    user: usersCreateNestedOneWithoutOrdersInput
    order_items?: order_itemsCreateNestedManyWithoutOrderInput
    payments?: paymentsCreateNestedManyWithoutOrderInput
  }

  export type ordersUncheckedCreateWithoutAddressInput = {
    id?: number
    uuid: string
    user_id: number
    total_amount: number
    status?: $Enums.OrderStatusEnum
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    order_items?: order_itemsUncheckedCreateNestedManyWithoutOrderInput
    payments?: paymentsUncheckedCreateNestedManyWithoutOrderInput
  }

  export type ordersCreateOrConnectWithoutAddressInput = {
    where: ordersWhereUniqueInput
    create: XOR<ordersCreateWithoutAddressInput, ordersUncheckedCreateWithoutAddressInput>
  }

  export type ordersCreateManyAddressInputEnvelope = {
    data: ordersCreateManyAddressInput | ordersCreateManyAddressInput[]
    skipDuplicates?: boolean
  }

  export type shopsCreateWithoutAddressInput = {
    uuid: string
    name: string
    slug: string
    description?: string | null
    logo?: string | null
    rating?: number | null
    is_active?: boolean
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    seller: usersCreateNestedOneWithoutShopsInput
    products?: productsCreateNestedManyWithoutShopInput
  }

  export type shopsUncheckedCreateWithoutAddressInput = {
    id?: number
    uuid: string
    seller_id: number
    name: string
    slug: string
    description?: string | null
    logo?: string | null
    rating?: number | null
    is_active?: boolean
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    products?: productsUncheckedCreateNestedManyWithoutShopInput
  }

  export type shopsCreateOrConnectWithoutAddressInput = {
    where: shopsWhereUniqueInput
    create: XOR<shopsCreateWithoutAddressInput, shopsUncheckedCreateWithoutAddressInput>
  }

  export type shopsCreateManyAddressInputEnvelope = {
    data: shopsCreateManyAddressInput | shopsCreateManyAddressInput[]
    skipDuplicates?: boolean
  }

  export type usersUpsertWithoutAddressesInput = {
    update: XOR<usersUpdateWithoutAddressesInput, usersUncheckedUpdateWithoutAddressesInput>
    create: XOR<usersCreateWithoutAddressesInput, usersUncheckedCreateWithoutAddressesInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutAddressesInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutAddressesInput, usersUncheckedUpdateWithoutAddressesInput>
  }

  export type usersUpdateWithoutAddressesInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    full_name?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableBoolFieldUpdateOperationsInput | boolean | null
    day_of_birth?: NullableStringFieldUpdateOperationsInput | string | null
    email_verified_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_public?: BoolFieldUpdateOperationsInput | boolean
    is_activated?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    two_factor_enabled?: BoolFieldUpdateOperationsInput | boolean
    provider?: StringFieldUpdateOperationsInput | string
    provider_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: rolesUpdateOneRequiredWithoutUsersNestedInput
    orders?: ordersUpdateManyWithoutUserNestedInput
    cart_items?: cart_itemsUpdateManyWithoutUserNestedInput
    reviews?: reviewsUpdateManyWithoutUserNestedInput
    payments?: paymentsUpdateManyWithoutUserNestedInput
    conversations?: conversationsUpdateManyWithoutUserNestedInput
    reset_password_token?: reset_password_tokenUpdateManyWithoutUserNestedInput
    shops?: shopsUpdateManyWithoutSellerNestedInput
    hidden_by_sellers?: seller_hidden_usersUpdateManyWithoutSellerNestedInput
    hidden_users?: seller_hidden_usersUpdateManyWithoutUserNestedInput
  }

  export type usersUncheckedUpdateWithoutAddressesInput = {
    id?: IntFieldUpdateOperationsInput | number
    uuid?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    full_name?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableBoolFieldUpdateOperationsInput | boolean | null
    day_of_birth?: NullableStringFieldUpdateOperationsInput | string | null
    email_verified_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    role_id?: IntFieldUpdateOperationsInput | number
    is_public?: BoolFieldUpdateOperationsInput | boolean
    is_activated?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    two_factor_enabled?: BoolFieldUpdateOperationsInput | boolean
    provider?: StringFieldUpdateOperationsInput | string
    provider_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    orders?: ordersUncheckedUpdateManyWithoutUserNestedInput
    cart_items?: cart_itemsUncheckedUpdateManyWithoutUserNestedInput
    reviews?: reviewsUncheckedUpdateManyWithoutUserNestedInput
    payments?: paymentsUncheckedUpdateManyWithoutUserNestedInput
    conversations?: conversationsUncheckedUpdateManyWithoutUserNestedInput
    reset_password_token?: reset_password_tokenUncheckedUpdateManyWithoutUserNestedInput
    shops?: shopsUncheckedUpdateManyWithoutSellerNestedInput
    hidden_by_sellers?: seller_hidden_usersUncheckedUpdateManyWithoutSellerNestedInput
    hidden_users?: seller_hidden_usersUncheckedUpdateManyWithoutUserNestedInput
  }

  export type ordersUpsertWithWhereUniqueWithoutAddressInput = {
    where: ordersWhereUniqueInput
    update: XOR<ordersUpdateWithoutAddressInput, ordersUncheckedUpdateWithoutAddressInput>
    create: XOR<ordersCreateWithoutAddressInput, ordersUncheckedCreateWithoutAddressInput>
  }

  export type ordersUpdateWithWhereUniqueWithoutAddressInput = {
    where: ordersWhereUniqueInput
    data: XOR<ordersUpdateWithoutAddressInput, ordersUncheckedUpdateWithoutAddressInput>
  }

  export type ordersUpdateManyWithWhereWithoutAddressInput = {
    where: ordersScalarWhereInput
    data: XOR<ordersUpdateManyMutationInput, ordersUncheckedUpdateManyWithoutAddressInput>
  }

  export type shopsUpsertWithWhereUniqueWithoutAddressInput = {
    where: shopsWhereUniqueInput
    update: XOR<shopsUpdateWithoutAddressInput, shopsUncheckedUpdateWithoutAddressInput>
    create: XOR<shopsCreateWithoutAddressInput, shopsUncheckedCreateWithoutAddressInput>
  }

  export type shopsUpdateWithWhereUniqueWithoutAddressInput = {
    where: shopsWhereUniqueInput
    data: XOR<shopsUpdateWithoutAddressInput, shopsUncheckedUpdateWithoutAddressInput>
  }

  export type shopsUpdateManyWithWhereWithoutAddressInput = {
    where: shopsScalarWhereInput
    data: XOR<shopsUpdateManyMutationInput, shopsUncheckedUpdateManyWithoutAddressInput>
  }

  export type categoriesCreateWithoutProductsInput = {
    uuid: string
    name: string
    icon?: string | null
    slug: string
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    parent?: categoriesCreateNestedOneWithoutChildrenInput
    children?: categoriesCreateNestedManyWithoutParentInput
    category_breadcrumbs?: category_breadcrumbsCreateNestedManyWithoutCategoryInput
  }

  export type categoriesUncheckedCreateWithoutProductsInput = {
    id?: number
    uuid: string
    name: string
    icon?: string | null
    slug: string
    parent_id?: number | null
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    children?: categoriesUncheckedCreateNestedManyWithoutParentInput
    category_breadcrumbs?: category_breadcrumbsUncheckedCreateNestedManyWithoutCategoryInput
  }

  export type categoriesCreateOrConnectWithoutProductsInput = {
    where: categoriesWhereUniqueInput
    create: XOR<categoriesCreateWithoutProductsInput, categoriesUncheckedCreateWithoutProductsInput>
  }

  export type shopsCreateWithoutProductsInput = {
    uuid: string
    name: string
    slug: string
    description?: string | null
    logo?: string | null
    rating?: number | null
    is_active?: boolean
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    seller: usersCreateNestedOneWithoutShopsInput
    address?: addressesCreateNestedOneWithoutShopsInput
  }

  export type shopsUncheckedCreateWithoutProductsInput = {
    id?: number
    uuid: string
    seller_id: number
    name: string
    slug: string
    description?: string | null
    logo?: string | null
    address_id?: number | null
    rating?: number | null
    is_active?: boolean
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type shopsCreateOrConnectWithoutProductsInput = {
    where: shopsWhereUniqueInput
    create: XOR<shopsCreateWithoutProductsInput, shopsUncheckedCreateWithoutProductsInput>
  }

  export type cart_itemsCreateWithoutProductInput = {
    quantity: number
    created_at?: Date | string
    updated_at?: Date | string
    user: usersCreateNestedOneWithoutCart_itemsInput
  }

  export type cart_itemsUncheckedCreateWithoutProductInput = {
    id?: number
    user_id: number
    quantity: number
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type cart_itemsCreateOrConnectWithoutProductInput = {
    where: cart_itemsWhereUniqueInput
    create: XOR<cart_itemsCreateWithoutProductInput, cart_itemsUncheckedCreateWithoutProductInput>
  }

  export type cart_itemsCreateManyProductInputEnvelope = {
    data: cart_itemsCreateManyProductInput | cart_itemsCreateManyProductInput[]
    skipDuplicates?: boolean
  }

  export type order_itemsCreateWithoutProductInput = {
    quantity: number
    unit_price: number
    created_at?: Date | string
    updated_at?: Date | string
    order: ordersCreateNestedOneWithoutOrder_itemsInput
  }

  export type order_itemsUncheckedCreateWithoutProductInput = {
    id?: number
    order_id: number
    quantity: number
    unit_price: number
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type order_itemsCreateOrConnectWithoutProductInput = {
    where: order_itemsWhereUniqueInput
    create: XOR<order_itemsCreateWithoutProductInput, order_itemsUncheckedCreateWithoutProductInput>
  }

  export type order_itemsCreateManyProductInputEnvelope = {
    data: order_itemsCreateManyProductInput | order_itemsCreateManyProductInput[]
    skipDuplicates?: boolean
  }

  export type reviewsCreateWithoutProductInput = {
    uuid: string
    rating: number
    comment?: string | null
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    user: usersCreateNestedOneWithoutReviewsInput
  }

  export type reviewsUncheckedCreateWithoutProductInput = {
    id?: number
    uuid: string
    user_id: number
    rating: number
    comment?: string | null
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type reviewsCreateOrConnectWithoutProductInput = {
    where: reviewsWhereUniqueInput
    create: XOR<reviewsCreateWithoutProductInput, reviewsUncheckedCreateWithoutProductInput>
  }

  export type reviewsCreateManyProductInputEnvelope = {
    data: reviewsCreateManyProductInput | reviewsCreateManyProductInput[]
    skipDuplicates?: boolean
  }

  export type product_imagesCreateWithoutProductInput = {
    url: string
    is_primary?: boolean
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type product_imagesUncheckedCreateWithoutProductInput = {
    id?: number
    url: string
    is_primary?: boolean
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type product_imagesCreateOrConnectWithoutProductInput = {
    where: product_imagesWhereUniqueInput
    create: XOR<product_imagesCreateWithoutProductInput, product_imagesUncheckedCreateWithoutProductInput>
  }

  export type product_imagesCreateManyProductInputEnvelope = {
    data: product_imagesCreateManyProductInput | product_imagesCreateManyProductInput[]
    skipDuplicates?: boolean
  }

  export type product_specificationsCreateWithoutProductInput = {
    key: string
    value: string
    created_at?: Date | string
    updated_at?: Date | string
    product_attributes?: product_attributesCreateNestedManyWithoutSpecificationInput
  }

  export type product_specificationsUncheckedCreateWithoutProductInput = {
    id?: number
    key: string
    value: string
    created_at?: Date | string
    updated_at?: Date | string
    product_attributes?: product_attributesUncheckedCreateNestedManyWithoutSpecificationInput
  }

  export type product_specificationsCreateOrConnectWithoutProductInput = {
    where: product_specificationsWhereUniqueInput
    create: XOR<product_specificationsCreateWithoutProductInput, product_specificationsUncheckedCreateWithoutProductInput>
  }

  export type product_specificationsCreateManyProductInputEnvelope = {
    data: product_specificationsCreateManyProductInput | product_specificationsCreateManyProductInput[]
    skipDuplicates?: boolean
  }

  export type product_attributesCreateWithoutProductInput = {
    name: string
    value: string
    created_at?: Date | string
    updated_at?: Date | string
    specification: product_specificationsCreateNestedOneWithoutProduct_attributesInput
  }

  export type product_attributesUncheckedCreateWithoutProductInput = {
    id?: number
    specification_id: number
    name: string
    value: string
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type product_attributesCreateOrConnectWithoutProductInput = {
    where: product_attributesWhereUniqueInput
    create: XOR<product_attributesCreateWithoutProductInput, product_attributesUncheckedCreateWithoutProductInput>
  }

  export type product_attributesCreateManyProductInputEnvelope = {
    data: product_attributesCreateManyProductInput | product_attributesCreateManyProductInput[]
    skipDuplicates?: boolean
  }

  export type categoriesUpsertWithoutProductsInput = {
    update: XOR<categoriesUpdateWithoutProductsInput, categoriesUncheckedUpdateWithoutProductsInput>
    create: XOR<categoriesCreateWithoutProductsInput, categoriesUncheckedCreateWithoutProductsInput>
    where?: categoriesWhereInput
  }

  export type categoriesUpdateToOneWithWhereWithoutProductsInput = {
    where?: categoriesWhereInput
    data: XOR<categoriesUpdateWithoutProductsInput, categoriesUncheckedUpdateWithoutProductsInput>
  }

  export type categoriesUpdateWithoutProductsInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: StringFieldUpdateOperationsInput | string
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    parent?: categoriesUpdateOneWithoutChildrenNestedInput
    children?: categoriesUpdateManyWithoutParentNestedInput
    category_breadcrumbs?: category_breadcrumbsUpdateManyWithoutCategoryNestedInput
  }

  export type categoriesUncheckedUpdateWithoutProductsInput = {
    id?: IntFieldUpdateOperationsInput | number
    uuid?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: StringFieldUpdateOperationsInput | string
    parent_id?: NullableIntFieldUpdateOperationsInput | number | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    children?: categoriesUncheckedUpdateManyWithoutParentNestedInput
    category_breadcrumbs?: category_breadcrumbsUncheckedUpdateManyWithoutCategoryNestedInput
  }

  export type shopsUpsertWithoutProductsInput = {
    update: XOR<shopsUpdateWithoutProductsInput, shopsUncheckedUpdateWithoutProductsInput>
    create: XOR<shopsCreateWithoutProductsInput, shopsUncheckedCreateWithoutProductsInput>
    where?: shopsWhereInput
  }

  export type shopsUpdateToOneWithWhereWithoutProductsInput = {
    where?: shopsWhereInput
    data: XOR<shopsUpdateWithoutProductsInput, shopsUncheckedUpdateWithoutProductsInput>
  }

  export type shopsUpdateWithoutProductsInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    rating?: NullableFloatFieldUpdateOperationsInput | number | null
    is_active?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    seller?: usersUpdateOneRequiredWithoutShopsNestedInput
    address?: addressesUpdateOneWithoutShopsNestedInput
  }

  export type shopsUncheckedUpdateWithoutProductsInput = {
    id?: IntFieldUpdateOperationsInput | number
    uuid?: StringFieldUpdateOperationsInput | string
    seller_id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    address_id?: NullableIntFieldUpdateOperationsInput | number | null
    rating?: NullableFloatFieldUpdateOperationsInput | number | null
    is_active?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type cart_itemsUpsertWithWhereUniqueWithoutProductInput = {
    where: cart_itemsWhereUniqueInput
    update: XOR<cart_itemsUpdateWithoutProductInput, cart_itemsUncheckedUpdateWithoutProductInput>
    create: XOR<cart_itemsCreateWithoutProductInput, cart_itemsUncheckedCreateWithoutProductInput>
  }

  export type cart_itemsUpdateWithWhereUniqueWithoutProductInput = {
    where: cart_itemsWhereUniqueInput
    data: XOR<cart_itemsUpdateWithoutProductInput, cart_itemsUncheckedUpdateWithoutProductInput>
  }

  export type cart_itemsUpdateManyWithWhereWithoutProductInput = {
    where: cart_itemsScalarWhereInput
    data: XOR<cart_itemsUpdateManyMutationInput, cart_itemsUncheckedUpdateManyWithoutProductInput>
  }

  export type order_itemsUpsertWithWhereUniqueWithoutProductInput = {
    where: order_itemsWhereUniqueInput
    update: XOR<order_itemsUpdateWithoutProductInput, order_itemsUncheckedUpdateWithoutProductInput>
    create: XOR<order_itemsCreateWithoutProductInput, order_itemsUncheckedCreateWithoutProductInput>
  }

  export type order_itemsUpdateWithWhereUniqueWithoutProductInput = {
    where: order_itemsWhereUniqueInput
    data: XOR<order_itemsUpdateWithoutProductInput, order_itemsUncheckedUpdateWithoutProductInput>
  }

  export type order_itemsUpdateManyWithWhereWithoutProductInput = {
    where: order_itemsScalarWhereInput
    data: XOR<order_itemsUpdateManyMutationInput, order_itemsUncheckedUpdateManyWithoutProductInput>
  }

  export type order_itemsScalarWhereInput = {
    AND?: order_itemsScalarWhereInput | order_itemsScalarWhereInput[]
    OR?: order_itemsScalarWhereInput[]
    NOT?: order_itemsScalarWhereInput | order_itemsScalarWhereInput[]
    id?: IntFilter<"order_items"> | number
    order_id?: IntFilter<"order_items"> | number
    product_id?: IntFilter<"order_items"> | number
    quantity?: IntFilter<"order_items"> | number
    unit_price?: FloatFilter<"order_items"> | number
    created_at?: DateTimeFilter<"order_items"> | Date | string
    updated_at?: DateTimeFilter<"order_items"> | Date | string
  }

  export type reviewsUpsertWithWhereUniqueWithoutProductInput = {
    where: reviewsWhereUniqueInput
    update: XOR<reviewsUpdateWithoutProductInput, reviewsUncheckedUpdateWithoutProductInput>
    create: XOR<reviewsCreateWithoutProductInput, reviewsUncheckedCreateWithoutProductInput>
  }

  export type reviewsUpdateWithWhereUniqueWithoutProductInput = {
    where: reviewsWhereUniqueInput
    data: XOR<reviewsUpdateWithoutProductInput, reviewsUncheckedUpdateWithoutProductInput>
  }

  export type reviewsUpdateManyWithWhereWithoutProductInput = {
    where: reviewsScalarWhereInput
    data: XOR<reviewsUpdateManyMutationInput, reviewsUncheckedUpdateManyWithoutProductInput>
  }

  export type product_imagesUpsertWithWhereUniqueWithoutProductInput = {
    where: product_imagesWhereUniqueInput
    update: XOR<product_imagesUpdateWithoutProductInput, product_imagesUncheckedUpdateWithoutProductInput>
    create: XOR<product_imagesCreateWithoutProductInput, product_imagesUncheckedCreateWithoutProductInput>
  }

  export type product_imagesUpdateWithWhereUniqueWithoutProductInput = {
    where: product_imagesWhereUniqueInput
    data: XOR<product_imagesUpdateWithoutProductInput, product_imagesUncheckedUpdateWithoutProductInput>
  }

  export type product_imagesUpdateManyWithWhereWithoutProductInput = {
    where: product_imagesScalarWhereInput
    data: XOR<product_imagesUpdateManyMutationInput, product_imagesUncheckedUpdateManyWithoutProductInput>
  }

  export type product_imagesScalarWhereInput = {
    AND?: product_imagesScalarWhereInput | product_imagesScalarWhereInput[]
    OR?: product_imagesScalarWhereInput[]
    NOT?: product_imagesScalarWhereInput | product_imagesScalarWhereInput[]
    id?: IntFilter<"product_images"> | number
    product_id?: IntFilter<"product_images"> | number
    url?: StringFilter<"product_images"> | string
    is_primary?: BoolFilter<"product_images"> | boolean
    created_at?: DateTimeFilter<"product_images"> | Date | string
    updated_at?: DateTimeFilter<"product_images"> | Date | string
  }

  export type product_specificationsUpsertWithWhereUniqueWithoutProductInput = {
    where: product_specificationsWhereUniqueInput
    update: XOR<product_specificationsUpdateWithoutProductInput, product_specificationsUncheckedUpdateWithoutProductInput>
    create: XOR<product_specificationsCreateWithoutProductInput, product_specificationsUncheckedCreateWithoutProductInput>
  }

  export type product_specificationsUpdateWithWhereUniqueWithoutProductInput = {
    where: product_specificationsWhereUniqueInput
    data: XOR<product_specificationsUpdateWithoutProductInput, product_specificationsUncheckedUpdateWithoutProductInput>
  }

  export type product_specificationsUpdateManyWithWhereWithoutProductInput = {
    where: product_specificationsScalarWhereInput
    data: XOR<product_specificationsUpdateManyMutationInput, product_specificationsUncheckedUpdateManyWithoutProductInput>
  }

  export type product_specificationsScalarWhereInput = {
    AND?: product_specificationsScalarWhereInput | product_specificationsScalarWhereInput[]
    OR?: product_specificationsScalarWhereInput[]
    NOT?: product_specificationsScalarWhereInput | product_specificationsScalarWhereInput[]
    id?: IntFilter<"product_specifications"> | number
    product_id?: IntFilter<"product_specifications"> | number
    key?: StringFilter<"product_specifications"> | string
    value?: StringFilter<"product_specifications"> | string
    created_at?: DateTimeFilter<"product_specifications"> | Date | string
    updated_at?: DateTimeFilter<"product_specifications"> | Date | string
  }

  export type product_attributesUpsertWithWhereUniqueWithoutProductInput = {
    where: product_attributesWhereUniqueInput
    update: XOR<product_attributesUpdateWithoutProductInput, product_attributesUncheckedUpdateWithoutProductInput>
    create: XOR<product_attributesCreateWithoutProductInput, product_attributesUncheckedCreateWithoutProductInput>
  }

  export type product_attributesUpdateWithWhereUniqueWithoutProductInput = {
    where: product_attributesWhereUniqueInput
    data: XOR<product_attributesUpdateWithoutProductInput, product_attributesUncheckedUpdateWithoutProductInput>
  }

  export type product_attributesUpdateManyWithWhereWithoutProductInput = {
    where: product_attributesScalarWhereInput
    data: XOR<product_attributesUpdateManyMutationInput, product_attributesUncheckedUpdateManyWithoutProductInput>
  }

  export type product_attributesScalarWhereInput = {
    AND?: product_attributesScalarWhereInput | product_attributesScalarWhereInput[]
    OR?: product_attributesScalarWhereInput[]
    NOT?: product_attributesScalarWhereInput | product_attributesScalarWhereInput[]
    id?: IntFilter<"product_attributes"> | number
    product_id?: IntFilter<"product_attributes"> | number
    specification_id?: IntFilter<"product_attributes"> | number
    name?: StringFilter<"product_attributes"> | string
    value?: StringFilter<"product_attributes"> | string
    created_at?: DateTimeFilter<"product_attributes"> | Date | string
    updated_at?: DateTimeFilter<"product_attributes"> | Date | string
  }

  export type categoriesCreateWithoutChildrenInput = {
    uuid: string
    name: string
    icon?: string | null
    slug: string
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    parent?: categoriesCreateNestedOneWithoutChildrenInput
    products?: productsCreateNestedManyWithoutCategoryInput
    category_breadcrumbs?: category_breadcrumbsCreateNestedManyWithoutCategoryInput
  }

  export type categoriesUncheckedCreateWithoutChildrenInput = {
    id?: number
    uuid: string
    name: string
    icon?: string | null
    slug: string
    parent_id?: number | null
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    products?: productsUncheckedCreateNestedManyWithoutCategoryInput
    category_breadcrumbs?: category_breadcrumbsUncheckedCreateNestedManyWithoutCategoryInput
  }

  export type categoriesCreateOrConnectWithoutChildrenInput = {
    where: categoriesWhereUniqueInput
    create: XOR<categoriesCreateWithoutChildrenInput, categoriesUncheckedCreateWithoutChildrenInput>
  }

  export type categoriesCreateWithoutParentInput = {
    uuid: string
    name: string
    icon?: string | null
    slug: string
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    children?: categoriesCreateNestedManyWithoutParentInput
    products?: productsCreateNestedManyWithoutCategoryInput
    category_breadcrumbs?: category_breadcrumbsCreateNestedManyWithoutCategoryInput
  }

  export type categoriesUncheckedCreateWithoutParentInput = {
    id?: number
    uuid: string
    name: string
    icon?: string | null
    slug: string
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    children?: categoriesUncheckedCreateNestedManyWithoutParentInput
    products?: productsUncheckedCreateNestedManyWithoutCategoryInput
    category_breadcrumbs?: category_breadcrumbsUncheckedCreateNestedManyWithoutCategoryInput
  }

  export type categoriesCreateOrConnectWithoutParentInput = {
    where: categoriesWhereUniqueInput
    create: XOR<categoriesCreateWithoutParentInput, categoriesUncheckedCreateWithoutParentInput>
  }

  export type categoriesCreateManyParentInputEnvelope = {
    data: categoriesCreateManyParentInput | categoriesCreateManyParentInput[]
    skipDuplicates?: boolean
  }

  export type productsCreateWithoutCategoryInput = {
    uuid: string
    name: string
    slug: string
    description?: string | null
    old_price?: number | null
    new_price: number
    discount_percentage?: number | null
    stock?: number
    sold?: number
    weight?: number | null
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    shop?: shopsCreateNestedOneWithoutProductsInput
    cart_items?: cart_itemsCreateNestedManyWithoutProductInput
    order_items?: order_itemsCreateNestedManyWithoutProductInput
    reviews?: reviewsCreateNestedManyWithoutProductInput
    product_images?: product_imagesCreateNestedManyWithoutProductInput
    product_specifications?: product_specificationsCreateNestedManyWithoutProductInput
    product_attributes?: product_attributesCreateNestedManyWithoutProductInput
  }

  export type productsUncheckedCreateWithoutCategoryInput = {
    id?: number
    uuid: string
    name: string
    slug: string
    description?: string | null
    old_price?: number | null
    new_price: number
    discount_percentage?: number | null
    stock?: number
    sold?: number
    weight?: number | null
    shop_id?: number | null
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    cart_items?: cart_itemsUncheckedCreateNestedManyWithoutProductInput
    order_items?: order_itemsUncheckedCreateNestedManyWithoutProductInput
    reviews?: reviewsUncheckedCreateNestedManyWithoutProductInput
    product_images?: product_imagesUncheckedCreateNestedManyWithoutProductInput
    product_specifications?: product_specificationsUncheckedCreateNestedManyWithoutProductInput
    product_attributes?: product_attributesUncheckedCreateNestedManyWithoutProductInput
  }

  export type productsCreateOrConnectWithoutCategoryInput = {
    where: productsWhereUniqueInput
    create: XOR<productsCreateWithoutCategoryInput, productsUncheckedCreateWithoutCategoryInput>
  }

  export type productsCreateManyCategoryInputEnvelope = {
    data: productsCreateManyCategoryInput | productsCreateManyCategoryInput[]
    skipDuplicates?: boolean
  }

  export type category_breadcrumbsCreateWithoutCategoryInput = {
    name: string
    path: string
    level: number
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type category_breadcrumbsUncheckedCreateWithoutCategoryInput = {
    id?: number
    name: string
    path: string
    level: number
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type category_breadcrumbsCreateOrConnectWithoutCategoryInput = {
    where: category_breadcrumbsWhereUniqueInput
    create: XOR<category_breadcrumbsCreateWithoutCategoryInput, category_breadcrumbsUncheckedCreateWithoutCategoryInput>
  }

  export type category_breadcrumbsCreateManyCategoryInputEnvelope = {
    data: category_breadcrumbsCreateManyCategoryInput | category_breadcrumbsCreateManyCategoryInput[]
    skipDuplicates?: boolean
  }

  export type categoriesUpsertWithoutChildrenInput = {
    update: XOR<categoriesUpdateWithoutChildrenInput, categoriesUncheckedUpdateWithoutChildrenInput>
    create: XOR<categoriesCreateWithoutChildrenInput, categoriesUncheckedCreateWithoutChildrenInput>
    where?: categoriesWhereInput
  }

  export type categoriesUpdateToOneWithWhereWithoutChildrenInput = {
    where?: categoriesWhereInput
    data: XOR<categoriesUpdateWithoutChildrenInput, categoriesUncheckedUpdateWithoutChildrenInput>
  }

  export type categoriesUpdateWithoutChildrenInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: StringFieldUpdateOperationsInput | string
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    parent?: categoriesUpdateOneWithoutChildrenNestedInput
    products?: productsUpdateManyWithoutCategoryNestedInput
    category_breadcrumbs?: category_breadcrumbsUpdateManyWithoutCategoryNestedInput
  }

  export type categoriesUncheckedUpdateWithoutChildrenInput = {
    id?: IntFieldUpdateOperationsInput | number
    uuid?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: StringFieldUpdateOperationsInput | string
    parent_id?: NullableIntFieldUpdateOperationsInput | number | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    products?: productsUncheckedUpdateManyWithoutCategoryNestedInput
    category_breadcrumbs?: category_breadcrumbsUncheckedUpdateManyWithoutCategoryNestedInput
  }

  export type categoriesUpsertWithWhereUniqueWithoutParentInput = {
    where: categoriesWhereUniqueInput
    update: XOR<categoriesUpdateWithoutParentInput, categoriesUncheckedUpdateWithoutParentInput>
    create: XOR<categoriesCreateWithoutParentInput, categoriesUncheckedCreateWithoutParentInput>
  }

  export type categoriesUpdateWithWhereUniqueWithoutParentInput = {
    where: categoriesWhereUniqueInput
    data: XOR<categoriesUpdateWithoutParentInput, categoriesUncheckedUpdateWithoutParentInput>
  }

  export type categoriesUpdateManyWithWhereWithoutParentInput = {
    where: categoriesScalarWhereInput
    data: XOR<categoriesUpdateManyMutationInput, categoriesUncheckedUpdateManyWithoutParentInput>
  }

  export type categoriesScalarWhereInput = {
    AND?: categoriesScalarWhereInput | categoriesScalarWhereInput[]
    OR?: categoriesScalarWhereInput[]
    NOT?: categoriesScalarWhereInput | categoriesScalarWhereInput[]
    id?: IntFilter<"categories"> | number
    uuid?: StringFilter<"categories"> | string
    name?: StringFilter<"categories"> | string
    icon?: StringNullableFilter<"categories"> | string | null
    slug?: StringFilter<"categories"> | string
    parent_id?: IntNullableFilter<"categories"> | number | null
    is_deleted?: BoolFilter<"categories"> | boolean
    created_at?: DateTimeFilter<"categories"> | Date | string
    updated_at?: DateTimeFilter<"categories"> | Date | string
  }

  export type productsUpsertWithWhereUniqueWithoutCategoryInput = {
    where: productsWhereUniqueInput
    update: XOR<productsUpdateWithoutCategoryInput, productsUncheckedUpdateWithoutCategoryInput>
    create: XOR<productsCreateWithoutCategoryInput, productsUncheckedCreateWithoutCategoryInput>
  }

  export type productsUpdateWithWhereUniqueWithoutCategoryInput = {
    where: productsWhereUniqueInput
    data: XOR<productsUpdateWithoutCategoryInput, productsUncheckedUpdateWithoutCategoryInput>
  }

  export type productsUpdateManyWithWhereWithoutCategoryInput = {
    where: productsScalarWhereInput
    data: XOR<productsUpdateManyMutationInput, productsUncheckedUpdateManyWithoutCategoryInput>
  }

  export type category_breadcrumbsUpsertWithWhereUniqueWithoutCategoryInput = {
    where: category_breadcrumbsWhereUniqueInput
    update: XOR<category_breadcrumbsUpdateWithoutCategoryInput, category_breadcrumbsUncheckedUpdateWithoutCategoryInput>
    create: XOR<category_breadcrumbsCreateWithoutCategoryInput, category_breadcrumbsUncheckedCreateWithoutCategoryInput>
  }

  export type category_breadcrumbsUpdateWithWhereUniqueWithoutCategoryInput = {
    where: category_breadcrumbsWhereUniqueInput
    data: XOR<category_breadcrumbsUpdateWithoutCategoryInput, category_breadcrumbsUncheckedUpdateWithoutCategoryInput>
  }

  export type category_breadcrumbsUpdateManyWithWhereWithoutCategoryInput = {
    where: category_breadcrumbsScalarWhereInput
    data: XOR<category_breadcrumbsUpdateManyMutationInput, category_breadcrumbsUncheckedUpdateManyWithoutCategoryInput>
  }

  export type category_breadcrumbsScalarWhereInput = {
    AND?: category_breadcrumbsScalarWhereInput | category_breadcrumbsScalarWhereInput[]
    OR?: category_breadcrumbsScalarWhereInput[]
    NOT?: category_breadcrumbsScalarWhereInput | category_breadcrumbsScalarWhereInput[]
    id?: IntFilter<"category_breadcrumbs"> | number
    category_id?: IntFilter<"category_breadcrumbs"> | number
    name?: StringFilter<"category_breadcrumbs"> | string
    path?: StringFilter<"category_breadcrumbs"> | string
    level?: IntFilter<"category_breadcrumbs"> | number
    created_at?: DateTimeFilter<"category_breadcrumbs"> | Date | string
    updated_at?: DateTimeFilter<"category_breadcrumbs"> | Date | string
  }

  export type categoriesCreateWithoutCategory_breadcrumbsInput = {
    uuid: string
    name: string
    icon?: string | null
    slug: string
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    parent?: categoriesCreateNestedOneWithoutChildrenInput
    children?: categoriesCreateNestedManyWithoutParentInput
    products?: productsCreateNestedManyWithoutCategoryInput
  }

  export type categoriesUncheckedCreateWithoutCategory_breadcrumbsInput = {
    id?: number
    uuid: string
    name: string
    icon?: string | null
    slug: string
    parent_id?: number | null
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    children?: categoriesUncheckedCreateNestedManyWithoutParentInput
    products?: productsUncheckedCreateNestedManyWithoutCategoryInput
  }

  export type categoriesCreateOrConnectWithoutCategory_breadcrumbsInput = {
    where: categoriesWhereUniqueInput
    create: XOR<categoriesCreateWithoutCategory_breadcrumbsInput, categoriesUncheckedCreateWithoutCategory_breadcrumbsInput>
  }

  export type categoriesUpsertWithoutCategory_breadcrumbsInput = {
    update: XOR<categoriesUpdateWithoutCategory_breadcrumbsInput, categoriesUncheckedUpdateWithoutCategory_breadcrumbsInput>
    create: XOR<categoriesCreateWithoutCategory_breadcrumbsInput, categoriesUncheckedCreateWithoutCategory_breadcrumbsInput>
    where?: categoriesWhereInput
  }

  export type categoriesUpdateToOneWithWhereWithoutCategory_breadcrumbsInput = {
    where?: categoriesWhereInput
    data: XOR<categoriesUpdateWithoutCategory_breadcrumbsInput, categoriesUncheckedUpdateWithoutCategory_breadcrumbsInput>
  }

  export type categoriesUpdateWithoutCategory_breadcrumbsInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: StringFieldUpdateOperationsInput | string
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    parent?: categoriesUpdateOneWithoutChildrenNestedInput
    children?: categoriesUpdateManyWithoutParentNestedInput
    products?: productsUpdateManyWithoutCategoryNestedInput
  }

  export type categoriesUncheckedUpdateWithoutCategory_breadcrumbsInput = {
    id?: IntFieldUpdateOperationsInput | number
    uuid?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: StringFieldUpdateOperationsInput | string
    parent_id?: NullableIntFieldUpdateOperationsInput | number | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    children?: categoriesUncheckedUpdateManyWithoutParentNestedInput
    products?: productsUncheckedUpdateManyWithoutCategoryNestedInput
  }

  export type productsCreateWithoutProduct_imagesInput = {
    uuid: string
    name: string
    slug: string
    description?: string | null
    old_price?: number | null
    new_price: number
    discount_percentage?: number | null
    stock?: number
    sold?: number
    weight?: number | null
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    category?: categoriesCreateNestedOneWithoutProductsInput
    shop?: shopsCreateNestedOneWithoutProductsInput
    cart_items?: cart_itemsCreateNestedManyWithoutProductInput
    order_items?: order_itemsCreateNestedManyWithoutProductInput
    reviews?: reviewsCreateNestedManyWithoutProductInput
    product_specifications?: product_specificationsCreateNestedManyWithoutProductInput
    product_attributes?: product_attributesCreateNestedManyWithoutProductInput
  }

  export type productsUncheckedCreateWithoutProduct_imagesInput = {
    id?: number
    uuid: string
    name: string
    slug: string
    description?: string | null
    old_price?: number | null
    new_price: number
    discount_percentage?: number | null
    stock?: number
    sold?: number
    weight?: number | null
    category_id?: number | null
    shop_id?: number | null
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    cart_items?: cart_itemsUncheckedCreateNestedManyWithoutProductInput
    order_items?: order_itemsUncheckedCreateNestedManyWithoutProductInput
    reviews?: reviewsUncheckedCreateNestedManyWithoutProductInput
    product_specifications?: product_specificationsUncheckedCreateNestedManyWithoutProductInput
    product_attributes?: product_attributesUncheckedCreateNestedManyWithoutProductInput
  }

  export type productsCreateOrConnectWithoutProduct_imagesInput = {
    where: productsWhereUniqueInput
    create: XOR<productsCreateWithoutProduct_imagesInput, productsUncheckedCreateWithoutProduct_imagesInput>
  }

  export type productsUpsertWithoutProduct_imagesInput = {
    update: XOR<productsUpdateWithoutProduct_imagesInput, productsUncheckedUpdateWithoutProduct_imagesInput>
    create: XOR<productsCreateWithoutProduct_imagesInput, productsUncheckedCreateWithoutProduct_imagesInput>
    where?: productsWhereInput
  }

  export type productsUpdateToOneWithWhereWithoutProduct_imagesInput = {
    where?: productsWhereInput
    data: XOR<productsUpdateWithoutProduct_imagesInput, productsUncheckedUpdateWithoutProduct_imagesInput>
  }

  export type productsUpdateWithoutProduct_imagesInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    old_price?: NullableFloatFieldUpdateOperationsInput | number | null
    new_price?: FloatFieldUpdateOperationsInput | number
    discount_percentage?: NullableFloatFieldUpdateOperationsInput | number | null
    stock?: IntFieldUpdateOperationsInput | number
    sold?: IntFieldUpdateOperationsInput | number
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: categoriesUpdateOneWithoutProductsNestedInput
    shop?: shopsUpdateOneWithoutProductsNestedInput
    cart_items?: cart_itemsUpdateManyWithoutProductNestedInput
    order_items?: order_itemsUpdateManyWithoutProductNestedInput
    reviews?: reviewsUpdateManyWithoutProductNestedInput
    product_specifications?: product_specificationsUpdateManyWithoutProductNestedInput
    product_attributes?: product_attributesUpdateManyWithoutProductNestedInput
  }

  export type productsUncheckedUpdateWithoutProduct_imagesInput = {
    id?: IntFieldUpdateOperationsInput | number
    uuid?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    old_price?: NullableFloatFieldUpdateOperationsInput | number | null
    new_price?: FloatFieldUpdateOperationsInput | number
    discount_percentage?: NullableFloatFieldUpdateOperationsInput | number | null
    stock?: IntFieldUpdateOperationsInput | number
    sold?: IntFieldUpdateOperationsInput | number
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    category_id?: NullableIntFieldUpdateOperationsInput | number | null
    shop_id?: NullableIntFieldUpdateOperationsInput | number | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    cart_items?: cart_itemsUncheckedUpdateManyWithoutProductNestedInput
    order_items?: order_itemsUncheckedUpdateManyWithoutProductNestedInput
    reviews?: reviewsUncheckedUpdateManyWithoutProductNestedInput
    product_specifications?: product_specificationsUncheckedUpdateManyWithoutProductNestedInput
    product_attributes?: product_attributesUncheckedUpdateManyWithoutProductNestedInput
  }

  export type productsCreateWithoutProduct_specificationsInput = {
    uuid: string
    name: string
    slug: string
    description?: string | null
    old_price?: number | null
    new_price: number
    discount_percentage?: number | null
    stock?: number
    sold?: number
    weight?: number | null
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    category?: categoriesCreateNestedOneWithoutProductsInput
    shop?: shopsCreateNestedOneWithoutProductsInput
    cart_items?: cart_itemsCreateNestedManyWithoutProductInput
    order_items?: order_itemsCreateNestedManyWithoutProductInput
    reviews?: reviewsCreateNestedManyWithoutProductInput
    product_images?: product_imagesCreateNestedManyWithoutProductInput
    product_attributes?: product_attributesCreateNestedManyWithoutProductInput
  }

  export type productsUncheckedCreateWithoutProduct_specificationsInput = {
    id?: number
    uuid: string
    name: string
    slug: string
    description?: string | null
    old_price?: number | null
    new_price: number
    discount_percentage?: number | null
    stock?: number
    sold?: number
    weight?: number | null
    category_id?: number | null
    shop_id?: number | null
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    cart_items?: cart_itemsUncheckedCreateNestedManyWithoutProductInput
    order_items?: order_itemsUncheckedCreateNestedManyWithoutProductInput
    reviews?: reviewsUncheckedCreateNestedManyWithoutProductInput
    product_images?: product_imagesUncheckedCreateNestedManyWithoutProductInput
    product_attributes?: product_attributesUncheckedCreateNestedManyWithoutProductInput
  }

  export type productsCreateOrConnectWithoutProduct_specificationsInput = {
    where: productsWhereUniqueInput
    create: XOR<productsCreateWithoutProduct_specificationsInput, productsUncheckedCreateWithoutProduct_specificationsInput>
  }

  export type product_attributesCreateWithoutSpecificationInput = {
    name: string
    value: string
    created_at?: Date | string
    updated_at?: Date | string
    product: productsCreateNestedOneWithoutProduct_attributesInput
  }

  export type product_attributesUncheckedCreateWithoutSpecificationInput = {
    id?: number
    product_id: number
    name: string
    value: string
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type product_attributesCreateOrConnectWithoutSpecificationInput = {
    where: product_attributesWhereUniqueInput
    create: XOR<product_attributesCreateWithoutSpecificationInput, product_attributesUncheckedCreateWithoutSpecificationInput>
  }

  export type product_attributesCreateManySpecificationInputEnvelope = {
    data: product_attributesCreateManySpecificationInput | product_attributesCreateManySpecificationInput[]
    skipDuplicates?: boolean
  }

  export type productsUpsertWithoutProduct_specificationsInput = {
    update: XOR<productsUpdateWithoutProduct_specificationsInput, productsUncheckedUpdateWithoutProduct_specificationsInput>
    create: XOR<productsCreateWithoutProduct_specificationsInput, productsUncheckedCreateWithoutProduct_specificationsInput>
    where?: productsWhereInput
  }

  export type productsUpdateToOneWithWhereWithoutProduct_specificationsInput = {
    where?: productsWhereInput
    data: XOR<productsUpdateWithoutProduct_specificationsInput, productsUncheckedUpdateWithoutProduct_specificationsInput>
  }

  export type productsUpdateWithoutProduct_specificationsInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    old_price?: NullableFloatFieldUpdateOperationsInput | number | null
    new_price?: FloatFieldUpdateOperationsInput | number
    discount_percentage?: NullableFloatFieldUpdateOperationsInput | number | null
    stock?: IntFieldUpdateOperationsInput | number
    sold?: IntFieldUpdateOperationsInput | number
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: categoriesUpdateOneWithoutProductsNestedInput
    shop?: shopsUpdateOneWithoutProductsNestedInput
    cart_items?: cart_itemsUpdateManyWithoutProductNestedInput
    order_items?: order_itemsUpdateManyWithoutProductNestedInput
    reviews?: reviewsUpdateManyWithoutProductNestedInput
    product_images?: product_imagesUpdateManyWithoutProductNestedInput
    product_attributes?: product_attributesUpdateManyWithoutProductNestedInput
  }

  export type productsUncheckedUpdateWithoutProduct_specificationsInput = {
    id?: IntFieldUpdateOperationsInput | number
    uuid?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    old_price?: NullableFloatFieldUpdateOperationsInput | number | null
    new_price?: FloatFieldUpdateOperationsInput | number
    discount_percentage?: NullableFloatFieldUpdateOperationsInput | number | null
    stock?: IntFieldUpdateOperationsInput | number
    sold?: IntFieldUpdateOperationsInput | number
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    category_id?: NullableIntFieldUpdateOperationsInput | number | null
    shop_id?: NullableIntFieldUpdateOperationsInput | number | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    cart_items?: cart_itemsUncheckedUpdateManyWithoutProductNestedInput
    order_items?: order_itemsUncheckedUpdateManyWithoutProductNestedInput
    reviews?: reviewsUncheckedUpdateManyWithoutProductNestedInput
    product_images?: product_imagesUncheckedUpdateManyWithoutProductNestedInput
    product_attributes?: product_attributesUncheckedUpdateManyWithoutProductNestedInput
  }

  export type product_attributesUpsertWithWhereUniqueWithoutSpecificationInput = {
    where: product_attributesWhereUniqueInput
    update: XOR<product_attributesUpdateWithoutSpecificationInput, product_attributesUncheckedUpdateWithoutSpecificationInput>
    create: XOR<product_attributesCreateWithoutSpecificationInput, product_attributesUncheckedCreateWithoutSpecificationInput>
  }

  export type product_attributesUpdateWithWhereUniqueWithoutSpecificationInput = {
    where: product_attributesWhereUniqueInput
    data: XOR<product_attributesUpdateWithoutSpecificationInput, product_attributesUncheckedUpdateWithoutSpecificationInput>
  }

  export type product_attributesUpdateManyWithWhereWithoutSpecificationInput = {
    where: product_attributesScalarWhereInput
    data: XOR<product_attributesUpdateManyMutationInput, product_attributesUncheckedUpdateManyWithoutSpecificationInput>
  }

  export type productsCreateWithoutProduct_attributesInput = {
    uuid: string
    name: string
    slug: string
    description?: string | null
    old_price?: number | null
    new_price: number
    discount_percentage?: number | null
    stock?: number
    sold?: number
    weight?: number | null
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    category?: categoriesCreateNestedOneWithoutProductsInput
    shop?: shopsCreateNestedOneWithoutProductsInput
    cart_items?: cart_itemsCreateNestedManyWithoutProductInput
    order_items?: order_itemsCreateNestedManyWithoutProductInput
    reviews?: reviewsCreateNestedManyWithoutProductInput
    product_images?: product_imagesCreateNestedManyWithoutProductInput
    product_specifications?: product_specificationsCreateNestedManyWithoutProductInput
  }

  export type productsUncheckedCreateWithoutProduct_attributesInput = {
    id?: number
    uuid: string
    name: string
    slug: string
    description?: string | null
    old_price?: number | null
    new_price: number
    discount_percentage?: number | null
    stock?: number
    sold?: number
    weight?: number | null
    category_id?: number | null
    shop_id?: number | null
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    cart_items?: cart_itemsUncheckedCreateNestedManyWithoutProductInput
    order_items?: order_itemsUncheckedCreateNestedManyWithoutProductInput
    reviews?: reviewsUncheckedCreateNestedManyWithoutProductInput
    product_images?: product_imagesUncheckedCreateNestedManyWithoutProductInput
    product_specifications?: product_specificationsUncheckedCreateNestedManyWithoutProductInput
  }

  export type productsCreateOrConnectWithoutProduct_attributesInput = {
    where: productsWhereUniqueInput
    create: XOR<productsCreateWithoutProduct_attributesInput, productsUncheckedCreateWithoutProduct_attributesInput>
  }

  export type product_specificationsCreateWithoutProduct_attributesInput = {
    key: string
    value: string
    created_at?: Date | string
    updated_at?: Date | string
    product: productsCreateNestedOneWithoutProduct_specificationsInput
  }

  export type product_specificationsUncheckedCreateWithoutProduct_attributesInput = {
    id?: number
    product_id: number
    key: string
    value: string
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type product_specificationsCreateOrConnectWithoutProduct_attributesInput = {
    where: product_specificationsWhereUniqueInput
    create: XOR<product_specificationsCreateWithoutProduct_attributesInput, product_specificationsUncheckedCreateWithoutProduct_attributesInput>
  }

  export type productsUpsertWithoutProduct_attributesInput = {
    update: XOR<productsUpdateWithoutProduct_attributesInput, productsUncheckedUpdateWithoutProduct_attributesInput>
    create: XOR<productsCreateWithoutProduct_attributesInput, productsUncheckedCreateWithoutProduct_attributesInput>
    where?: productsWhereInput
  }

  export type productsUpdateToOneWithWhereWithoutProduct_attributesInput = {
    where?: productsWhereInput
    data: XOR<productsUpdateWithoutProduct_attributesInput, productsUncheckedUpdateWithoutProduct_attributesInput>
  }

  export type productsUpdateWithoutProduct_attributesInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    old_price?: NullableFloatFieldUpdateOperationsInput | number | null
    new_price?: FloatFieldUpdateOperationsInput | number
    discount_percentage?: NullableFloatFieldUpdateOperationsInput | number | null
    stock?: IntFieldUpdateOperationsInput | number
    sold?: IntFieldUpdateOperationsInput | number
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: categoriesUpdateOneWithoutProductsNestedInput
    shop?: shopsUpdateOneWithoutProductsNestedInput
    cart_items?: cart_itemsUpdateManyWithoutProductNestedInput
    order_items?: order_itemsUpdateManyWithoutProductNestedInput
    reviews?: reviewsUpdateManyWithoutProductNestedInput
    product_images?: product_imagesUpdateManyWithoutProductNestedInput
    product_specifications?: product_specificationsUpdateManyWithoutProductNestedInput
  }

  export type productsUncheckedUpdateWithoutProduct_attributesInput = {
    id?: IntFieldUpdateOperationsInput | number
    uuid?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    old_price?: NullableFloatFieldUpdateOperationsInput | number | null
    new_price?: FloatFieldUpdateOperationsInput | number
    discount_percentage?: NullableFloatFieldUpdateOperationsInput | number | null
    stock?: IntFieldUpdateOperationsInput | number
    sold?: IntFieldUpdateOperationsInput | number
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    category_id?: NullableIntFieldUpdateOperationsInput | number | null
    shop_id?: NullableIntFieldUpdateOperationsInput | number | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    cart_items?: cart_itemsUncheckedUpdateManyWithoutProductNestedInput
    order_items?: order_itemsUncheckedUpdateManyWithoutProductNestedInput
    reviews?: reviewsUncheckedUpdateManyWithoutProductNestedInput
    product_images?: product_imagesUncheckedUpdateManyWithoutProductNestedInput
    product_specifications?: product_specificationsUncheckedUpdateManyWithoutProductNestedInput
  }

  export type product_specificationsUpsertWithoutProduct_attributesInput = {
    update: XOR<product_specificationsUpdateWithoutProduct_attributesInput, product_specificationsUncheckedUpdateWithoutProduct_attributesInput>
    create: XOR<product_specificationsCreateWithoutProduct_attributesInput, product_specificationsUncheckedCreateWithoutProduct_attributesInput>
    where?: product_specificationsWhereInput
  }

  export type product_specificationsUpdateToOneWithWhereWithoutProduct_attributesInput = {
    where?: product_specificationsWhereInput
    data: XOR<product_specificationsUpdateWithoutProduct_attributesInput, product_specificationsUncheckedUpdateWithoutProduct_attributesInput>
  }

  export type product_specificationsUpdateWithoutProduct_attributesInput = {
    key?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    product?: productsUpdateOneRequiredWithoutProduct_specificationsNestedInput
  }

  export type product_specificationsUncheckedUpdateWithoutProduct_attributesInput = {
    id?: IntFieldUpdateOperationsInput | number
    product_id?: IntFieldUpdateOperationsInput | number
    key?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type usersCreateWithoutOrdersInput = {
    uuid: string
    username: string
    email: string
    full_name?: string | null
    password?: string | null
    phone_number?: string | null
    avatar?: string | null
    gender?: boolean | null
    day_of_birth?: string | null
    email_verified_at?: Date | string | null
    last_login?: Date | string | null
    is_public?: boolean
    is_activated?: boolean
    is_deleted?: boolean
    two_factor_enabled?: boolean
    provider?: string
    provider_id?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    role: rolesCreateNestedOneWithoutUsersInput
    addresses?: addressesCreateNestedManyWithoutUserInput
    cart_items?: cart_itemsCreateNestedManyWithoutUserInput
    reviews?: reviewsCreateNestedManyWithoutUserInput
    payments?: paymentsCreateNestedManyWithoutUserInput
    conversations?: conversationsCreateNestedManyWithoutUserInput
    reset_password_token?: reset_password_tokenCreateNestedManyWithoutUserInput
    shops?: shopsCreateNestedManyWithoutSellerInput
    hidden_by_sellers?: seller_hidden_usersCreateNestedManyWithoutSellerInput
    hidden_users?: seller_hidden_usersCreateNestedManyWithoutUserInput
  }

  export type usersUncheckedCreateWithoutOrdersInput = {
    id?: number
    uuid: string
    username: string
    email: string
    full_name?: string | null
    password?: string | null
    phone_number?: string | null
    avatar?: string | null
    gender?: boolean | null
    day_of_birth?: string | null
    email_verified_at?: Date | string | null
    last_login?: Date | string | null
    role_id: number
    is_public?: boolean
    is_activated?: boolean
    is_deleted?: boolean
    two_factor_enabled?: boolean
    provider?: string
    provider_id?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    addresses?: addressesUncheckedCreateNestedManyWithoutUserInput
    cart_items?: cart_itemsUncheckedCreateNestedManyWithoutUserInput
    reviews?: reviewsUncheckedCreateNestedManyWithoutUserInput
    payments?: paymentsUncheckedCreateNestedManyWithoutUserInput
    conversations?: conversationsUncheckedCreateNestedManyWithoutUserInput
    reset_password_token?: reset_password_tokenUncheckedCreateNestedManyWithoutUserInput
    shops?: shopsUncheckedCreateNestedManyWithoutSellerInput
    hidden_by_sellers?: seller_hidden_usersUncheckedCreateNestedManyWithoutSellerInput
    hidden_users?: seller_hidden_usersUncheckedCreateNestedManyWithoutUserInput
  }

  export type usersCreateOrConnectWithoutOrdersInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutOrdersInput, usersUncheckedCreateWithoutOrdersInput>
  }

  export type addressesCreateWithoutOrdersInput = {
    full_name: string
    phone_number: string
    address: string
    province_id?: number | null
    province_name?: string | null
    district_id?: number | null
    district_name?: string | null
    ward_code?: string | null
    ward_name?: string | null
    region_id?: number | null
    type_address?: $Enums.AddressTypeEnum | null
    is_default?: boolean
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    user: usersCreateNestedOneWithoutAddressesInput
    shops?: shopsCreateNestedManyWithoutAddressInput
  }

  export type addressesUncheckedCreateWithoutOrdersInput = {
    id?: number
    user_id: number
    full_name: string
    phone_number: string
    address: string
    province_id?: number | null
    province_name?: string | null
    district_id?: number | null
    district_name?: string | null
    ward_code?: string | null
    ward_name?: string | null
    region_id?: number | null
    type_address?: $Enums.AddressTypeEnum | null
    is_default?: boolean
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    shops?: shopsUncheckedCreateNestedManyWithoutAddressInput
  }

  export type addressesCreateOrConnectWithoutOrdersInput = {
    where: addressesWhereUniqueInput
    create: XOR<addressesCreateWithoutOrdersInput, addressesUncheckedCreateWithoutOrdersInput>
  }

  export type order_itemsCreateWithoutOrderInput = {
    quantity: number
    unit_price: number
    created_at?: Date | string
    updated_at?: Date | string
    product: productsCreateNestedOneWithoutOrder_itemsInput
  }

  export type order_itemsUncheckedCreateWithoutOrderInput = {
    id?: number
    product_id: number
    quantity: number
    unit_price: number
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type order_itemsCreateOrConnectWithoutOrderInput = {
    where: order_itemsWhereUniqueInput
    create: XOR<order_itemsCreateWithoutOrderInput, order_itemsUncheckedCreateWithoutOrderInput>
  }

  export type order_itemsCreateManyOrderInputEnvelope = {
    data: order_itemsCreateManyOrderInput | order_itemsCreateManyOrderInput[]
    skipDuplicates?: boolean
  }

  export type paymentsCreateWithoutOrderInput = {
    uuid: string
    amount: number
    provider: string
    transaction_id?: string | null
    status?: $Enums.PaymentStatusEnum
    items?: NullableJsonNullValueInput | InputJsonValue
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    user: usersCreateNestedOneWithoutPaymentsInput
  }

  export type paymentsUncheckedCreateWithoutOrderInput = {
    id?: number
    uuid: string
    user_id: number
    amount: number
    provider: string
    transaction_id?: string | null
    status?: $Enums.PaymentStatusEnum
    items?: NullableJsonNullValueInput | InputJsonValue
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type paymentsCreateOrConnectWithoutOrderInput = {
    where: paymentsWhereUniqueInput
    create: XOR<paymentsCreateWithoutOrderInput, paymentsUncheckedCreateWithoutOrderInput>
  }

  export type paymentsCreateManyOrderInputEnvelope = {
    data: paymentsCreateManyOrderInput | paymentsCreateManyOrderInput[]
    skipDuplicates?: boolean
  }

  export type usersUpsertWithoutOrdersInput = {
    update: XOR<usersUpdateWithoutOrdersInput, usersUncheckedUpdateWithoutOrdersInput>
    create: XOR<usersCreateWithoutOrdersInput, usersUncheckedCreateWithoutOrdersInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutOrdersInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutOrdersInput, usersUncheckedUpdateWithoutOrdersInput>
  }

  export type usersUpdateWithoutOrdersInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    full_name?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableBoolFieldUpdateOperationsInput | boolean | null
    day_of_birth?: NullableStringFieldUpdateOperationsInput | string | null
    email_verified_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_public?: BoolFieldUpdateOperationsInput | boolean
    is_activated?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    two_factor_enabled?: BoolFieldUpdateOperationsInput | boolean
    provider?: StringFieldUpdateOperationsInput | string
    provider_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: rolesUpdateOneRequiredWithoutUsersNestedInput
    addresses?: addressesUpdateManyWithoutUserNestedInput
    cart_items?: cart_itemsUpdateManyWithoutUserNestedInput
    reviews?: reviewsUpdateManyWithoutUserNestedInput
    payments?: paymentsUpdateManyWithoutUserNestedInput
    conversations?: conversationsUpdateManyWithoutUserNestedInput
    reset_password_token?: reset_password_tokenUpdateManyWithoutUserNestedInput
    shops?: shopsUpdateManyWithoutSellerNestedInput
    hidden_by_sellers?: seller_hidden_usersUpdateManyWithoutSellerNestedInput
    hidden_users?: seller_hidden_usersUpdateManyWithoutUserNestedInput
  }

  export type usersUncheckedUpdateWithoutOrdersInput = {
    id?: IntFieldUpdateOperationsInput | number
    uuid?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    full_name?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableBoolFieldUpdateOperationsInput | boolean | null
    day_of_birth?: NullableStringFieldUpdateOperationsInput | string | null
    email_verified_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    role_id?: IntFieldUpdateOperationsInput | number
    is_public?: BoolFieldUpdateOperationsInput | boolean
    is_activated?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    two_factor_enabled?: BoolFieldUpdateOperationsInput | boolean
    provider?: StringFieldUpdateOperationsInput | string
    provider_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    addresses?: addressesUncheckedUpdateManyWithoutUserNestedInput
    cart_items?: cart_itemsUncheckedUpdateManyWithoutUserNestedInput
    reviews?: reviewsUncheckedUpdateManyWithoutUserNestedInput
    payments?: paymentsUncheckedUpdateManyWithoutUserNestedInput
    conversations?: conversationsUncheckedUpdateManyWithoutUserNestedInput
    reset_password_token?: reset_password_tokenUncheckedUpdateManyWithoutUserNestedInput
    shops?: shopsUncheckedUpdateManyWithoutSellerNestedInput
    hidden_by_sellers?: seller_hidden_usersUncheckedUpdateManyWithoutSellerNestedInput
    hidden_users?: seller_hidden_usersUncheckedUpdateManyWithoutUserNestedInput
  }

  export type addressesUpsertWithoutOrdersInput = {
    update: XOR<addressesUpdateWithoutOrdersInput, addressesUncheckedUpdateWithoutOrdersInput>
    create: XOR<addressesCreateWithoutOrdersInput, addressesUncheckedCreateWithoutOrdersInput>
    where?: addressesWhereInput
  }

  export type addressesUpdateToOneWithWhereWithoutOrdersInput = {
    where?: addressesWhereInput
    data: XOR<addressesUpdateWithoutOrdersInput, addressesUncheckedUpdateWithoutOrdersInput>
  }

  export type addressesUpdateWithoutOrdersInput = {
    full_name?: StringFieldUpdateOperationsInput | string
    phone_number?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    province_id?: NullableIntFieldUpdateOperationsInput | number | null
    province_name?: NullableStringFieldUpdateOperationsInput | string | null
    district_id?: NullableIntFieldUpdateOperationsInput | number | null
    district_name?: NullableStringFieldUpdateOperationsInput | string | null
    ward_code?: NullableStringFieldUpdateOperationsInput | string | null
    ward_name?: NullableStringFieldUpdateOperationsInput | string | null
    region_id?: NullableIntFieldUpdateOperationsInput | number | null
    type_address?: NullableEnumAddressTypeEnumFieldUpdateOperationsInput | $Enums.AddressTypeEnum | null
    is_default?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: usersUpdateOneRequiredWithoutAddressesNestedInput
    shops?: shopsUpdateManyWithoutAddressNestedInput
  }

  export type addressesUncheckedUpdateWithoutOrdersInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    full_name?: StringFieldUpdateOperationsInput | string
    phone_number?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    province_id?: NullableIntFieldUpdateOperationsInput | number | null
    province_name?: NullableStringFieldUpdateOperationsInput | string | null
    district_id?: NullableIntFieldUpdateOperationsInput | number | null
    district_name?: NullableStringFieldUpdateOperationsInput | string | null
    ward_code?: NullableStringFieldUpdateOperationsInput | string | null
    ward_name?: NullableStringFieldUpdateOperationsInput | string | null
    region_id?: NullableIntFieldUpdateOperationsInput | number | null
    type_address?: NullableEnumAddressTypeEnumFieldUpdateOperationsInput | $Enums.AddressTypeEnum | null
    is_default?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    shops?: shopsUncheckedUpdateManyWithoutAddressNestedInput
  }

  export type order_itemsUpsertWithWhereUniqueWithoutOrderInput = {
    where: order_itemsWhereUniqueInput
    update: XOR<order_itemsUpdateWithoutOrderInput, order_itemsUncheckedUpdateWithoutOrderInput>
    create: XOR<order_itemsCreateWithoutOrderInput, order_itemsUncheckedCreateWithoutOrderInput>
  }

  export type order_itemsUpdateWithWhereUniqueWithoutOrderInput = {
    where: order_itemsWhereUniqueInput
    data: XOR<order_itemsUpdateWithoutOrderInput, order_itemsUncheckedUpdateWithoutOrderInput>
  }

  export type order_itemsUpdateManyWithWhereWithoutOrderInput = {
    where: order_itemsScalarWhereInput
    data: XOR<order_itemsUpdateManyMutationInput, order_itemsUncheckedUpdateManyWithoutOrderInput>
  }

  export type paymentsUpsertWithWhereUniqueWithoutOrderInput = {
    where: paymentsWhereUniqueInput
    update: XOR<paymentsUpdateWithoutOrderInput, paymentsUncheckedUpdateWithoutOrderInput>
    create: XOR<paymentsCreateWithoutOrderInput, paymentsUncheckedCreateWithoutOrderInput>
  }

  export type paymentsUpdateWithWhereUniqueWithoutOrderInput = {
    where: paymentsWhereUniqueInput
    data: XOR<paymentsUpdateWithoutOrderInput, paymentsUncheckedUpdateWithoutOrderInput>
  }

  export type paymentsUpdateManyWithWhereWithoutOrderInput = {
    where: paymentsScalarWhereInput
    data: XOR<paymentsUpdateManyMutationInput, paymentsUncheckedUpdateManyWithoutOrderInput>
  }

  export type ordersCreateWithoutOrder_itemsInput = {
    uuid: string
    total_amount: number
    status?: $Enums.OrderStatusEnum
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    user: usersCreateNestedOneWithoutOrdersInput
    address: addressesCreateNestedOneWithoutOrdersInput
    payments?: paymentsCreateNestedManyWithoutOrderInput
  }

  export type ordersUncheckedCreateWithoutOrder_itemsInput = {
    id?: number
    uuid: string
    user_id: number
    address_id: number
    total_amount: number
    status?: $Enums.OrderStatusEnum
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    payments?: paymentsUncheckedCreateNestedManyWithoutOrderInput
  }

  export type ordersCreateOrConnectWithoutOrder_itemsInput = {
    where: ordersWhereUniqueInput
    create: XOR<ordersCreateWithoutOrder_itemsInput, ordersUncheckedCreateWithoutOrder_itemsInput>
  }

  export type productsCreateWithoutOrder_itemsInput = {
    uuid: string
    name: string
    slug: string
    description?: string | null
    old_price?: number | null
    new_price: number
    discount_percentage?: number | null
    stock?: number
    sold?: number
    weight?: number | null
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    category?: categoriesCreateNestedOneWithoutProductsInput
    shop?: shopsCreateNestedOneWithoutProductsInput
    cart_items?: cart_itemsCreateNestedManyWithoutProductInput
    reviews?: reviewsCreateNestedManyWithoutProductInput
    product_images?: product_imagesCreateNestedManyWithoutProductInput
    product_specifications?: product_specificationsCreateNestedManyWithoutProductInput
    product_attributes?: product_attributesCreateNestedManyWithoutProductInput
  }

  export type productsUncheckedCreateWithoutOrder_itemsInput = {
    id?: number
    uuid: string
    name: string
    slug: string
    description?: string | null
    old_price?: number | null
    new_price: number
    discount_percentage?: number | null
    stock?: number
    sold?: number
    weight?: number | null
    category_id?: number | null
    shop_id?: number | null
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    cart_items?: cart_itemsUncheckedCreateNestedManyWithoutProductInput
    reviews?: reviewsUncheckedCreateNestedManyWithoutProductInput
    product_images?: product_imagesUncheckedCreateNestedManyWithoutProductInput
    product_specifications?: product_specificationsUncheckedCreateNestedManyWithoutProductInput
    product_attributes?: product_attributesUncheckedCreateNestedManyWithoutProductInput
  }

  export type productsCreateOrConnectWithoutOrder_itemsInput = {
    where: productsWhereUniqueInput
    create: XOR<productsCreateWithoutOrder_itemsInput, productsUncheckedCreateWithoutOrder_itemsInput>
  }

  export type ordersUpsertWithoutOrder_itemsInput = {
    update: XOR<ordersUpdateWithoutOrder_itemsInput, ordersUncheckedUpdateWithoutOrder_itemsInput>
    create: XOR<ordersCreateWithoutOrder_itemsInput, ordersUncheckedCreateWithoutOrder_itemsInput>
    where?: ordersWhereInput
  }

  export type ordersUpdateToOneWithWhereWithoutOrder_itemsInput = {
    where?: ordersWhereInput
    data: XOR<ordersUpdateWithoutOrder_itemsInput, ordersUncheckedUpdateWithoutOrder_itemsInput>
  }

  export type ordersUpdateWithoutOrder_itemsInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    total_amount?: FloatFieldUpdateOperationsInput | number
    status?: EnumOrderStatusEnumFieldUpdateOperationsInput | $Enums.OrderStatusEnum
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: usersUpdateOneRequiredWithoutOrdersNestedInput
    address?: addressesUpdateOneRequiredWithoutOrdersNestedInput
    payments?: paymentsUpdateManyWithoutOrderNestedInput
  }

  export type ordersUncheckedUpdateWithoutOrder_itemsInput = {
    id?: IntFieldUpdateOperationsInput | number
    uuid?: StringFieldUpdateOperationsInput | string
    user_id?: IntFieldUpdateOperationsInput | number
    address_id?: IntFieldUpdateOperationsInput | number
    total_amount?: FloatFieldUpdateOperationsInput | number
    status?: EnumOrderStatusEnumFieldUpdateOperationsInput | $Enums.OrderStatusEnum
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    payments?: paymentsUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type productsUpsertWithoutOrder_itemsInput = {
    update: XOR<productsUpdateWithoutOrder_itemsInput, productsUncheckedUpdateWithoutOrder_itemsInput>
    create: XOR<productsCreateWithoutOrder_itemsInput, productsUncheckedCreateWithoutOrder_itemsInput>
    where?: productsWhereInput
  }

  export type productsUpdateToOneWithWhereWithoutOrder_itemsInput = {
    where?: productsWhereInput
    data: XOR<productsUpdateWithoutOrder_itemsInput, productsUncheckedUpdateWithoutOrder_itemsInput>
  }

  export type productsUpdateWithoutOrder_itemsInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    old_price?: NullableFloatFieldUpdateOperationsInput | number | null
    new_price?: FloatFieldUpdateOperationsInput | number
    discount_percentage?: NullableFloatFieldUpdateOperationsInput | number | null
    stock?: IntFieldUpdateOperationsInput | number
    sold?: IntFieldUpdateOperationsInput | number
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: categoriesUpdateOneWithoutProductsNestedInput
    shop?: shopsUpdateOneWithoutProductsNestedInput
    cart_items?: cart_itemsUpdateManyWithoutProductNestedInput
    reviews?: reviewsUpdateManyWithoutProductNestedInput
    product_images?: product_imagesUpdateManyWithoutProductNestedInput
    product_specifications?: product_specificationsUpdateManyWithoutProductNestedInput
    product_attributes?: product_attributesUpdateManyWithoutProductNestedInput
  }

  export type productsUncheckedUpdateWithoutOrder_itemsInput = {
    id?: IntFieldUpdateOperationsInput | number
    uuid?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    old_price?: NullableFloatFieldUpdateOperationsInput | number | null
    new_price?: FloatFieldUpdateOperationsInput | number
    discount_percentage?: NullableFloatFieldUpdateOperationsInput | number | null
    stock?: IntFieldUpdateOperationsInput | number
    sold?: IntFieldUpdateOperationsInput | number
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    category_id?: NullableIntFieldUpdateOperationsInput | number | null
    shop_id?: NullableIntFieldUpdateOperationsInput | number | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    cart_items?: cart_itemsUncheckedUpdateManyWithoutProductNestedInput
    reviews?: reviewsUncheckedUpdateManyWithoutProductNestedInput
    product_images?: product_imagesUncheckedUpdateManyWithoutProductNestedInput
    product_specifications?: product_specificationsUncheckedUpdateManyWithoutProductNestedInput
    product_attributes?: product_attributesUncheckedUpdateManyWithoutProductNestedInput
  }

  export type usersCreateWithoutCart_itemsInput = {
    uuid: string
    username: string
    email: string
    full_name?: string | null
    password?: string | null
    phone_number?: string | null
    avatar?: string | null
    gender?: boolean | null
    day_of_birth?: string | null
    email_verified_at?: Date | string | null
    last_login?: Date | string | null
    is_public?: boolean
    is_activated?: boolean
    is_deleted?: boolean
    two_factor_enabled?: boolean
    provider?: string
    provider_id?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    role: rolesCreateNestedOneWithoutUsersInput
    addresses?: addressesCreateNestedManyWithoutUserInput
    orders?: ordersCreateNestedManyWithoutUserInput
    reviews?: reviewsCreateNestedManyWithoutUserInput
    payments?: paymentsCreateNestedManyWithoutUserInput
    conversations?: conversationsCreateNestedManyWithoutUserInput
    reset_password_token?: reset_password_tokenCreateNestedManyWithoutUserInput
    shops?: shopsCreateNestedManyWithoutSellerInput
    hidden_by_sellers?: seller_hidden_usersCreateNestedManyWithoutSellerInput
    hidden_users?: seller_hidden_usersCreateNestedManyWithoutUserInput
  }

  export type usersUncheckedCreateWithoutCart_itemsInput = {
    id?: number
    uuid: string
    username: string
    email: string
    full_name?: string | null
    password?: string | null
    phone_number?: string | null
    avatar?: string | null
    gender?: boolean | null
    day_of_birth?: string | null
    email_verified_at?: Date | string | null
    last_login?: Date | string | null
    role_id: number
    is_public?: boolean
    is_activated?: boolean
    is_deleted?: boolean
    two_factor_enabled?: boolean
    provider?: string
    provider_id?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    addresses?: addressesUncheckedCreateNestedManyWithoutUserInput
    orders?: ordersUncheckedCreateNestedManyWithoutUserInput
    reviews?: reviewsUncheckedCreateNestedManyWithoutUserInput
    payments?: paymentsUncheckedCreateNestedManyWithoutUserInput
    conversations?: conversationsUncheckedCreateNestedManyWithoutUserInput
    reset_password_token?: reset_password_tokenUncheckedCreateNestedManyWithoutUserInput
    shops?: shopsUncheckedCreateNestedManyWithoutSellerInput
    hidden_by_sellers?: seller_hidden_usersUncheckedCreateNestedManyWithoutSellerInput
    hidden_users?: seller_hidden_usersUncheckedCreateNestedManyWithoutUserInput
  }

  export type usersCreateOrConnectWithoutCart_itemsInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutCart_itemsInput, usersUncheckedCreateWithoutCart_itemsInput>
  }

  export type productsCreateWithoutCart_itemsInput = {
    uuid: string
    name: string
    slug: string
    description?: string | null
    old_price?: number | null
    new_price: number
    discount_percentage?: number | null
    stock?: number
    sold?: number
    weight?: number | null
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    category?: categoriesCreateNestedOneWithoutProductsInput
    shop?: shopsCreateNestedOneWithoutProductsInput
    order_items?: order_itemsCreateNestedManyWithoutProductInput
    reviews?: reviewsCreateNestedManyWithoutProductInput
    product_images?: product_imagesCreateNestedManyWithoutProductInput
    product_specifications?: product_specificationsCreateNestedManyWithoutProductInput
    product_attributes?: product_attributesCreateNestedManyWithoutProductInput
  }

  export type productsUncheckedCreateWithoutCart_itemsInput = {
    id?: number
    uuid: string
    name: string
    slug: string
    description?: string | null
    old_price?: number | null
    new_price: number
    discount_percentage?: number | null
    stock?: number
    sold?: number
    weight?: number | null
    category_id?: number | null
    shop_id?: number | null
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    order_items?: order_itemsUncheckedCreateNestedManyWithoutProductInput
    reviews?: reviewsUncheckedCreateNestedManyWithoutProductInput
    product_images?: product_imagesUncheckedCreateNestedManyWithoutProductInput
    product_specifications?: product_specificationsUncheckedCreateNestedManyWithoutProductInput
    product_attributes?: product_attributesUncheckedCreateNestedManyWithoutProductInput
  }

  export type productsCreateOrConnectWithoutCart_itemsInput = {
    where: productsWhereUniqueInput
    create: XOR<productsCreateWithoutCart_itemsInput, productsUncheckedCreateWithoutCart_itemsInput>
  }

  export type usersUpsertWithoutCart_itemsInput = {
    update: XOR<usersUpdateWithoutCart_itemsInput, usersUncheckedUpdateWithoutCart_itemsInput>
    create: XOR<usersCreateWithoutCart_itemsInput, usersUncheckedCreateWithoutCart_itemsInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutCart_itemsInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutCart_itemsInput, usersUncheckedUpdateWithoutCart_itemsInput>
  }

  export type usersUpdateWithoutCart_itemsInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    full_name?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableBoolFieldUpdateOperationsInput | boolean | null
    day_of_birth?: NullableStringFieldUpdateOperationsInput | string | null
    email_verified_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_public?: BoolFieldUpdateOperationsInput | boolean
    is_activated?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    two_factor_enabled?: BoolFieldUpdateOperationsInput | boolean
    provider?: StringFieldUpdateOperationsInput | string
    provider_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: rolesUpdateOneRequiredWithoutUsersNestedInput
    addresses?: addressesUpdateManyWithoutUserNestedInput
    orders?: ordersUpdateManyWithoutUserNestedInput
    reviews?: reviewsUpdateManyWithoutUserNestedInput
    payments?: paymentsUpdateManyWithoutUserNestedInput
    conversations?: conversationsUpdateManyWithoutUserNestedInput
    reset_password_token?: reset_password_tokenUpdateManyWithoutUserNestedInput
    shops?: shopsUpdateManyWithoutSellerNestedInput
    hidden_by_sellers?: seller_hidden_usersUpdateManyWithoutSellerNestedInput
    hidden_users?: seller_hidden_usersUpdateManyWithoutUserNestedInput
  }

  export type usersUncheckedUpdateWithoutCart_itemsInput = {
    id?: IntFieldUpdateOperationsInput | number
    uuid?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    full_name?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableBoolFieldUpdateOperationsInput | boolean | null
    day_of_birth?: NullableStringFieldUpdateOperationsInput | string | null
    email_verified_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    role_id?: IntFieldUpdateOperationsInput | number
    is_public?: BoolFieldUpdateOperationsInput | boolean
    is_activated?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    two_factor_enabled?: BoolFieldUpdateOperationsInput | boolean
    provider?: StringFieldUpdateOperationsInput | string
    provider_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    addresses?: addressesUncheckedUpdateManyWithoutUserNestedInput
    orders?: ordersUncheckedUpdateManyWithoutUserNestedInput
    reviews?: reviewsUncheckedUpdateManyWithoutUserNestedInput
    payments?: paymentsUncheckedUpdateManyWithoutUserNestedInput
    conversations?: conversationsUncheckedUpdateManyWithoutUserNestedInput
    reset_password_token?: reset_password_tokenUncheckedUpdateManyWithoutUserNestedInput
    shops?: shopsUncheckedUpdateManyWithoutSellerNestedInput
    hidden_by_sellers?: seller_hidden_usersUncheckedUpdateManyWithoutSellerNestedInput
    hidden_users?: seller_hidden_usersUncheckedUpdateManyWithoutUserNestedInput
  }

  export type productsUpsertWithoutCart_itemsInput = {
    update: XOR<productsUpdateWithoutCart_itemsInput, productsUncheckedUpdateWithoutCart_itemsInput>
    create: XOR<productsCreateWithoutCart_itemsInput, productsUncheckedCreateWithoutCart_itemsInput>
    where?: productsWhereInput
  }

  export type productsUpdateToOneWithWhereWithoutCart_itemsInput = {
    where?: productsWhereInput
    data: XOR<productsUpdateWithoutCart_itemsInput, productsUncheckedUpdateWithoutCart_itemsInput>
  }

  export type productsUpdateWithoutCart_itemsInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    old_price?: NullableFloatFieldUpdateOperationsInput | number | null
    new_price?: FloatFieldUpdateOperationsInput | number
    discount_percentage?: NullableFloatFieldUpdateOperationsInput | number | null
    stock?: IntFieldUpdateOperationsInput | number
    sold?: IntFieldUpdateOperationsInput | number
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: categoriesUpdateOneWithoutProductsNestedInput
    shop?: shopsUpdateOneWithoutProductsNestedInput
    order_items?: order_itemsUpdateManyWithoutProductNestedInput
    reviews?: reviewsUpdateManyWithoutProductNestedInput
    product_images?: product_imagesUpdateManyWithoutProductNestedInput
    product_specifications?: product_specificationsUpdateManyWithoutProductNestedInput
    product_attributes?: product_attributesUpdateManyWithoutProductNestedInput
  }

  export type productsUncheckedUpdateWithoutCart_itemsInput = {
    id?: IntFieldUpdateOperationsInput | number
    uuid?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    old_price?: NullableFloatFieldUpdateOperationsInput | number | null
    new_price?: FloatFieldUpdateOperationsInput | number
    discount_percentage?: NullableFloatFieldUpdateOperationsInput | number | null
    stock?: IntFieldUpdateOperationsInput | number
    sold?: IntFieldUpdateOperationsInput | number
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    category_id?: NullableIntFieldUpdateOperationsInput | number | null
    shop_id?: NullableIntFieldUpdateOperationsInput | number | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    order_items?: order_itemsUncheckedUpdateManyWithoutProductNestedInput
    reviews?: reviewsUncheckedUpdateManyWithoutProductNestedInput
    product_images?: product_imagesUncheckedUpdateManyWithoutProductNestedInput
    product_specifications?: product_specificationsUncheckedUpdateManyWithoutProductNestedInput
    product_attributes?: product_attributesUncheckedUpdateManyWithoutProductNestedInput
  }

  export type usersCreateWithoutReviewsInput = {
    uuid: string
    username: string
    email: string
    full_name?: string | null
    password?: string | null
    phone_number?: string | null
    avatar?: string | null
    gender?: boolean | null
    day_of_birth?: string | null
    email_verified_at?: Date | string | null
    last_login?: Date | string | null
    is_public?: boolean
    is_activated?: boolean
    is_deleted?: boolean
    two_factor_enabled?: boolean
    provider?: string
    provider_id?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    role: rolesCreateNestedOneWithoutUsersInput
    addresses?: addressesCreateNestedManyWithoutUserInput
    orders?: ordersCreateNestedManyWithoutUserInput
    cart_items?: cart_itemsCreateNestedManyWithoutUserInput
    payments?: paymentsCreateNestedManyWithoutUserInput
    conversations?: conversationsCreateNestedManyWithoutUserInput
    reset_password_token?: reset_password_tokenCreateNestedManyWithoutUserInput
    shops?: shopsCreateNestedManyWithoutSellerInput
    hidden_by_sellers?: seller_hidden_usersCreateNestedManyWithoutSellerInput
    hidden_users?: seller_hidden_usersCreateNestedManyWithoutUserInput
  }

  export type usersUncheckedCreateWithoutReviewsInput = {
    id?: number
    uuid: string
    username: string
    email: string
    full_name?: string | null
    password?: string | null
    phone_number?: string | null
    avatar?: string | null
    gender?: boolean | null
    day_of_birth?: string | null
    email_verified_at?: Date | string | null
    last_login?: Date | string | null
    role_id: number
    is_public?: boolean
    is_activated?: boolean
    is_deleted?: boolean
    two_factor_enabled?: boolean
    provider?: string
    provider_id?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    addresses?: addressesUncheckedCreateNestedManyWithoutUserInput
    orders?: ordersUncheckedCreateNestedManyWithoutUserInput
    cart_items?: cart_itemsUncheckedCreateNestedManyWithoutUserInput
    payments?: paymentsUncheckedCreateNestedManyWithoutUserInput
    conversations?: conversationsUncheckedCreateNestedManyWithoutUserInput
    reset_password_token?: reset_password_tokenUncheckedCreateNestedManyWithoutUserInput
    shops?: shopsUncheckedCreateNestedManyWithoutSellerInput
    hidden_by_sellers?: seller_hidden_usersUncheckedCreateNestedManyWithoutSellerInput
    hidden_users?: seller_hidden_usersUncheckedCreateNestedManyWithoutUserInput
  }

  export type usersCreateOrConnectWithoutReviewsInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutReviewsInput, usersUncheckedCreateWithoutReviewsInput>
  }

  export type productsCreateWithoutReviewsInput = {
    uuid: string
    name: string
    slug: string
    description?: string | null
    old_price?: number | null
    new_price: number
    discount_percentage?: number | null
    stock?: number
    sold?: number
    weight?: number | null
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    category?: categoriesCreateNestedOneWithoutProductsInput
    shop?: shopsCreateNestedOneWithoutProductsInput
    cart_items?: cart_itemsCreateNestedManyWithoutProductInput
    order_items?: order_itemsCreateNestedManyWithoutProductInput
    product_images?: product_imagesCreateNestedManyWithoutProductInput
    product_specifications?: product_specificationsCreateNestedManyWithoutProductInput
    product_attributes?: product_attributesCreateNestedManyWithoutProductInput
  }

  export type productsUncheckedCreateWithoutReviewsInput = {
    id?: number
    uuid: string
    name: string
    slug: string
    description?: string | null
    old_price?: number | null
    new_price: number
    discount_percentage?: number | null
    stock?: number
    sold?: number
    weight?: number | null
    category_id?: number | null
    shop_id?: number | null
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    cart_items?: cart_itemsUncheckedCreateNestedManyWithoutProductInput
    order_items?: order_itemsUncheckedCreateNestedManyWithoutProductInput
    product_images?: product_imagesUncheckedCreateNestedManyWithoutProductInput
    product_specifications?: product_specificationsUncheckedCreateNestedManyWithoutProductInput
    product_attributes?: product_attributesUncheckedCreateNestedManyWithoutProductInput
  }

  export type productsCreateOrConnectWithoutReviewsInput = {
    where: productsWhereUniqueInput
    create: XOR<productsCreateWithoutReviewsInput, productsUncheckedCreateWithoutReviewsInput>
  }

  export type usersUpsertWithoutReviewsInput = {
    update: XOR<usersUpdateWithoutReviewsInput, usersUncheckedUpdateWithoutReviewsInput>
    create: XOR<usersCreateWithoutReviewsInput, usersUncheckedCreateWithoutReviewsInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutReviewsInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutReviewsInput, usersUncheckedUpdateWithoutReviewsInput>
  }

  export type usersUpdateWithoutReviewsInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    full_name?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableBoolFieldUpdateOperationsInput | boolean | null
    day_of_birth?: NullableStringFieldUpdateOperationsInput | string | null
    email_verified_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_public?: BoolFieldUpdateOperationsInput | boolean
    is_activated?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    two_factor_enabled?: BoolFieldUpdateOperationsInput | boolean
    provider?: StringFieldUpdateOperationsInput | string
    provider_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: rolesUpdateOneRequiredWithoutUsersNestedInput
    addresses?: addressesUpdateManyWithoutUserNestedInput
    orders?: ordersUpdateManyWithoutUserNestedInput
    cart_items?: cart_itemsUpdateManyWithoutUserNestedInput
    payments?: paymentsUpdateManyWithoutUserNestedInput
    conversations?: conversationsUpdateManyWithoutUserNestedInput
    reset_password_token?: reset_password_tokenUpdateManyWithoutUserNestedInput
    shops?: shopsUpdateManyWithoutSellerNestedInput
    hidden_by_sellers?: seller_hidden_usersUpdateManyWithoutSellerNestedInput
    hidden_users?: seller_hidden_usersUpdateManyWithoutUserNestedInput
  }

  export type usersUncheckedUpdateWithoutReviewsInput = {
    id?: IntFieldUpdateOperationsInput | number
    uuid?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    full_name?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableBoolFieldUpdateOperationsInput | boolean | null
    day_of_birth?: NullableStringFieldUpdateOperationsInput | string | null
    email_verified_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    role_id?: IntFieldUpdateOperationsInput | number
    is_public?: BoolFieldUpdateOperationsInput | boolean
    is_activated?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    two_factor_enabled?: BoolFieldUpdateOperationsInput | boolean
    provider?: StringFieldUpdateOperationsInput | string
    provider_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    addresses?: addressesUncheckedUpdateManyWithoutUserNestedInput
    orders?: ordersUncheckedUpdateManyWithoutUserNestedInput
    cart_items?: cart_itemsUncheckedUpdateManyWithoutUserNestedInput
    payments?: paymentsUncheckedUpdateManyWithoutUserNestedInput
    conversations?: conversationsUncheckedUpdateManyWithoutUserNestedInput
    reset_password_token?: reset_password_tokenUncheckedUpdateManyWithoutUserNestedInput
    shops?: shopsUncheckedUpdateManyWithoutSellerNestedInput
    hidden_by_sellers?: seller_hidden_usersUncheckedUpdateManyWithoutSellerNestedInput
    hidden_users?: seller_hidden_usersUncheckedUpdateManyWithoutUserNestedInput
  }

  export type productsUpsertWithoutReviewsInput = {
    update: XOR<productsUpdateWithoutReviewsInput, productsUncheckedUpdateWithoutReviewsInput>
    create: XOR<productsCreateWithoutReviewsInput, productsUncheckedCreateWithoutReviewsInput>
    where?: productsWhereInput
  }

  export type productsUpdateToOneWithWhereWithoutReviewsInput = {
    where?: productsWhereInput
    data: XOR<productsUpdateWithoutReviewsInput, productsUncheckedUpdateWithoutReviewsInput>
  }

  export type productsUpdateWithoutReviewsInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    old_price?: NullableFloatFieldUpdateOperationsInput | number | null
    new_price?: FloatFieldUpdateOperationsInput | number
    discount_percentage?: NullableFloatFieldUpdateOperationsInput | number | null
    stock?: IntFieldUpdateOperationsInput | number
    sold?: IntFieldUpdateOperationsInput | number
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: categoriesUpdateOneWithoutProductsNestedInput
    shop?: shopsUpdateOneWithoutProductsNestedInput
    cart_items?: cart_itemsUpdateManyWithoutProductNestedInput
    order_items?: order_itemsUpdateManyWithoutProductNestedInput
    product_images?: product_imagesUpdateManyWithoutProductNestedInput
    product_specifications?: product_specificationsUpdateManyWithoutProductNestedInput
    product_attributes?: product_attributesUpdateManyWithoutProductNestedInput
  }

  export type productsUncheckedUpdateWithoutReviewsInput = {
    id?: IntFieldUpdateOperationsInput | number
    uuid?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    old_price?: NullableFloatFieldUpdateOperationsInput | number | null
    new_price?: FloatFieldUpdateOperationsInput | number
    discount_percentage?: NullableFloatFieldUpdateOperationsInput | number | null
    stock?: IntFieldUpdateOperationsInput | number
    sold?: IntFieldUpdateOperationsInput | number
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    category_id?: NullableIntFieldUpdateOperationsInput | number | null
    shop_id?: NullableIntFieldUpdateOperationsInput | number | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    cart_items?: cart_itemsUncheckedUpdateManyWithoutProductNestedInput
    order_items?: order_itemsUncheckedUpdateManyWithoutProductNestedInput
    product_images?: product_imagesUncheckedUpdateManyWithoutProductNestedInput
    product_specifications?: product_specificationsUncheckedUpdateManyWithoutProductNestedInput
    product_attributes?: product_attributesUncheckedUpdateManyWithoutProductNestedInput
  }

  export type ordersCreateWithoutPaymentsInput = {
    uuid: string
    total_amount: number
    status?: $Enums.OrderStatusEnum
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    user: usersCreateNestedOneWithoutOrdersInput
    address: addressesCreateNestedOneWithoutOrdersInput
    order_items?: order_itemsCreateNestedManyWithoutOrderInput
  }

  export type ordersUncheckedCreateWithoutPaymentsInput = {
    id?: number
    uuid: string
    user_id: number
    address_id: number
    total_amount: number
    status?: $Enums.OrderStatusEnum
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    order_items?: order_itemsUncheckedCreateNestedManyWithoutOrderInput
  }

  export type ordersCreateOrConnectWithoutPaymentsInput = {
    where: ordersWhereUniqueInput
    create: XOR<ordersCreateWithoutPaymentsInput, ordersUncheckedCreateWithoutPaymentsInput>
  }

  export type usersCreateWithoutPaymentsInput = {
    uuid: string
    username: string
    email: string
    full_name?: string | null
    password?: string | null
    phone_number?: string | null
    avatar?: string | null
    gender?: boolean | null
    day_of_birth?: string | null
    email_verified_at?: Date | string | null
    last_login?: Date | string | null
    is_public?: boolean
    is_activated?: boolean
    is_deleted?: boolean
    two_factor_enabled?: boolean
    provider?: string
    provider_id?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    role: rolesCreateNestedOneWithoutUsersInput
    addresses?: addressesCreateNestedManyWithoutUserInput
    orders?: ordersCreateNestedManyWithoutUserInput
    cart_items?: cart_itemsCreateNestedManyWithoutUserInput
    reviews?: reviewsCreateNestedManyWithoutUserInput
    conversations?: conversationsCreateNestedManyWithoutUserInput
    reset_password_token?: reset_password_tokenCreateNestedManyWithoutUserInput
    shops?: shopsCreateNestedManyWithoutSellerInput
    hidden_by_sellers?: seller_hidden_usersCreateNestedManyWithoutSellerInput
    hidden_users?: seller_hidden_usersCreateNestedManyWithoutUserInput
  }

  export type usersUncheckedCreateWithoutPaymentsInput = {
    id?: number
    uuid: string
    username: string
    email: string
    full_name?: string | null
    password?: string | null
    phone_number?: string | null
    avatar?: string | null
    gender?: boolean | null
    day_of_birth?: string | null
    email_verified_at?: Date | string | null
    last_login?: Date | string | null
    role_id: number
    is_public?: boolean
    is_activated?: boolean
    is_deleted?: boolean
    two_factor_enabled?: boolean
    provider?: string
    provider_id?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    addresses?: addressesUncheckedCreateNestedManyWithoutUserInput
    orders?: ordersUncheckedCreateNestedManyWithoutUserInput
    cart_items?: cart_itemsUncheckedCreateNestedManyWithoutUserInput
    reviews?: reviewsUncheckedCreateNestedManyWithoutUserInput
    conversations?: conversationsUncheckedCreateNestedManyWithoutUserInput
    reset_password_token?: reset_password_tokenUncheckedCreateNestedManyWithoutUserInput
    shops?: shopsUncheckedCreateNestedManyWithoutSellerInput
    hidden_by_sellers?: seller_hidden_usersUncheckedCreateNestedManyWithoutSellerInput
    hidden_users?: seller_hidden_usersUncheckedCreateNestedManyWithoutUserInput
  }

  export type usersCreateOrConnectWithoutPaymentsInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutPaymentsInput, usersUncheckedCreateWithoutPaymentsInput>
  }

  export type ordersUpsertWithoutPaymentsInput = {
    update: XOR<ordersUpdateWithoutPaymentsInput, ordersUncheckedUpdateWithoutPaymentsInput>
    create: XOR<ordersCreateWithoutPaymentsInput, ordersUncheckedCreateWithoutPaymentsInput>
    where?: ordersWhereInput
  }

  export type ordersUpdateToOneWithWhereWithoutPaymentsInput = {
    where?: ordersWhereInput
    data: XOR<ordersUpdateWithoutPaymentsInput, ordersUncheckedUpdateWithoutPaymentsInput>
  }

  export type ordersUpdateWithoutPaymentsInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    total_amount?: FloatFieldUpdateOperationsInput | number
    status?: EnumOrderStatusEnumFieldUpdateOperationsInput | $Enums.OrderStatusEnum
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: usersUpdateOneRequiredWithoutOrdersNestedInput
    address?: addressesUpdateOneRequiredWithoutOrdersNestedInput
    order_items?: order_itemsUpdateManyWithoutOrderNestedInput
  }

  export type ordersUncheckedUpdateWithoutPaymentsInput = {
    id?: IntFieldUpdateOperationsInput | number
    uuid?: StringFieldUpdateOperationsInput | string
    user_id?: IntFieldUpdateOperationsInput | number
    address_id?: IntFieldUpdateOperationsInput | number
    total_amount?: FloatFieldUpdateOperationsInput | number
    status?: EnumOrderStatusEnumFieldUpdateOperationsInput | $Enums.OrderStatusEnum
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    order_items?: order_itemsUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type usersUpsertWithoutPaymentsInput = {
    update: XOR<usersUpdateWithoutPaymentsInput, usersUncheckedUpdateWithoutPaymentsInput>
    create: XOR<usersCreateWithoutPaymentsInput, usersUncheckedCreateWithoutPaymentsInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutPaymentsInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutPaymentsInput, usersUncheckedUpdateWithoutPaymentsInput>
  }

  export type usersUpdateWithoutPaymentsInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    full_name?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableBoolFieldUpdateOperationsInput | boolean | null
    day_of_birth?: NullableStringFieldUpdateOperationsInput | string | null
    email_verified_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_public?: BoolFieldUpdateOperationsInput | boolean
    is_activated?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    two_factor_enabled?: BoolFieldUpdateOperationsInput | boolean
    provider?: StringFieldUpdateOperationsInput | string
    provider_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: rolesUpdateOneRequiredWithoutUsersNestedInput
    addresses?: addressesUpdateManyWithoutUserNestedInput
    orders?: ordersUpdateManyWithoutUserNestedInput
    cart_items?: cart_itemsUpdateManyWithoutUserNestedInput
    reviews?: reviewsUpdateManyWithoutUserNestedInput
    conversations?: conversationsUpdateManyWithoutUserNestedInput
    reset_password_token?: reset_password_tokenUpdateManyWithoutUserNestedInput
    shops?: shopsUpdateManyWithoutSellerNestedInput
    hidden_by_sellers?: seller_hidden_usersUpdateManyWithoutSellerNestedInput
    hidden_users?: seller_hidden_usersUpdateManyWithoutUserNestedInput
  }

  export type usersUncheckedUpdateWithoutPaymentsInput = {
    id?: IntFieldUpdateOperationsInput | number
    uuid?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    full_name?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableBoolFieldUpdateOperationsInput | boolean | null
    day_of_birth?: NullableStringFieldUpdateOperationsInput | string | null
    email_verified_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    role_id?: IntFieldUpdateOperationsInput | number
    is_public?: BoolFieldUpdateOperationsInput | boolean
    is_activated?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    two_factor_enabled?: BoolFieldUpdateOperationsInput | boolean
    provider?: StringFieldUpdateOperationsInput | string
    provider_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    addresses?: addressesUncheckedUpdateManyWithoutUserNestedInput
    orders?: ordersUncheckedUpdateManyWithoutUserNestedInput
    cart_items?: cart_itemsUncheckedUpdateManyWithoutUserNestedInput
    reviews?: reviewsUncheckedUpdateManyWithoutUserNestedInput
    conversations?: conversationsUncheckedUpdateManyWithoutUserNestedInput
    reset_password_token?: reset_password_tokenUncheckedUpdateManyWithoutUserNestedInput
    shops?: shopsUncheckedUpdateManyWithoutSellerNestedInput
    hidden_by_sellers?: seller_hidden_usersUncheckedUpdateManyWithoutSellerNestedInput
    hidden_users?: seller_hidden_usersUncheckedUpdateManyWithoutUserNestedInput
  }

  export type usersCreateWithoutConversationsInput = {
    uuid: string
    username: string
    email: string
    full_name?: string | null
    password?: string | null
    phone_number?: string | null
    avatar?: string | null
    gender?: boolean | null
    day_of_birth?: string | null
    email_verified_at?: Date | string | null
    last_login?: Date | string | null
    is_public?: boolean
    is_activated?: boolean
    is_deleted?: boolean
    two_factor_enabled?: boolean
    provider?: string
    provider_id?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    role: rolesCreateNestedOneWithoutUsersInput
    addresses?: addressesCreateNestedManyWithoutUserInput
    orders?: ordersCreateNestedManyWithoutUserInput
    cart_items?: cart_itemsCreateNestedManyWithoutUserInput
    reviews?: reviewsCreateNestedManyWithoutUserInput
    payments?: paymentsCreateNestedManyWithoutUserInput
    reset_password_token?: reset_password_tokenCreateNestedManyWithoutUserInput
    shops?: shopsCreateNestedManyWithoutSellerInput
    hidden_by_sellers?: seller_hidden_usersCreateNestedManyWithoutSellerInput
    hidden_users?: seller_hidden_usersCreateNestedManyWithoutUserInput
  }

  export type usersUncheckedCreateWithoutConversationsInput = {
    id?: number
    uuid: string
    username: string
    email: string
    full_name?: string | null
    password?: string | null
    phone_number?: string | null
    avatar?: string | null
    gender?: boolean | null
    day_of_birth?: string | null
    email_verified_at?: Date | string | null
    last_login?: Date | string | null
    role_id: number
    is_public?: boolean
    is_activated?: boolean
    is_deleted?: boolean
    two_factor_enabled?: boolean
    provider?: string
    provider_id?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    addresses?: addressesUncheckedCreateNestedManyWithoutUserInput
    orders?: ordersUncheckedCreateNestedManyWithoutUserInput
    cart_items?: cart_itemsUncheckedCreateNestedManyWithoutUserInput
    reviews?: reviewsUncheckedCreateNestedManyWithoutUserInput
    payments?: paymentsUncheckedCreateNestedManyWithoutUserInput
    reset_password_token?: reset_password_tokenUncheckedCreateNestedManyWithoutUserInput
    shops?: shopsUncheckedCreateNestedManyWithoutSellerInput
    hidden_by_sellers?: seller_hidden_usersUncheckedCreateNestedManyWithoutSellerInput
    hidden_users?: seller_hidden_usersUncheckedCreateNestedManyWithoutUserInput
  }

  export type usersCreateOrConnectWithoutConversationsInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutConversationsInput, usersUncheckedCreateWithoutConversationsInput>
  }

  export type messagesCreateWithoutConversationInput = {
    sender: string
    message: string
    created_at?: Date | string
  }

  export type messagesUncheckedCreateWithoutConversationInput = {
    id?: number
    sender: string
    message: string
    created_at?: Date | string
  }

  export type messagesCreateOrConnectWithoutConversationInput = {
    where: messagesWhereUniqueInput
    create: XOR<messagesCreateWithoutConversationInput, messagesUncheckedCreateWithoutConversationInput>
  }

  export type messagesCreateManyConversationInputEnvelope = {
    data: messagesCreateManyConversationInput | messagesCreateManyConversationInput[]
    skipDuplicates?: boolean
  }

  export type usersUpsertWithoutConversationsInput = {
    update: XOR<usersUpdateWithoutConversationsInput, usersUncheckedUpdateWithoutConversationsInput>
    create: XOR<usersCreateWithoutConversationsInput, usersUncheckedCreateWithoutConversationsInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutConversationsInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutConversationsInput, usersUncheckedUpdateWithoutConversationsInput>
  }

  export type usersUpdateWithoutConversationsInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    full_name?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableBoolFieldUpdateOperationsInput | boolean | null
    day_of_birth?: NullableStringFieldUpdateOperationsInput | string | null
    email_verified_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_public?: BoolFieldUpdateOperationsInput | boolean
    is_activated?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    two_factor_enabled?: BoolFieldUpdateOperationsInput | boolean
    provider?: StringFieldUpdateOperationsInput | string
    provider_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: rolesUpdateOneRequiredWithoutUsersNestedInput
    addresses?: addressesUpdateManyWithoutUserNestedInput
    orders?: ordersUpdateManyWithoutUserNestedInput
    cart_items?: cart_itemsUpdateManyWithoutUserNestedInput
    reviews?: reviewsUpdateManyWithoutUserNestedInput
    payments?: paymentsUpdateManyWithoutUserNestedInput
    reset_password_token?: reset_password_tokenUpdateManyWithoutUserNestedInput
    shops?: shopsUpdateManyWithoutSellerNestedInput
    hidden_by_sellers?: seller_hidden_usersUpdateManyWithoutSellerNestedInput
    hidden_users?: seller_hidden_usersUpdateManyWithoutUserNestedInput
  }

  export type usersUncheckedUpdateWithoutConversationsInput = {
    id?: IntFieldUpdateOperationsInput | number
    uuid?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    full_name?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableBoolFieldUpdateOperationsInput | boolean | null
    day_of_birth?: NullableStringFieldUpdateOperationsInput | string | null
    email_verified_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    role_id?: IntFieldUpdateOperationsInput | number
    is_public?: BoolFieldUpdateOperationsInput | boolean
    is_activated?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    two_factor_enabled?: BoolFieldUpdateOperationsInput | boolean
    provider?: StringFieldUpdateOperationsInput | string
    provider_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    addresses?: addressesUncheckedUpdateManyWithoutUserNestedInput
    orders?: ordersUncheckedUpdateManyWithoutUserNestedInput
    cart_items?: cart_itemsUncheckedUpdateManyWithoutUserNestedInput
    reviews?: reviewsUncheckedUpdateManyWithoutUserNestedInput
    payments?: paymentsUncheckedUpdateManyWithoutUserNestedInput
    reset_password_token?: reset_password_tokenUncheckedUpdateManyWithoutUserNestedInput
    shops?: shopsUncheckedUpdateManyWithoutSellerNestedInput
    hidden_by_sellers?: seller_hidden_usersUncheckedUpdateManyWithoutSellerNestedInput
    hidden_users?: seller_hidden_usersUncheckedUpdateManyWithoutUserNestedInput
  }

  export type messagesUpsertWithWhereUniqueWithoutConversationInput = {
    where: messagesWhereUniqueInput
    update: XOR<messagesUpdateWithoutConversationInput, messagesUncheckedUpdateWithoutConversationInput>
    create: XOR<messagesCreateWithoutConversationInput, messagesUncheckedCreateWithoutConversationInput>
  }

  export type messagesUpdateWithWhereUniqueWithoutConversationInput = {
    where: messagesWhereUniqueInput
    data: XOR<messagesUpdateWithoutConversationInput, messagesUncheckedUpdateWithoutConversationInput>
  }

  export type messagesUpdateManyWithWhereWithoutConversationInput = {
    where: messagesScalarWhereInput
    data: XOR<messagesUpdateManyMutationInput, messagesUncheckedUpdateManyWithoutConversationInput>
  }

  export type messagesScalarWhereInput = {
    AND?: messagesScalarWhereInput | messagesScalarWhereInput[]
    OR?: messagesScalarWhereInput[]
    NOT?: messagesScalarWhereInput | messagesScalarWhereInput[]
    id?: IntFilter<"messages"> | number
    chat_id?: StringFilter<"messages"> | string
    sender?: StringFilter<"messages"> | string
    message?: StringFilter<"messages"> | string
    created_at?: DateTimeFilter<"messages"> | Date | string
  }

  export type conversationsCreateWithoutMessagesInput = {
    chat_id: string
    title?: string | null
    started_at?: Date | string
    user: usersCreateNestedOneWithoutConversationsInput
  }

  export type conversationsUncheckedCreateWithoutMessagesInput = {
    id?: number
    chat_id: string
    title?: string | null
    started_at?: Date | string
    user_id: number
  }

  export type conversationsCreateOrConnectWithoutMessagesInput = {
    where: conversationsWhereUniqueInput
    create: XOR<conversationsCreateWithoutMessagesInput, conversationsUncheckedCreateWithoutMessagesInput>
  }

  export type conversationsUpsertWithoutMessagesInput = {
    update: XOR<conversationsUpdateWithoutMessagesInput, conversationsUncheckedUpdateWithoutMessagesInput>
    create: XOR<conversationsCreateWithoutMessagesInput, conversationsUncheckedCreateWithoutMessagesInput>
    where?: conversationsWhereInput
  }

  export type conversationsUpdateToOneWithWhereWithoutMessagesInput = {
    where?: conversationsWhereInput
    data: XOR<conversationsUpdateWithoutMessagesInput, conversationsUncheckedUpdateWithoutMessagesInput>
  }

  export type conversationsUpdateWithoutMessagesInput = {
    chat_id?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    started_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: usersUpdateOneRequiredWithoutConversationsNestedInput
  }

  export type conversationsUncheckedUpdateWithoutMessagesInput = {
    id?: IntFieldUpdateOperationsInput | number
    chat_id?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    started_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: IntFieldUpdateOperationsInput | number
  }

  export type usersCreateWithoutReset_password_tokenInput = {
    uuid: string
    username: string
    email: string
    full_name?: string | null
    password?: string | null
    phone_number?: string | null
    avatar?: string | null
    gender?: boolean | null
    day_of_birth?: string | null
    email_verified_at?: Date | string | null
    last_login?: Date | string | null
    is_public?: boolean
    is_activated?: boolean
    is_deleted?: boolean
    two_factor_enabled?: boolean
    provider?: string
    provider_id?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    role: rolesCreateNestedOneWithoutUsersInput
    addresses?: addressesCreateNestedManyWithoutUserInput
    orders?: ordersCreateNestedManyWithoutUserInput
    cart_items?: cart_itemsCreateNestedManyWithoutUserInput
    reviews?: reviewsCreateNestedManyWithoutUserInput
    payments?: paymentsCreateNestedManyWithoutUserInput
    conversations?: conversationsCreateNestedManyWithoutUserInput
    shops?: shopsCreateNestedManyWithoutSellerInput
    hidden_by_sellers?: seller_hidden_usersCreateNestedManyWithoutSellerInput
    hidden_users?: seller_hidden_usersCreateNestedManyWithoutUserInput
  }

  export type usersUncheckedCreateWithoutReset_password_tokenInput = {
    id?: number
    uuid: string
    username: string
    email: string
    full_name?: string | null
    password?: string | null
    phone_number?: string | null
    avatar?: string | null
    gender?: boolean | null
    day_of_birth?: string | null
    email_verified_at?: Date | string | null
    last_login?: Date | string | null
    role_id: number
    is_public?: boolean
    is_activated?: boolean
    is_deleted?: boolean
    two_factor_enabled?: boolean
    provider?: string
    provider_id?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    addresses?: addressesUncheckedCreateNestedManyWithoutUserInput
    orders?: ordersUncheckedCreateNestedManyWithoutUserInput
    cart_items?: cart_itemsUncheckedCreateNestedManyWithoutUserInput
    reviews?: reviewsUncheckedCreateNestedManyWithoutUserInput
    payments?: paymentsUncheckedCreateNestedManyWithoutUserInput
    conversations?: conversationsUncheckedCreateNestedManyWithoutUserInput
    shops?: shopsUncheckedCreateNestedManyWithoutSellerInput
    hidden_by_sellers?: seller_hidden_usersUncheckedCreateNestedManyWithoutSellerInput
    hidden_users?: seller_hidden_usersUncheckedCreateNestedManyWithoutUserInput
  }

  export type usersCreateOrConnectWithoutReset_password_tokenInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutReset_password_tokenInput, usersUncheckedCreateWithoutReset_password_tokenInput>
  }

  export type usersUpsertWithoutReset_password_tokenInput = {
    update: XOR<usersUpdateWithoutReset_password_tokenInput, usersUncheckedUpdateWithoutReset_password_tokenInput>
    create: XOR<usersCreateWithoutReset_password_tokenInput, usersUncheckedCreateWithoutReset_password_tokenInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutReset_password_tokenInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutReset_password_tokenInput, usersUncheckedUpdateWithoutReset_password_tokenInput>
  }

  export type usersUpdateWithoutReset_password_tokenInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    full_name?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableBoolFieldUpdateOperationsInput | boolean | null
    day_of_birth?: NullableStringFieldUpdateOperationsInput | string | null
    email_verified_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_public?: BoolFieldUpdateOperationsInput | boolean
    is_activated?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    two_factor_enabled?: BoolFieldUpdateOperationsInput | boolean
    provider?: StringFieldUpdateOperationsInput | string
    provider_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: rolesUpdateOneRequiredWithoutUsersNestedInput
    addresses?: addressesUpdateManyWithoutUserNestedInput
    orders?: ordersUpdateManyWithoutUserNestedInput
    cart_items?: cart_itemsUpdateManyWithoutUserNestedInput
    reviews?: reviewsUpdateManyWithoutUserNestedInput
    payments?: paymentsUpdateManyWithoutUserNestedInput
    conversations?: conversationsUpdateManyWithoutUserNestedInput
    shops?: shopsUpdateManyWithoutSellerNestedInput
    hidden_by_sellers?: seller_hidden_usersUpdateManyWithoutSellerNestedInput
    hidden_users?: seller_hidden_usersUpdateManyWithoutUserNestedInput
  }

  export type usersUncheckedUpdateWithoutReset_password_tokenInput = {
    id?: IntFieldUpdateOperationsInput | number
    uuid?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    full_name?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableBoolFieldUpdateOperationsInput | boolean | null
    day_of_birth?: NullableStringFieldUpdateOperationsInput | string | null
    email_verified_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    role_id?: IntFieldUpdateOperationsInput | number
    is_public?: BoolFieldUpdateOperationsInput | boolean
    is_activated?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    two_factor_enabled?: BoolFieldUpdateOperationsInput | boolean
    provider?: StringFieldUpdateOperationsInput | string
    provider_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    addresses?: addressesUncheckedUpdateManyWithoutUserNestedInput
    orders?: ordersUncheckedUpdateManyWithoutUserNestedInput
    cart_items?: cart_itemsUncheckedUpdateManyWithoutUserNestedInput
    reviews?: reviewsUncheckedUpdateManyWithoutUserNestedInput
    payments?: paymentsUncheckedUpdateManyWithoutUserNestedInput
    conversations?: conversationsUncheckedUpdateManyWithoutUserNestedInput
    shops?: shopsUncheckedUpdateManyWithoutSellerNestedInput
    hidden_by_sellers?: seller_hidden_usersUncheckedUpdateManyWithoutSellerNestedInput
    hidden_users?: seller_hidden_usersUncheckedUpdateManyWithoutUserNestedInput
  }

  export type usersCreateWithoutHidden_by_sellersInput = {
    uuid: string
    username: string
    email: string
    full_name?: string | null
    password?: string | null
    phone_number?: string | null
    avatar?: string | null
    gender?: boolean | null
    day_of_birth?: string | null
    email_verified_at?: Date | string | null
    last_login?: Date | string | null
    is_public?: boolean
    is_activated?: boolean
    is_deleted?: boolean
    two_factor_enabled?: boolean
    provider?: string
    provider_id?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    role: rolesCreateNestedOneWithoutUsersInput
    addresses?: addressesCreateNestedManyWithoutUserInput
    orders?: ordersCreateNestedManyWithoutUserInput
    cart_items?: cart_itemsCreateNestedManyWithoutUserInput
    reviews?: reviewsCreateNestedManyWithoutUserInput
    payments?: paymentsCreateNestedManyWithoutUserInput
    conversations?: conversationsCreateNestedManyWithoutUserInput
    reset_password_token?: reset_password_tokenCreateNestedManyWithoutUserInput
    shops?: shopsCreateNestedManyWithoutSellerInput
    hidden_users?: seller_hidden_usersCreateNestedManyWithoutUserInput
  }

  export type usersUncheckedCreateWithoutHidden_by_sellersInput = {
    id?: number
    uuid: string
    username: string
    email: string
    full_name?: string | null
    password?: string | null
    phone_number?: string | null
    avatar?: string | null
    gender?: boolean | null
    day_of_birth?: string | null
    email_verified_at?: Date | string | null
    last_login?: Date | string | null
    role_id: number
    is_public?: boolean
    is_activated?: boolean
    is_deleted?: boolean
    two_factor_enabled?: boolean
    provider?: string
    provider_id?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    addresses?: addressesUncheckedCreateNestedManyWithoutUserInput
    orders?: ordersUncheckedCreateNestedManyWithoutUserInput
    cart_items?: cart_itemsUncheckedCreateNestedManyWithoutUserInput
    reviews?: reviewsUncheckedCreateNestedManyWithoutUserInput
    payments?: paymentsUncheckedCreateNestedManyWithoutUserInput
    conversations?: conversationsUncheckedCreateNestedManyWithoutUserInput
    reset_password_token?: reset_password_tokenUncheckedCreateNestedManyWithoutUserInput
    shops?: shopsUncheckedCreateNestedManyWithoutSellerInput
    hidden_users?: seller_hidden_usersUncheckedCreateNestedManyWithoutUserInput
  }

  export type usersCreateOrConnectWithoutHidden_by_sellersInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutHidden_by_sellersInput, usersUncheckedCreateWithoutHidden_by_sellersInput>
  }

  export type usersCreateWithoutHidden_usersInput = {
    uuid: string
    username: string
    email: string
    full_name?: string | null
    password?: string | null
    phone_number?: string | null
    avatar?: string | null
    gender?: boolean | null
    day_of_birth?: string | null
    email_verified_at?: Date | string | null
    last_login?: Date | string | null
    is_public?: boolean
    is_activated?: boolean
    is_deleted?: boolean
    two_factor_enabled?: boolean
    provider?: string
    provider_id?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    role: rolesCreateNestedOneWithoutUsersInput
    addresses?: addressesCreateNestedManyWithoutUserInput
    orders?: ordersCreateNestedManyWithoutUserInput
    cart_items?: cart_itemsCreateNestedManyWithoutUserInput
    reviews?: reviewsCreateNestedManyWithoutUserInput
    payments?: paymentsCreateNestedManyWithoutUserInput
    conversations?: conversationsCreateNestedManyWithoutUserInput
    reset_password_token?: reset_password_tokenCreateNestedManyWithoutUserInput
    shops?: shopsCreateNestedManyWithoutSellerInput
    hidden_by_sellers?: seller_hidden_usersCreateNestedManyWithoutSellerInput
  }

  export type usersUncheckedCreateWithoutHidden_usersInput = {
    id?: number
    uuid: string
    username: string
    email: string
    full_name?: string | null
    password?: string | null
    phone_number?: string | null
    avatar?: string | null
    gender?: boolean | null
    day_of_birth?: string | null
    email_verified_at?: Date | string | null
    last_login?: Date | string | null
    role_id: number
    is_public?: boolean
    is_activated?: boolean
    is_deleted?: boolean
    two_factor_enabled?: boolean
    provider?: string
    provider_id?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    addresses?: addressesUncheckedCreateNestedManyWithoutUserInput
    orders?: ordersUncheckedCreateNestedManyWithoutUserInput
    cart_items?: cart_itemsUncheckedCreateNestedManyWithoutUserInput
    reviews?: reviewsUncheckedCreateNestedManyWithoutUserInput
    payments?: paymentsUncheckedCreateNestedManyWithoutUserInput
    conversations?: conversationsUncheckedCreateNestedManyWithoutUserInput
    reset_password_token?: reset_password_tokenUncheckedCreateNestedManyWithoutUserInput
    shops?: shopsUncheckedCreateNestedManyWithoutSellerInput
    hidden_by_sellers?: seller_hidden_usersUncheckedCreateNestedManyWithoutSellerInput
  }

  export type usersCreateOrConnectWithoutHidden_usersInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutHidden_usersInput, usersUncheckedCreateWithoutHidden_usersInput>
  }

  export type usersUpsertWithoutHidden_by_sellersInput = {
    update: XOR<usersUpdateWithoutHidden_by_sellersInput, usersUncheckedUpdateWithoutHidden_by_sellersInput>
    create: XOR<usersCreateWithoutHidden_by_sellersInput, usersUncheckedCreateWithoutHidden_by_sellersInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutHidden_by_sellersInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutHidden_by_sellersInput, usersUncheckedUpdateWithoutHidden_by_sellersInput>
  }

  export type usersUpdateWithoutHidden_by_sellersInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    full_name?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableBoolFieldUpdateOperationsInput | boolean | null
    day_of_birth?: NullableStringFieldUpdateOperationsInput | string | null
    email_verified_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_public?: BoolFieldUpdateOperationsInput | boolean
    is_activated?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    two_factor_enabled?: BoolFieldUpdateOperationsInput | boolean
    provider?: StringFieldUpdateOperationsInput | string
    provider_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: rolesUpdateOneRequiredWithoutUsersNestedInput
    addresses?: addressesUpdateManyWithoutUserNestedInput
    orders?: ordersUpdateManyWithoutUserNestedInput
    cart_items?: cart_itemsUpdateManyWithoutUserNestedInput
    reviews?: reviewsUpdateManyWithoutUserNestedInput
    payments?: paymentsUpdateManyWithoutUserNestedInput
    conversations?: conversationsUpdateManyWithoutUserNestedInput
    reset_password_token?: reset_password_tokenUpdateManyWithoutUserNestedInput
    shops?: shopsUpdateManyWithoutSellerNestedInput
    hidden_users?: seller_hidden_usersUpdateManyWithoutUserNestedInput
  }

  export type usersUncheckedUpdateWithoutHidden_by_sellersInput = {
    id?: IntFieldUpdateOperationsInput | number
    uuid?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    full_name?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableBoolFieldUpdateOperationsInput | boolean | null
    day_of_birth?: NullableStringFieldUpdateOperationsInput | string | null
    email_verified_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    role_id?: IntFieldUpdateOperationsInput | number
    is_public?: BoolFieldUpdateOperationsInput | boolean
    is_activated?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    two_factor_enabled?: BoolFieldUpdateOperationsInput | boolean
    provider?: StringFieldUpdateOperationsInput | string
    provider_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    addresses?: addressesUncheckedUpdateManyWithoutUserNestedInput
    orders?: ordersUncheckedUpdateManyWithoutUserNestedInput
    cart_items?: cart_itemsUncheckedUpdateManyWithoutUserNestedInput
    reviews?: reviewsUncheckedUpdateManyWithoutUserNestedInput
    payments?: paymentsUncheckedUpdateManyWithoutUserNestedInput
    conversations?: conversationsUncheckedUpdateManyWithoutUserNestedInput
    reset_password_token?: reset_password_tokenUncheckedUpdateManyWithoutUserNestedInput
    shops?: shopsUncheckedUpdateManyWithoutSellerNestedInput
    hidden_users?: seller_hidden_usersUncheckedUpdateManyWithoutUserNestedInput
  }

  export type usersUpsertWithoutHidden_usersInput = {
    update: XOR<usersUpdateWithoutHidden_usersInput, usersUncheckedUpdateWithoutHidden_usersInput>
    create: XOR<usersCreateWithoutHidden_usersInput, usersUncheckedCreateWithoutHidden_usersInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutHidden_usersInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutHidden_usersInput, usersUncheckedUpdateWithoutHidden_usersInput>
  }

  export type usersUpdateWithoutHidden_usersInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    full_name?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableBoolFieldUpdateOperationsInput | boolean | null
    day_of_birth?: NullableStringFieldUpdateOperationsInput | string | null
    email_verified_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_public?: BoolFieldUpdateOperationsInput | boolean
    is_activated?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    two_factor_enabled?: BoolFieldUpdateOperationsInput | boolean
    provider?: StringFieldUpdateOperationsInput | string
    provider_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: rolesUpdateOneRequiredWithoutUsersNestedInput
    addresses?: addressesUpdateManyWithoutUserNestedInput
    orders?: ordersUpdateManyWithoutUserNestedInput
    cart_items?: cart_itemsUpdateManyWithoutUserNestedInput
    reviews?: reviewsUpdateManyWithoutUserNestedInput
    payments?: paymentsUpdateManyWithoutUserNestedInput
    conversations?: conversationsUpdateManyWithoutUserNestedInput
    reset_password_token?: reset_password_tokenUpdateManyWithoutUserNestedInput
    shops?: shopsUpdateManyWithoutSellerNestedInput
    hidden_by_sellers?: seller_hidden_usersUpdateManyWithoutSellerNestedInput
  }

  export type usersUncheckedUpdateWithoutHidden_usersInput = {
    id?: IntFieldUpdateOperationsInput | number
    uuid?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    full_name?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableBoolFieldUpdateOperationsInput | boolean | null
    day_of_birth?: NullableStringFieldUpdateOperationsInput | string | null
    email_verified_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    role_id?: IntFieldUpdateOperationsInput | number
    is_public?: BoolFieldUpdateOperationsInput | boolean
    is_activated?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    two_factor_enabled?: BoolFieldUpdateOperationsInput | boolean
    provider?: StringFieldUpdateOperationsInput | string
    provider_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    addresses?: addressesUncheckedUpdateManyWithoutUserNestedInput
    orders?: ordersUncheckedUpdateManyWithoutUserNestedInput
    cart_items?: cart_itemsUncheckedUpdateManyWithoutUserNestedInput
    reviews?: reviewsUncheckedUpdateManyWithoutUserNestedInput
    payments?: paymentsUncheckedUpdateManyWithoutUserNestedInput
    conversations?: conversationsUncheckedUpdateManyWithoutUserNestedInput
    reset_password_token?: reset_password_tokenUncheckedUpdateManyWithoutUserNestedInput
    shops?: shopsUncheckedUpdateManyWithoutSellerNestedInput
    hidden_by_sellers?: seller_hidden_usersUncheckedUpdateManyWithoutSellerNestedInput
  }

  export type addressesCreateManyUserInput = {
    id?: number
    full_name: string
    phone_number: string
    address: string
    province_id?: number | null
    province_name?: string | null
    district_id?: number | null
    district_name?: string | null
    ward_code?: string | null
    ward_name?: string | null
    region_id?: number | null
    type_address?: $Enums.AddressTypeEnum | null
    is_default?: boolean
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type ordersCreateManyUserInput = {
    id?: number
    uuid: string
    address_id: number
    total_amount: number
    status?: $Enums.OrderStatusEnum
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type cart_itemsCreateManyUserInput = {
    id?: number
    product_id: number
    quantity: number
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type reviewsCreateManyUserInput = {
    id?: number
    uuid: string
    product_id: number
    rating: number
    comment?: string | null
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type paymentsCreateManyUserInput = {
    id?: number
    uuid: string
    order_id?: number | null
    amount: number
    provider: string
    transaction_id?: string | null
    status?: $Enums.PaymentStatusEnum
    items?: NullableJsonNullValueInput | InputJsonValue
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type conversationsCreateManyUserInput = {
    id?: number
    chat_id: string
    title?: string | null
    started_at?: Date | string
  }

  export type reset_password_tokenCreateManyUserInput = {
    id?: number
    token: string
    expires_at: Date | string
    created_at?: Date | string
  }

  export type shopsCreateManySellerInput = {
    id?: number
    uuid: string
    name: string
    slug: string
    description?: string | null
    logo?: string | null
    address_id?: number | null
    rating?: number | null
    is_active?: boolean
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type seller_hidden_usersCreateManySellerInput = {
    id?: number
    user_id: number
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type seller_hidden_usersCreateManyUserInput = {
    id?: number
    seller_id: number
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type addressesUpdateWithoutUserInput = {
    full_name?: StringFieldUpdateOperationsInput | string
    phone_number?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    province_id?: NullableIntFieldUpdateOperationsInput | number | null
    province_name?: NullableStringFieldUpdateOperationsInput | string | null
    district_id?: NullableIntFieldUpdateOperationsInput | number | null
    district_name?: NullableStringFieldUpdateOperationsInput | string | null
    ward_code?: NullableStringFieldUpdateOperationsInput | string | null
    ward_name?: NullableStringFieldUpdateOperationsInput | string | null
    region_id?: NullableIntFieldUpdateOperationsInput | number | null
    type_address?: NullableEnumAddressTypeEnumFieldUpdateOperationsInput | $Enums.AddressTypeEnum | null
    is_default?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    orders?: ordersUpdateManyWithoutAddressNestedInput
    shops?: shopsUpdateManyWithoutAddressNestedInput
  }

  export type addressesUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    full_name?: StringFieldUpdateOperationsInput | string
    phone_number?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    province_id?: NullableIntFieldUpdateOperationsInput | number | null
    province_name?: NullableStringFieldUpdateOperationsInput | string | null
    district_id?: NullableIntFieldUpdateOperationsInput | number | null
    district_name?: NullableStringFieldUpdateOperationsInput | string | null
    ward_code?: NullableStringFieldUpdateOperationsInput | string | null
    ward_name?: NullableStringFieldUpdateOperationsInput | string | null
    region_id?: NullableIntFieldUpdateOperationsInput | number | null
    type_address?: NullableEnumAddressTypeEnumFieldUpdateOperationsInput | $Enums.AddressTypeEnum | null
    is_default?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    orders?: ordersUncheckedUpdateManyWithoutAddressNestedInput
    shops?: shopsUncheckedUpdateManyWithoutAddressNestedInput
  }

  export type addressesUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    full_name?: StringFieldUpdateOperationsInput | string
    phone_number?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    province_id?: NullableIntFieldUpdateOperationsInput | number | null
    province_name?: NullableStringFieldUpdateOperationsInput | string | null
    district_id?: NullableIntFieldUpdateOperationsInput | number | null
    district_name?: NullableStringFieldUpdateOperationsInput | string | null
    ward_code?: NullableStringFieldUpdateOperationsInput | string | null
    ward_name?: NullableStringFieldUpdateOperationsInput | string | null
    region_id?: NullableIntFieldUpdateOperationsInput | number | null
    type_address?: NullableEnumAddressTypeEnumFieldUpdateOperationsInput | $Enums.AddressTypeEnum | null
    is_default?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ordersUpdateWithoutUserInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    total_amount?: FloatFieldUpdateOperationsInput | number
    status?: EnumOrderStatusEnumFieldUpdateOperationsInput | $Enums.OrderStatusEnum
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    address?: addressesUpdateOneRequiredWithoutOrdersNestedInput
    order_items?: order_itemsUpdateManyWithoutOrderNestedInput
    payments?: paymentsUpdateManyWithoutOrderNestedInput
  }

  export type ordersUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    uuid?: StringFieldUpdateOperationsInput | string
    address_id?: IntFieldUpdateOperationsInput | number
    total_amount?: FloatFieldUpdateOperationsInput | number
    status?: EnumOrderStatusEnumFieldUpdateOperationsInput | $Enums.OrderStatusEnum
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    order_items?: order_itemsUncheckedUpdateManyWithoutOrderNestedInput
    payments?: paymentsUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type ordersUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    uuid?: StringFieldUpdateOperationsInput | string
    address_id?: IntFieldUpdateOperationsInput | number
    total_amount?: FloatFieldUpdateOperationsInput | number
    status?: EnumOrderStatusEnumFieldUpdateOperationsInput | $Enums.OrderStatusEnum
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type cart_itemsUpdateWithoutUserInput = {
    quantity?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    product?: productsUpdateOneRequiredWithoutCart_itemsNestedInput
  }

  export type cart_itemsUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    product_id?: IntFieldUpdateOperationsInput | number
    quantity?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type cart_itemsUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    product_id?: IntFieldUpdateOperationsInput | number
    quantity?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type reviewsUpdateWithoutUserInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    rating?: IntFieldUpdateOperationsInput | number
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    product?: productsUpdateOneRequiredWithoutReviewsNestedInput
  }

  export type reviewsUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    uuid?: StringFieldUpdateOperationsInput | string
    product_id?: IntFieldUpdateOperationsInput | number
    rating?: IntFieldUpdateOperationsInput | number
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type reviewsUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    uuid?: StringFieldUpdateOperationsInput | string
    product_id?: IntFieldUpdateOperationsInput | number
    rating?: IntFieldUpdateOperationsInput | number
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type paymentsUpdateWithoutUserInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    provider?: StringFieldUpdateOperationsInput | string
    transaction_id?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumPaymentStatusEnumFieldUpdateOperationsInput | $Enums.PaymentStatusEnum
    items?: NullableJsonNullValueInput | InputJsonValue
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    order?: ordersUpdateOneWithoutPaymentsNestedInput
  }

  export type paymentsUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    uuid?: StringFieldUpdateOperationsInput | string
    order_id?: NullableIntFieldUpdateOperationsInput | number | null
    amount?: FloatFieldUpdateOperationsInput | number
    provider?: StringFieldUpdateOperationsInput | string
    transaction_id?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumPaymentStatusEnumFieldUpdateOperationsInput | $Enums.PaymentStatusEnum
    items?: NullableJsonNullValueInput | InputJsonValue
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type paymentsUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    uuid?: StringFieldUpdateOperationsInput | string
    order_id?: NullableIntFieldUpdateOperationsInput | number | null
    amount?: FloatFieldUpdateOperationsInput | number
    provider?: StringFieldUpdateOperationsInput | string
    transaction_id?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumPaymentStatusEnumFieldUpdateOperationsInput | $Enums.PaymentStatusEnum
    items?: NullableJsonNullValueInput | InputJsonValue
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type conversationsUpdateWithoutUserInput = {
    chat_id?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    started_at?: DateTimeFieldUpdateOperationsInput | Date | string
    messages?: messagesUpdateManyWithoutConversationNestedInput
  }

  export type conversationsUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    chat_id?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    started_at?: DateTimeFieldUpdateOperationsInput | Date | string
    messages?: messagesUncheckedUpdateManyWithoutConversationNestedInput
  }

  export type conversationsUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    chat_id?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    started_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type reset_password_tokenUpdateWithoutUserInput = {
    token?: StringFieldUpdateOperationsInput | string
    expires_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type reset_password_tokenUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    token?: StringFieldUpdateOperationsInput | string
    expires_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type reset_password_tokenUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    token?: StringFieldUpdateOperationsInput | string
    expires_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type shopsUpdateWithoutSellerInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    rating?: NullableFloatFieldUpdateOperationsInput | number | null
    is_active?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    address?: addressesUpdateOneWithoutShopsNestedInput
    products?: productsUpdateManyWithoutShopNestedInput
  }

  export type shopsUncheckedUpdateWithoutSellerInput = {
    id?: IntFieldUpdateOperationsInput | number
    uuid?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    address_id?: NullableIntFieldUpdateOperationsInput | number | null
    rating?: NullableFloatFieldUpdateOperationsInput | number | null
    is_active?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    products?: productsUncheckedUpdateManyWithoutShopNestedInput
  }

  export type shopsUncheckedUpdateManyWithoutSellerInput = {
    id?: IntFieldUpdateOperationsInput | number
    uuid?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    address_id?: NullableIntFieldUpdateOperationsInput | number | null
    rating?: NullableFloatFieldUpdateOperationsInput | number | null
    is_active?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type seller_hidden_usersUpdateWithoutSellerInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: usersUpdateOneRequiredWithoutHidden_usersNestedInput
  }

  export type seller_hidden_usersUncheckedUpdateWithoutSellerInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type seller_hidden_usersUncheckedUpdateManyWithoutSellerInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type seller_hidden_usersUpdateWithoutUserInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    seller?: usersUpdateOneRequiredWithoutHidden_by_sellersNestedInput
  }

  export type seller_hidden_usersUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    seller_id?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type seller_hidden_usersUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    seller_id?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type usersCreateManyRoleInput = {
    id?: number
    uuid: string
    username: string
    email: string
    full_name?: string | null
    password?: string | null
    phone_number?: string | null
    avatar?: string | null
    gender?: boolean | null
    day_of_birth?: string | null
    email_verified_at?: Date | string | null
    last_login?: Date | string | null
    is_public?: boolean
    is_activated?: boolean
    is_deleted?: boolean
    two_factor_enabled?: boolean
    provider?: string
    provider_id?: string | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type role_permissionsCreateManyRoleInput = {
    id?: number
    permission_id: number
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type usersUpdateWithoutRoleInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    full_name?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableBoolFieldUpdateOperationsInput | boolean | null
    day_of_birth?: NullableStringFieldUpdateOperationsInput | string | null
    email_verified_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_public?: BoolFieldUpdateOperationsInput | boolean
    is_activated?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    two_factor_enabled?: BoolFieldUpdateOperationsInput | boolean
    provider?: StringFieldUpdateOperationsInput | string
    provider_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    addresses?: addressesUpdateManyWithoutUserNestedInput
    orders?: ordersUpdateManyWithoutUserNestedInput
    cart_items?: cart_itemsUpdateManyWithoutUserNestedInput
    reviews?: reviewsUpdateManyWithoutUserNestedInput
    payments?: paymentsUpdateManyWithoutUserNestedInput
    conversations?: conversationsUpdateManyWithoutUserNestedInput
    reset_password_token?: reset_password_tokenUpdateManyWithoutUserNestedInput
    shops?: shopsUpdateManyWithoutSellerNestedInput
    hidden_by_sellers?: seller_hidden_usersUpdateManyWithoutSellerNestedInput
    hidden_users?: seller_hidden_usersUpdateManyWithoutUserNestedInput
  }

  export type usersUncheckedUpdateWithoutRoleInput = {
    id?: IntFieldUpdateOperationsInput | number
    uuid?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    full_name?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableBoolFieldUpdateOperationsInput | boolean | null
    day_of_birth?: NullableStringFieldUpdateOperationsInput | string | null
    email_verified_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_public?: BoolFieldUpdateOperationsInput | boolean
    is_activated?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    two_factor_enabled?: BoolFieldUpdateOperationsInput | boolean
    provider?: StringFieldUpdateOperationsInput | string
    provider_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    addresses?: addressesUncheckedUpdateManyWithoutUserNestedInput
    orders?: ordersUncheckedUpdateManyWithoutUserNestedInput
    cart_items?: cart_itemsUncheckedUpdateManyWithoutUserNestedInput
    reviews?: reviewsUncheckedUpdateManyWithoutUserNestedInput
    payments?: paymentsUncheckedUpdateManyWithoutUserNestedInput
    conversations?: conversationsUncheckedUpdateManyWithoutUserNestedInput
    reset_password_token?: reset_password_tokenUncheckedUpdateManyWithoutUserNestedInput
    shops?: shopsUncheckedUpdateManyWithoutSellerNestedInput
    hidden_by_sellers?: seller_hidden_usersUncheckedUpdateManyWithoutSellerNestedInput
    hidden_users?: seller_hidden_usersUncheckedUpdateManyWithoutUserNestedInput
  }

  export type usersUncheckedUpdateManyWithoutRoleInput = {
    id?: IntFieldUpdateOperationsInput | number
    uuid?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    full_name?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableBoolFieldUpdateOperationsInput | boolean | null
    day_of_birth?: NullableStringFieldUpdateOperationsInput | string | null
    email_verified_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_public?: BoolFieldUpdateOperationsInput | boolean
    is_activated?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    two_factor_enabled?: BoolFieldUpdateOperationsInput | boolean
    provider?: StringFieldUpdateOperationsInput | string
    provider_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type role_permissionsUpdateWithoutRoleInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    permission?: permissionsUpdateOneRequiredWithoutRole_permissionsNestedInput
  }

  export type role_permissionsUncheckedUpdateWithoutRoleInput = {
    id?: IntFieldUpdateOperationsInput | number
    permission_id?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type role_permissionsUncheckedUpdateManyWithoutRoleInput = {
    id?: IntFieldUpdateOperationsInput | number
    permission_id?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type role_permissionsCreateManyPermissionInput = {
    id?: number
    role_id: number
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type role_permissionsUpdateWithoutPermissionInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: rolesUpdateOneRequiredWithoutRole_permissionsNestedInput
  }

  export type role_permissionsUncheckedUpdateWithoutPermissionInput = {
    id?: IntFieldUpdateOperationsInput | number
    role_id?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type role_permissionsUncheckedUpdateManyWithoutPermissionInput = {
    id?: IntFieldUpdateOperationsInput | number
    role_id?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type productsCreateManyShopInput = {
    id?: number
    uuid: string
    name: string
    slug: string
    description?: string | null
    old_price?: number | null
    new_price: number
    discount_percentage?: number | null
    stock?: number
    sold?: number
    weight?: number | null
    category_id?: number | null
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type productsUpdateWithoutShopInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    old_price?: NullableFloatFieldUpdateOperationsInput | number | null
    new_price?: FloatFieldUpdateOperationsInput | number
    discount_percentage?: NullableFloatFieldUpdateOperationsInput | number | null
    stock?: IntFieldUpdateOperationsInput | number
    sold?: IntFieldUpdateOperationsInput | number
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: categoriesUpdateOneWithoutProductsNestedInput
    cart_items?: cart_itemsUpdateManyWithoutProductNestedInput
    order_items?: order_itemsUpdateManyWithoutProductNestedInput
    reviews?: reviewsUpdateManyWithoutProductNestedInput
    product_images?: product_imagesUpdateManyWithoutProductNestedInput
    product_specifications?: product_specificationsUpdateManyWithoutProductNestedInput
    product_attributes?: product_attributesUpdateManyWithoutProductNestedInput
  }

  export type productsUncheckedUpdateWithoutShopInput = {
    id?: IntFieldUpdateOperationsInput | number
    uuid?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    old_price?: NullableFloatFieldUpdateOperationsInput | number | null
    new_price?: FloatFieldUpdateOperationsInput | number
    discount_percentage?: NullableFloatFieldUpdateOperationsInput | number | null
    stock?: IntFieldUpdateOperationsInput | number
    sold?: IntFieldUpdateOperationsInput | number
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    category_id?: NullableIntFieldUpdateOperationsInput | number | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    cart_items?: cart_itemsUncheckedUpdateManyWithoutProductNestedInput
    order_items?: order_itemsUncheckedUpdateManyWithoutProductNestedInput
    reviews?: reviewsUncheckedUpdateManyWithoutProductNestedInput
    product_images?: product_imagesUncheckedUpdateManyWithoutProductNestedInput
    product_specifications?: product_specificationsUncheckedUpdateManyWithoutProductNestedInput
    product_attributes?: product_attributesUncheckedUpdateManyWithoutProductNestedInput
  }

  export type productsUncheckedUpdateManyWithoutShopInput = {
    id?: IntFieldUpdateOperationsInput | number
    uuid?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    old_price?: NullableFloatFieldUpdateOperationsInput | number | null
    new_price?: FloatFieldUpdateOperationsInput | number
    discount_percentage?: NullableFloatFieldUpdateOperationsInput | number | null
    stock?: IntFieldUpdateOperationsInput | number
    sold?: IntFieldUpdateOperationsInput | number
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    category_id?: NullableIntFieldUpdateOperationsInput | number | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ordersCreateManyAddressInput = {
    id?: number
    uuid: string
    user_id: number
    total_amount: number
    status?: $Enums.OrderStatusEnum
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type shopsCreateManyAddressInput = {
    id?: number
    uuid: string
    seller_id: number
    name: string
    slug: string
    description?: string | null
    logo?: string | null
    rating?: number | null
    is_active?: boolean
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type ordersUpdateWithoutAddressInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    total_amount?: FloatFieldUpdateOperationsInput | number
    status?: EnumOrderStatusEnumFieldUpdateOperationsInput | $Enums.OrderStatusEnum
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: usersUpdateOneRequiredWithoutOrdersNestedInput
    order_items?: order_itemsUpdateManyWithoutOrderNestedInput
    payments?: paymentsUpdateManyWithoutOrderNestedInput
  }

  export type ordersUncheckedUpdateWithoutAddressInput = {
    id?: IntFieldUpdateOperationsInput | number
    uuid?: StringFieldUpdateOperationsInput | string
    user_id?: IntFieldUpdateOperationsInput | number
    total_amount?: FloatFieldUpdateOperationsInput | number
    status?: EnumOrderStatusEnumFieldUpdateOperationsInput | $Enums.OrderStatusEnum
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    order_items?: order_itemsUncheckedUpdateManyWithoutOrderNestedInput
    payments?: paymentsUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type ordersUncheckedUpdateManyWithoutAddressInput = {
    id?: IntFieldUpdateOperationsInput | number
    uuid?: StringFieldUpdateOperationsInput | string
    user_id?: IntFieldUpdateOperationsInput | number
    total_amount?: FloatFieldUpdateOperationsInput | number
    status?: EnumOrderStatusEnumFieldUpdateOperationsInput | $Enums.OrderStatusEnum
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type shopsUpdateWithoutAddressInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    rating?: NullableFloatFieldUpdateOperationsInput | number | null
    is_active?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    seller?: usersUpdateOneRequiredWithoutShopsNestedInput
    products?: productsUpdateManyWithoutShopNestedInput
  }

  export type shopsUncheckedUpdateWithoutAddressInput = {
    id?: IntFieldUpdateOperationsInput | number
    uuid?: StringFieldUpdateOperationsInput | string
    seller_id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    rating?: NullableFloatFieldUpdateOperationsInput | number | null
    is_active?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    products?: productsUncheckedUpdateManyWithoutShopNestedInput
  }

  export type shopsUncheckedUpdateManyWithoutAddressInput = {
    id?: IntFieldUpdateOperationsInput | number
    uuid?: StringFieldUpdateOperationsInput | string
    seller_id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    rating?: NullableFloatFieldUpdateOperationsInput | number | null
    is_active?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type cart_itemsCreateManyProductInput = {
    id?: number
    user_id: number
    quantity: number
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type order_itemsCreateManyProductInput = {
    id?: number
    order_id: number
    quantity: number
    unit_price: number
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type reviewsCreateManyProductInput = {
    id?: number
    uuid: string
    user_id: number
    rating: number
    comment?: string | null
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type product_imagesCreateManyProductInput = {
    id?: number
    url: string
    is_primary?: boolean
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type product_specificationsCreateManyProductInput = {
    id?: number
    key: string
    value: string
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type product_attributesCreateManyProductInput = {
    id?: number
    specification_id: number
    name: string
    value: string
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type cart_itemsUpdateWithoutProductInput = {
    quantity?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: usersUpdateOneRequiredWithoutCart_itemsNestedInput
  }

  export type cart_itemsUncheckedUpdateWithoutProductInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    quantity?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type cart_itemsUncheckedUpdateManyWithoutProductInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    quantity?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type order_itemsUpdateWithoutProductInput = {
    quantity?: IntFieldUpdateOperationsInput | number
    unit_price?: FloatFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    order?: ordersUpdateOneRequiredWithoutOrder_itemsNestedInput
  }

  export type order_itemsUncheckedUpdateWithoutProductInput = {
    id?: IntFieldUpdateOperationsInput | number
    order_id?: IntFieldUpdateOperationsInput | number
    quantity?: IntFieldUpdateOperationsInput | number
    unit_price?: FloatFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type order_itemsUncheckedUpdateManyWithoutProductInput = {
    id?: IntFieldUpdateOperationsInput | number
    order_id?: IntFieldUpdateOperationsInput | number
    quantity?: IntFieldUpdateOperationsInput | number
    unit_price?: FloatFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type reviewsUpdateWithoutProductInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    rating?: IntFieldUpdateOperationsInput | number
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: usersUpdateOneRequiredWithoutReviewsNestedInput
  }

  export type reviewsUncheckedUpdateWithoutProductInput = {
    id?: IntFieldUpdateOperationsInput | number
    uuid?: StringFieldUpdateOperationsInput | string
    user_id?: IntFieldUpdateOperationsInput | number
    rating?: IntFieldUpdateOperationsInput | number
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type reviewsUncheckedUpdateManyWithoutProductInput = {
    id?: IntFieldUpdateOperationsInput | number
    uuid?: StringFieldUpdateOperationsInput | string
    user_id?: IntFieldUpdateOperationsInput | number
    rating?: IntFieldUpdateOperationsInput | number
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type product_imagesUpdateWithoutProductInput = {
    url?: StringFieldUpdateOperationsInput | string
    is_primary?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type product_imagesUncheckedUpdateWithoutProductInput = {
    id?: IntFieldUpdateOperationsInput | number
    url?: StringFieldUpdateOperationsInput | string
    is_primary?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type product_imagesUncheckedUpdateManyWithoutProductInput = {
    id?: IntFieldUpdateOperationsInput | number
    url?: StringFieldUpdateOperationsInput | string
    is_primary?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type product_specificationsUpdateWithoutProductInput = {
    key?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    product_attributes?: product_attributesUpdateManyWithoutSpecificationNestedInput
  }

  export type product_specificationsUncheckedUpdateWithoutProductInput = {
    id?: IntFieldUpdateOperationsInput | number
    key?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    product_attributes?: product_attributesUncheckedUpdateManyWithoutSpecificationNestedInput
  }

  export type product_specificationsUncheckedUpdateManyWithoutProductInput = {
    id?: IntFieldUpdateOperationsInput | number
    key?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type product_attributesUpdateWithoutProductInput = {
    name?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    specification?: product_specificationsUpdateOneRequiredWithoutProduct_attributesNestedInput
  }

  export type product_attributesUncheckedUpdateWithoutProductInput = {
    id?: IntFieldUpdateOperationsInput | number
    specification_id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type product_attributesUncheckedUpdateManyWithoutProductInput = {
    id?: IntFieldUpdateOperationsInput | number
    specification_id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type categoriesCreateManyParentInput = {
    id?: number
    uuid: string
    name: string
    icon?: string | null
    slug: string
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type productsCreateManyCategoryInput = {
    id?: number
    uuid: string
    name: string
    slug: string
    description?: string | null
    old_price?: number | null
    new_price: number
    discount_percentage?: number | null
    stock?: number
    sold?: number
    weight?: number | null
    shop_id?: number | null
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type category_breadcrumbsCreateManyCategoryInput = {
    id?: number
    name: string
    path: string
    level: number
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type categoriesUpdateWithoutParentInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: StringFieldUpdateOperationsInput | string
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    children?: categoriesUpdateManyWithoutParentNestedInput
    products?: productsUpdateManyWithoutCategoryNestedInput
    category_breadcrumbs?: category_breadcrumbsUpdateManyWithoutCategoryNestedInput
  }

  export type categoriesUncheckedUpdateWithoutParentInput = {
    id?: IntFieldUpdateOperationsInput | number
    uuid?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: StringFieldUpdateOperationsInput | string
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    children?: categoriesUncheckedUpdateManyWithoutParentNestedInput
    products?: productsUncheckedUpdateManyWithoutCategoryNestedInput
    category_breadcrumbs?: category_breadcrumbsUncheckedUpdateManyWithoutCategoryNestedInput
  }

  export type categoriesUncheckedUpdateManyWithoutParentInput = {
    id?: IntFieldUpdateOperationsInput | number
    uuid?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: StringFieldUpdateOperationsInput | string
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type productsUpdateWithoutCategoryInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    old_price?: NullableFloatFieldUpdateOperationsInput | number | null
    new_price?: FloatFieldUpdateOperationsInput | number
    discount_percentage?: NullableFloatFieldUpdateOperationsInput | number | null
    stock?: IntFieldUpdateOperationsInput | number
    sold?: IntFieldUpdateOperationsInput | number
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    shop?: shopsUpdateOneWithoutProductsNestedInput
    cart_items?: cart_itemsUpdateManyWithoutProductNestedInput
    order_items?: order_itemsUpdateManyWithoutProductNestedInput
    reviews?: reviewsUpdateManyWithoutProductNestedInput
    product_images?: product_imagesUpdateManyWithoutProductNestedInput
    product_specifications?: product_specificationsUpdateManyWithoutProductNestedInput
    product_attributes?: product_attributesUpdateManyWithoutProductNestedInput
  }

  export type productsUncheckedUpdateWithoutCategoryInput = {
    id?: IntFieldUpdateOperationsInput | number
    uuid?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    old_price?: NullableFloatFieldUpdateOperationsInput | number | null
    new_price?: FloatFieldUpdateOperationsInput | number
    discount_percentage?: NullableFloatFieldUpdateOperationsInput | number | null
    stock?: IntFieldUpdateOperationsInput | number
    sold?: IntFieldUpdateOperationsInput | number
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    shop_id?: NullableIntFieldUpdateOperationsInput | number | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    cart_items?: cart_itemsUncheckedUpdateManyWithoutProductNestedInput
    order_items?: order_itemsUncheckedUpdateManyWithoutProductNestedInput
    reviews?: reviewsUncheckedUpdateManyWithoutProductNestedInput
    product_images?: product_imagesUncheckedUpdateManyWithoutProductNestedInput
    product_specifications?: product_specificationsUncheckedUpdateManyWithoutProductNestedInput
    product_attributes?: product_attributesUncheckedUpdateManyWithoutProductNestedInput
  }

  export type productsUncheckedUpdateManyWithoutCategoryInput = {
    id?: IntFieldUpdateOperationsInput | number
    uuid?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    old_price?: NullableFloatFieldUpdateOperationsInput | number | null
    new_price?: FloatFieldUpdateOperationsInput | number
    discount_percentage?: NullableFloatFieldUpdateOperationsInput | number | null
    stock?: IntFieldUpdateOperationsInput | number
    sold?: IntFieldUpdateOperationsInput | number
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    shop_id?: NullableIntFieldUpdateOperationsInput | number | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type category_breadcrumbsUpdateWithoutCategoryInput = {
    name?: StringFieldUpdateOperationsInput | string
    path?: StringFieldUpdateOperationsInput | string
    level?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type category_breadcrumbsUncheckedUpdateWithoutCategoryInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    path?: StringFieldUpdateOperationsInput | string
    level?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type category_breadcrumbsUncheckedUpdateManyWithoutCategoryInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    path?: StringFieldUpdateOperationsInput | string
    level?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type product_attributesCreateManySpecificationInput = {
    id?: number
    product_id: number
    name: string
    value: string
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type product_attributesUpdateWithoutSpecificationInput = {
    name?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    product?: productsUpdateOneRequiredWithoutProduct_attributesNestedInput
  }

  export type product_attributesUncheckedUpdateWithoutSpecificationInput = {
    id?: IntFieldUpdateOperationsInput | number
    product_id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type product_attributesUncheckedUpdateManyWithoutSpecificationInput = {
    id?: IntFieldUpdateOperationsInput | number
    product_id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type order_itemsCreateManyOrderInput = {
    id?: number
    product_id: number
    quantity: number
    unit_price: number
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type paymentsCreateManyOrderInput = {
    id?: number
    uuid: string
    user_id: number
    amount: number
    provider: string
    transaction_id?: string | null
    status?: $Enums.PaymentStatusEnum
    items?: NullableJsonNullValueInput | InputJsonValue
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type order_itemsUpdateWithoutOrderInput = {
    quantity?: IntFieldUpdateOperationsInput | number
    unit_price?: FloatFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    product?: productsUpdateOneRequiredWithoutOrder_itemsNestedInput
  }

  export type order_itemsUncheckedUpdateWithoutOrderInput = {
    id?: IntFieldUpdateOperationsInput | number
    product_id?: IntFieldUpdateOperationsInput | number
    quantity?: IntFieldUpdateOperationsInput | number
    unit_price?: FloatFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type order_itemsUncheckedUpdateManyWithoutOrderInput = {
    id?: IntFieldUpdateOperationsInput | number
    product_id?: IntFieldUpdateOperationsInput | number
    quantity?: IntFieldUpdateOperationsInput | number
    unit_price?: FloatFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type paymentsUpdateWithoutOrderInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    provider?: StringFieldUpdateOperationsInput | string
    transaction_id?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumPaymentStatusEnumFieldUpdateOperationsInput | $Enums.PaymentStatusEnum
    items?: NullableJsonNullValueInput | InputJsonValue
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: usersUpdateOneRequiredWithoutPaymentsNestedInput
  }

  export type paymentsUncheckedUpdateWithoutOrderInput = {
    id?: IntFieldUpdateOperationsInput | number
    uuid?: StringFieldUpdateOperationsInput | string
    user_id?: IntFieldUpdateOperationsInput | number
    amount?: FloatFieldUpdateOperationsInput | number
    provider?: StringFieldUpdateOperationsInput | string
    transaction_id?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumPaymentStatusEnumFieldUpdateOperationsInput | $Enums.PaymentStatusEnum
    items?: NullableJsonNullValueInput | InputJsonValue
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type paymentsUncheckedUpdateManyWithoutOrderInput = {
    id?: IntFieldUpdateOperationsInput | number
    uuid?: StringFieldUpdateOperationsInput | string
    user_id?: IntFieldUpdateOperationsInput | number
    amount?: FloatFieldUpdateOperationsInput | number
    provider?: StringFieldUpdateOperationsInput | string
    transaction_id?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumPaymentStatusEnumFieldUpdateOperationsInput | $Enums.PaymentStatusEnum
    items?: NullableJsonNullValueInput | InputJsonValue
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type messagesCreateManyConversationInput = {
    id?: number
    sender: string
    message: string
    created_at?: Date | string
  }

  export type messagesUpdateWithoutConversationInput = {
    sender?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type messagesUncheckedUpdateWithoutConversationInput = {
    id?: IntFieldUpdateOperationsInput | number
    sender?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type messagesUncheckedUpdateManyWithoutConversationInput = {
    id?: IntFieldUpdateOperationsInput | number
    sender?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}